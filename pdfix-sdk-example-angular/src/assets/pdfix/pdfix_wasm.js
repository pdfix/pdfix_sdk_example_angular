
var PDFIX_WASM = (function() {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;
  return (
function(PDFIX_WASM) {
  PDFIX_WASM = PDFIX_WASM || {};



// Support for growable heap + pthreads, where the buffer may change, so JS views
// must be updated.
function GROWABLE_HEAP_I8() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAP8;
}
function GROWABLE_HEAP_U8() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAPU8;
}
function GROWABLE_HEAP_I16() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAP16;
}
function GROWABLE_HEAP_U16() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAPU16;
}
function GROWABLE_HEAP_I32() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAP32;
}
function GROWABLE_HEAP_U32() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAPU32;
}
function GROWABLE_HEAP_F32() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAPF32;
}
function GROWABLE_HEAP_F64() {
  if (wasmMemory.buffer != buffer) {
    updateGlobalBufferAndViews(wasmMemory.buffer);
  }
  return HEAPF64;
}

var Module = typeof PDFIX_WASM !== "undefined" ? PDFIX_WASM : {};

var readyPromiseResolve, readyPromiseReject;

Module["ready"] = new Promise(function(resolve, reject) {
 readyPromiseResolve = resolve;
 readyPromiseReject = reject;
});

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_GetPdfix")) {
 Object.defineProperty(Module["ready"], "_GetPdfix", {
  configurable: true,
  get: function() {
   abort("You are getting _GetPdfix on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_GetPdfix", {
  configurable: true,
  set: function() {
   abort("You are setting _GetPdfix on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_GetPdfToHtml")) {
 Object.defineProperty(Module["ready"], "_GetPdfToHtml", {
  configurable: true,
  get: function() {
   abort("You are getting _GetPdfToHtml on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_GetPdfToHtml", {
  configurable: true,
  set: function() {
   abort("You are setting _GetPdfToHtml on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_malloc")) {
 Object.defineProperty(Module["ready"], "_malloc", {
  configurable: true,
  get: function() {
   abort("You are getting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_malloc", {
  configurable: true,
  set: function() {
   abort("You are setting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_free")) {
 Object.defineProperty(Module["ready"], "_free", {
  configurable: true,
  get: function() {
   abort("You are getting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_free", {
  configurable: true,
  set: function() {
   abort("You are setting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_stackSave")) {
 Object.defineProperty(Module["ready"], "_stackSave", {
  configurable: true,
  get: function() {
   abort("You are getting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_stackSave", {
  configurable: true,
  set: function() {
   abort("You are setting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_stackRestore")) {
 Object.defineProperty(Module["ready"], "_stackRestore", {
  configurable: true,
  get: function() {
   abort("You are getting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_stackRestore", {
  configurable: true,
  set: function() {
   abort("You are setting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_stackAlloc")) {
 Object.defineProperty(Module["ready"], "_stackAlloc", {
  configurable: true,
  get: function() {
   abort("You are getting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_stackAlloc", {
  configurable: true,
  set: function() {
   abort("You are setting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "___data_end")) {
 Object.defineProperty(Module["ready"], "___data_end", {
  configurable: true,
  get: function() {
   abort("You are getting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "___data_end", {
  configurable: true,
  set: function() {
   abort("You are setting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "___wasm_call_ctors")) {
 Object.defineProperty(Module["ready"], "___wasm_call_ctors", {
  configurable: true,
  get: function() {
   abort("You are getting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "___wasm_call_ctors", {
  configurable: true,
  set: function() {
   abort("You are setting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_fflush")) {
 Object.defineProperty(Module["ready"], "_fflush", {
  configurable: true,
  get: function() {
   abort("You are getting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_fflush", {
  configurable: true,
  set: function() {
   abort("You are setting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "___errno_location")) {
 Object.defineProperty(Module["ready"], "___errno_location", {
  configurable: true,
  get: function() {
   abort("You are getting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "___errno_location", {
  configurable: true,
  set: function() {
   abort("You are setting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_emscripten_get_global_libc")) {
 Object.defineProperty(Module["ready"], "_emscripten_get_global_libc", {
  configurable: true,
  get: function() {
   abort("You are getting _emscripten_get_global_libc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_emscripten_get_global_libc", {
  configurable: true,
  set: function() {
   abort("You are setting _emscripten_get_global_libc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "___pthread_tsd_run_dtors")) {
 Object.defineProperty(Module["ready"], "___pthread_tsd_run_dtors", {
  configurable: true,
  get: function() {
   abort("You are getting ___pthread_tsd_run_dtors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "___pthread_tsd_run_dtors", {
  configurable: true,
  set: function() {
   abort("You are setting ___pthread_tsd_run_dtors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "registerPthreadPtr")) {
 Object.defineProperty(Module["ready"], "registerPthreadPtr", {
  configurable: true,
  get: function() {
   abort("You are getting registerPthreadPtr on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "registerPthreadPtr", {
  configurable: true,
  set: function() {
   abort("You are setting registerPthreadPtr on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_pthread_self")) {
 Object.defineProperty(Module["ready"], "_pthread_self", {
  configurable: true,
  get: function() {
   abort("You are getting _pthread_self on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_pthread_self", {
  configurable: true,
  set: function() {
   abort("You are setting _pthread_self on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "___emscripten_pthread_data_constructor")) {
 Object.defineProperty(Module["ready"], "___emscripten_pthread_data_constructor", {
  configurable: true,
  get: function() {
   abort("You are getting ___emscripten_pthread_data_constructor on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "___emscripten_pthread_data_constructor", {
  configurable: true,
  set: function() {
   abort("You are setting ___emscripten_pthread_data_constructor on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_emscripten_futex_wake")) {
 Object.defineProperty(Module["ready"], "_emscripten_futex_wake", {
  configurable: true,
  get: function() {
   abort("You are getting _emscripten_futex_wake on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_emscripten_futex_wake", {
  configurable: true,
  set: function() {
   abort("You are setting _emscripten_futex_wake on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_memalign")) {
 Object.defineProperty(Module["ready"], "_memalign", {
  configurable: true,
  get: function() {
   abort("You are getting _memalign on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_memalign", {
  configurable: true,
  set: function() {
   abort("You are setting _memalign on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "establishStackSpace")) {
 Object.defineProperty(Module["ready"], "establishStackSpace", {
  configurable: true,
  get: function() {
   abort("You are getting establishStackSpace on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "establishStackSpace", {
  configurable: true,
  set: function() {
   abort("You are setting establishStackSpace on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "getNoExitRuntime")) {
 Object.defineProperty(Module["ready"], "getNoExitRuntime", {
  configurable: true,
  get: function() {
   abort("You are getting getNoExitRuntime on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "getNoExitRuntime", {
  configurable: true,
  set: function() {
   abort("You are setting getNoExitRuntime on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_memset")) {
 Object.defineProperty(Module["ready"], "_memset", {
  configurable: true,
  get: function() {
   abort("You are getting _memset on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_memset", {
  configurable: true,
  set: function() {
   abort("You are setting _memset on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_setThrew")) {
 Object.defineProperty(Module["ready"], "_setThrew", {
  configurable: true,
  get: function() {
   abort("You are getting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_setThrew", {
  configurable: true,
  set: function() {
   abort("You are setting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "__get_tzname")) {
 Object.defineProperty(Module["ready"], "__get_tzname", {
  configurable: true,
  get: function() {
   abort("You are getting __get_tzname on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "__get_tzname", {
  configurable: true,
  set: function() {
   abort("You are setting __get_tzname on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "__get_daylight")) {
 Object.defineProperty(Module["ready"], "__get_daylight", {
  configurable: true,
  get: function() {
   abort("You are getting __get_daylight on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "__get_daylight", {
  configurable: true,
  set: function() {
   abort("You are setting __get_daylight on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "__get_timezone")) {
 Object.defineProperty(Module["ready"], "__get_timezone", {
  configurable: true,
  get: function() {
   abort("You are getting __get_timezone on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "__get_timezone", {
  configurable: true,
  set: function() {
   abort("You are setting __get_timezone on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_emscripten_main_thread_process_queued_calls")) {
 Object.defineProperty(Module["ready"], "_emscripten_main_thread_process_queued_calls", {
  configurable: true,
  get: function() {
   abort("You are getting _emscripten_main_thread_process_queued_calls on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_emscripten_main_thread_process_queued_calls", {
  configurable: true,
  set: function() {
   abort("You are setting _emscripten_main_thread_process_queued_calls on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_realloc")) {
 Object.defineProperty(Module["ready"], "_realloc", {
  configurable: true,
  get: function() {
   abort("You are getting _realloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_realloc", {
  configurable: true,
  set: function() {
   abort("You are setting _realloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_testSetjmp")) {
 Object.defineProperty(Module["ready"], "_testSetjmp", {
  configurable: true,
  get: function() {
   abort("You are getting _testSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_testSetjmp", {
  configurable: true,
  set: function() {
   abort("You are setting _testSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "_saveSetjmp")) {
 Object.defineProperty(Module["ready"], "_saveSetjmp", {
  configurable: true,
  get: function() {
   abort("You are getting _saveSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "_saveSetjmp", {
  configurable: true,
  set: function() {
   abort("You are setting _saveSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "__emscripten_call_on_thread")) {
 Object.defineProperty(Module["ready"], "__emscripten_call_on_thread", {
  configurable: true,
  get: function() {
   abort("You are getting __emscripten_call_on_thread on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "__emscripten_call_on_thread", {
  configurable: true,
  set: function() {
   abort("You are setting __emscripten_call_on_thread on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

if (!Object.getOwnPropertyDescriptor(Module["ready"], "onRuntimeInitialized")) {
 Object.defineProperty(Module["ready"], "onRuntimeInitialized", {
  configurable: true,
  get: function() {
   abort("You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
 Object.defineProperty(Module["ready"], "onRuntimeInitialized", {
  configurable: true,
  set: function() {
   abort("You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js");
  }
 });
}

var moduleOverrides = {};

var key;

for (key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}

var arguments_ = [];

var thisProgram = "./this.program";

var quit_ = function(status, toThrow) {
 throw toThrow;
};

var ENVIRONMENT_IS_WEB = false;

var ENVIRONMENT_IS_WORKER = false;

var ENVIRONMENT_IS_NODE = false;

var ENVIRONMENT_IS_SHELL = false;

ENVIRONMENT_IS_WEB = typeof window === "object";

ENVIRONMENT_IS_WORKER = typeof importScripts === "function";

ENVIRONMENT_IS_NODE = typeof process === "object" && typeof process.versions === "object" && typeof process.versions.node === "string";

ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module["ENVIRONMENT"]) {
 throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");
}

var ENVIRONMENT_IS_PTHREAD = Module["ENVIRONMENT_IS_PTHREAD"] || false;

if (ENVIRONMENT_IS_PTHREAD) {
 buffer = Module["buffer"];
 DYNAMIC_BASE = Module["DYNAMIC_BASE"];
 DYNAMICTOP_PTR = Module["DYNAMICTOP_PTR"];
}

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 }
 return scriptDirectory + path;
}

var read_, readAsync, readBinary, setWindowTitle;

var nodeFS;

var nodePath;

if (ENVIRONMENT_IS_NODE) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = require("path").dirname(scriptDirectory) + "/";
 } else {
  scriptDirectory = __dirname + "/";
 }
 read_ = function shell_read(filename, binary) {
  if (!nodeFS) nodeFS = require("fs");
  if (!nodePath) nodePath = require("path");
  filename = nodePath["normalize"](filename);
  return nodeFS["readFileSync"](filename, binary ? null : "utf8");
 };
 readBinary = function readBinary(filename) {
  var ret = read_(filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 if (process["argv"].length > 1) {
  thisProgram = process["argv"][1].replace(/\\/g, "/");
 }
 arguments_ = process["argv"].slice(2);
 process["on"]("uncaughtException", function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 });
 process["on"]("unhandledRejection", abort);
 quit_ = function(status) {
  process["exit"](status);
 };
 Module["inspect"] = function() {
  return "[Emscripten Module object]";
 };
 var nodeWorkerThreads;
 try {
  nodeWorkerThreads = require("worker_threads");
 } catch (e) {
  console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?');
  throw e;
 }
 global.Worker = nodeWorkerThreads.Worker;
} else if (ENVIRONMENT_IS_SHELL) {
 if (typeof read != "undefined") {
  read_ = function shell_read(f) {
   return read(f);
  };
 }
 readBinary = function readBinary(f) {
  var data;
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  arguments_ = scriptArgs;
 } else if (typeof arguments != "undefined") {
  arguments_ = arguments;
 }
 if (typeof quit === "function") {
  quit_ = function(status) {
   quit(status);
  };
 }
 if (typeof print !== "undefined") {
  if (typeof console === "undefined") console = {};
  console.log = print;
  console.warn = console.error = typeof printErr !== "undefined" ? printErr : print;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (_scriptDir) {
  scriptDirectory = _scriptDir;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 if (ENVIRONMENT_IS_NODE) {
  read_ = function shell_read(filename, binary) {
   if (!nodeFS) nodeFS = require("fs");
   if (!nodePath) nodePath = require("path");
   filename = nodePath["normalize"](filename);
   return nodeFS["readFileSync"](filename, binary ? null : "utf8");
  };
  readBinary = function readBinary(filename) {
   var ret = read_(filename, true);
   if (!ret.buffer) {
    ret = new Uint8Array(ret);
   }
   assert(ret.buffer);
   return ret;
  };
 } else {
  read_ = function shell_read(url) {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, false);
   xhr.send(null);
   return xhr.responseText;
  };
  if (ENVIRONMENT_IS_WORKER) {
   readBinary = function readBinary(url) {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    xhr.responseType = "arraybuffer";
    xhr.send(null);
    return new Uint8Array(xhr.response);
   };
  }
  readAsync = function readAsync(url, onload, onerror) {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, true);
   xhr.responseType = "arraybuffer";
   xhr.onload = function xhr_onload() {
    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
     onload(xhr.response);
     return;
    }
    onerror();
   };
   xhr.onerror = onerror;
   xhr.send(null);
  };
 }
 setWindowTitle = function(title) {
  document.title = title;
 };
} else {
 throw new Error("environment detection error");
}

if (ENVIRONMENT_IS_NODE) {
 if (typeof performance === "undefined") {
  global.performance = require("perf_hooks").performance;
 }
}

var out = Module["print"] || console.log.bind(console);

var err = Module["printErr"] || console.warn.bind(console);

for (key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}

moduleOverrides = null;

if (Module["arguments"]) arguments_ = Module["arguments"];

if (!Object.getOwnPropertyDescriptor(Module, "arguments")) Object.defineProperty(Module, "arguments", {
 configurable: true,
 get: function() {
  abort("Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (Module["thisProgram"]) thisProgram = Module["thisProgram"];

if (!Object.getOwnPropertyDescriptor(Module, "thisProgram")) Object.defineProperty(Module, "thisProgram", {
 configurable: true,
 get: function() {
  abort("Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (Module["quit"]) quit_ = Module["quit"];

if (!Object.getOwnPropertyDescriptor(Module, "quit")) Object.defineProperty(Module, "quit", {
 configurable: true,
 get: function() {
  abort("Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

assert(typeof Module["memoryInitializerPrefixURL"] === "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["pthreadMainPrefixURL"] === "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["cdInitializerPrefixURL"] === "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["filePackagePrefixURL"] === "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["read"] === "undefined", "Module.read option was removed (modify read_ in JS)");

assert(typeof Module["readAsync"] === "undefined", "Module.readAsync option was removed (modify readAsync in JS)");

assert(typeof Module["readBinary"] === "undefined", "Module.readBinary option was removed (modify readBinary in JS)");

assert(typeof Module["setWindowTitle"] === "undefined", "Module.setWindowTitle option was removed (modify setWindowTitle in JS)");

assert(typeof Module["TOTAL_MEMORY"] === "undefined", "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");

if (!Object.getOwnPropertyDescriptor(Module, "read")) Object.defineProperty(Module, "read", {
 configurable: true,
 get: function() {
  abort("Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "readAsync")) Object.defineProperty(Module, "readAsync", {
 configurable: true,
 get: function() {
  abort("Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "readBinary")) Object.defineProperty(Module, "readBinary", {
 configurable: true,
 get: function() {
  abort("Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "setWindowTitle")) Object.defineProperty(Module, "setWindowTitle", {
 configurable: true,
 get: function() {
  abort("Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

var IDBFS = "IDBFS is no longer included by default; build with -lidbfs.js";

var PROXYFS = "PROXYFS is no longer included by default; build with -lproxyfs.js";

var WORKERFS = "WORKERFS is no longer included by default; build with -lworkerfs.js";

var NODEFS = "NODEFS is no longer included by default; build with -lnodefs.js";

assert(ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER || ENVIRONMENT_IS_NODE, "Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)");

var STACK_ALIGN = 16;

function dynamicAlloc(size) {
 assert(DYNAMICTOP_PTR);
 assert(!ENVIRONMENT_IS_PTHREAD);
 var ret = GROWABLE_HEAP_I32()[DYNAMICTOP_PTR >> 2];
 var end = ret + size + 15 & -16;
 assert(end <= GROWABLE_HEAP_I8().length, "failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly");
 GROWABLE_HEAP_I32()[DYNAMICTOP_PTR >> 2] = end;
 return ret;
}

function alignMemory(size, factor) {
 if (!factor) factor = STACK_ALIGN;
 return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
 switch (type) {
 case "i1":
 case "i8":
  return 1;

 case "i16":
  return 2;

 case "i32":
  return 4;

 case "i64":
  return 8;

 case "float":
  return 4;

 case "double":
  return 8;

 default:
  {
   if (type[type.length - 1] === "*") {
    return 4;
   } else if (type[0] === "i") {
    var bits = Number(type.substr(1));
    assert(bits % 8 === 0, "getNativeTypeSize invalid bits " + bits + ", type " + type);
    return bits / 8;
   } else {
    return 0;
   }
  }
 }
}

function warnOnce(text) {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  err(text);
 }
}

function convertJsFunctionToWasm(func, sig) {
 if (typeof WebAssembly.Function === "function") {
  var typeNames = {
   "i": "i32",
   "j": "i64",
   "f": "f32",
   "d": "f64"
  };
  var type = {
   parameters: [],
   results: sig[0] == "v" ? [] : [ typeNames[sig[0]] ]
  };
  for (var i = 1; i < sig.length; ++i) {
   type.parameters.push(typeNames[sig[i]]);
  }
  return new WebAssembly.Function(type, func);
 }
 var typeSection = [ 1, 0, 1, 96 ];
 var sigRet = sig.slice(0, 1);
 var sigParam = sig.slice(1);
 var typeCodes = {
  "i": 127,
  "j": 126,
  "f": 125,
  "d": 124
 };
 typeSection.push(sigParam.length);
 for (var i = 0; i < sigParam.length; ++i) {
  typeSection.push(typeCodes[sigParam[i]]);
 }
 if (sigRet == "v") {
  typeSection.push(0);
 } else {
  typeSection = typeSection.concat([ 1, typeCodes[sigRet] ]);
 }
 typeSection[1] = typeSection.length - 2;
 var bytes = new Uint8Array([ 0, 97, 115, 109, 1, 0, 0, 0 ].concat(typeSection, [ 2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0 ]));
 var module = new WebAssembly.Module(bytes);
 var instance = new WebAssembly.Instance(module, {
  "e": {
   "f": func
  }
 });
 var wrappedFunc = instance.exports["f"];
 return wrappedFunc;
}

var freeTableIndexes = [];

var functionsInTableMap;

function addFunctionWasm(func, sig) {
 var table = wasmTable;
 if (!functionsInTableMap) {
  functionsInTableMap = new WeakMap();
  for (var i = 0; i < table.length; i++) {
   var item = table.get(i);
   if (item) {
    functionsInTableMap.set(item, i);
   }
  }
 }
 if (functionsInTableMap.has(func)) {
  return functionsInTableMap.get(func);
 }
 var ret;
 if (freeTableIndexes.length) {
  ret = freeTableIndexes.pop();
 } else {
  ret = table.length;
  try {
   table.grow(1);
  } catch (err) {
   if (!(err instanceof RangeError)) {
    throw err;
   }
   throw "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";
  }
 }
 try {
  table.set(ret, func);
 } catch (err) {
  if (!(err instanceof TypeError)) {
   throw err;
  }
  assert(typeof sig !== "undefined", "Missing signature argument to addFunction");
  var wrapped = convertJsFunctionToWasm(func, sig);
  table.set(ret, wrapped);
 }
 functionsInTableMap.set(func, ret);
 return ret;
}

function removeFunctionWasm(index) {
 functionsInTableMap.delete(wasmTable.get(index));
 freeTableIndexes.push(index);
}

function addFunction(func, sig) {
 assert(typeof func !== "undefined");
 return addFunctionWasm(func, sig);
}

function removeFunction(index) {
 removeFunctionWasm(index);
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
 if (!func) return;
 assert(sig);
 if (!funcWrappers[sig]) {
  funcWrappers[sig] = {};
 }
 var sigCache = funcWrappers[sig];
 if (!sigCache[func]) {
  if (sig.length === 1) {
   sigCache[func] = function dynCall_wrapper() {
    return dynCall(sig, func);
   };
  } else if (sig.length === 2) {
   sigCache[func] = function dynCall_wrapper(arg) {
    return dynCall(sig, func, [ arg ]);
   };
  } else {
   sigCache[func] = function dynCall_wrapper() {
    return dynCall(sig, func, Array.prototype.slice.call(arguments));
   };
  }
 }
 return sigCache[func];
}

function makeBigInt(low, high, unsigned) {
 return unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
}

function dynCall(sig, ptr, args) {
 if (args && args.length) {
  assert(args.length === sig.substring(1).replace(/j/g, "--").length);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].apply(null, [ ptr ].concat(args));
 } else {
  assert(sig.length == 1);
  assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
  return Module["dynCall_" + sig].call(null, ptr);
 }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
 tempRet0 = value;
};

var getTempRet0 = function() {
 return tempRet0;
};

function getCompilerSetting(name) {
 throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work";
}

var GLOBAL_BASE = 1024;

var Atomics_load = Atomics.load;

var Atomics_store = Atomics.store;

var Atomics_compareExchange = Atomics.compareExchange;

var wasmBinary;

if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];

if (!Object.getOwnPropertyDescriptor(Module, "wasmBinary")) Object.defineProperty(Module, "wasmBinary", {
 configurable: true,
 get: function() {
  abort("Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

var noExitRuntime;

if (Module["noExitRuntime"]) noExitRuntime = Module["noExitRuntime"];

if (!Object.getOwnPropertyDescriptor(Module, "noExitRuntime")) Object.defineProperty(Module, "noExitRuntime", {
 configurable: true,
 get: function() {
  abort("Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

if (typeof WebAssembly !== "object") {
 abort("no native wasm support detected");
}

function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  GROWABLE_HEAP_I8()[ptr >> 0] = value;
  break;

 case "i8":
  GROWABLE_HEAP_I8()[ptr >> 0] = value;
  break;

 case "i16":
  GROWABLE_HEAP_I16()[ptr >> 1] = value;
  break;

 case "i32":
  GROWABLE_HEAP_I32()[ptr >> 2] = value;
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  GROWABLE_HEAP_I32()[ptr >> 2] = tempI64[0], GROWABLE_HEAP_I32()[ptr + 4 >> 2] = tempI64[1];
  break;

 case "float":
  GROWABLE_HEAP_F32()[ptr >> 2] = value;
  break;

 case "double":
  GROWABLE_HEAP_F64()[ptr >> 3] = value;
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return GROWABLE_HEAP_I8()[ptr >> 0];

 case "i8":
  return GROWABLE_HEAP_I8()[ptr >> 0];

 case "i16":
  return GROWABLE_HEAP_I16()[ptr >> 1];

 case "i32":
  return GROWABLE_HEAP_I32()[ptr >> 2];

 case "i64":
  return GROWABLE_HEAP_I32()[ptr >> 2];

 case "float":
  return GROWABLE_HEAP_F32()[ptr >> 2];

 case "double":
  return GROWABLE_HEAP_F64()[ptr >> 3];

 default:
  abort("invalid type for getValue: " + type);
 }
 return null;
}

var wasmMemory;

var wasmTable = new WebAssembly.Table({
 "initial": 6337,
 "maximum": 6337 + 50,
 "element": "anyfunc"
});

var wasmModule;

var threadInfoStruct = 0;

var selfThreadId = 0;

var ABORT = false;

var EXITSTATUS = 0;

function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}

function getCFunc(ident) {
 var func = Module["_" + ident];
 assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
 return func;
}

function ccall(ident, returnType, argTypes, args, opts) {
 var toC = {
  "string": function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    var len = (str.length << 2) + 1;
    ret = stackAlloc(len);
    stringToUTF8(str, ret, len);
   }
   return ret;
  },
  "array": function(arr) {
   var ret = stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }
 };
 function convertReturnValue(ret) {
  if (returnType === "string") return UTF8ToString(ret);
  if (returnType === "boolean") return Boolean(ret);
  return ret;
 }
 var func = getCFunc(ident);
 var cArgs = [];
 var stack = 0;
 assert(returnType !== "array", 'Return type should not be "array".');
 if (args) {
  for (var i = 0; i < args.length; i++) {
   var converter = toC[argTypes[i]];
   if (converter) {
    if (stack === 0) stack = stackSave();
    cArgs[i] = converter(args[i]);
   } else {
    cArgs[i] = args[i];
   }
  }
 }
 var ret = func.apply(null, cArgs);
 ret = convertReturnValue(ret);
 if (stack !== 0) stackRestore(stack);
 return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
 return function() {
  return ccall(ident, returnType, argTypes, arguments, opts);
 };
}

var ALLOC_NORMAL = 0;

var ALLOC_STACK = 1;

var ALLOC_DYNAMIC = 2;

var ALLOC_NONE = 3;

function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ _malloc, stackAlloc, dynamicAlloc ][allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var stop;
  ptr = ret;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (;ptr < stop; ptr += 4) {
   GROWABLE_HEAP_I32()[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   GROWABLE_HEAP_I8()[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   GROWABLE_HEAP_U8().set(slab, ret);
  } else {
   GROWABLE_HEAP_U8().set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  assert(type, "Must know what type to store in allocate!");
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}

function getMemory(size) {
 if (!runtimeInitialized) return dynamicAlloc(size);
 return _malloc(size);
}

function UTF8ArrayToString(heap, idx, maxBytesToRead) {
 var endIdx = idx + maxBytesToRead;
 var str = "";
 while (!(idx >= endIdx)) {
  var u0 = heap[idx++];
  if (!u0) return str;
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  var u1 = heap[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  var u2 = heap[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte 0x" + u0.toString(16) + " encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!");
   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
 return str;
}

function UTF8ToString(ptr, maxBytesToRead) {
 return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : "";
}

function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   heap[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   heap[outIdx++] = 192 | u >> 6;
   heap[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   heap[outIdx++] = 224 | u >> 12;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   if (u >= 2097152) warnOnce("Invalid Unicode code point 0x" + u.toString(16) + " encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).");
   heap[outIdx++] = 240 | u >> 18;
   heap[outIdx++] = 128 | u >> 12 & 63;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  }
 }
 heap[outIdx] = 0;
 return outIdx - startIdx;
}

function stringToUTF8(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);
}

function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;
 }
 return len;
}

function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = GROWABLE_HEAP_U8()[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}

function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}

function UTF16ToString(ptr, maxBytesToRead) {
 assert(ptr % 2 == 0, "Pointer passed to UTF16ToString must be aligned to two bytes!");
 var i = 0;
 var str = "";
 while (1) {
  var codeUnit = GROWABLE_HEAP_I16()[ptr + i * 2 >> 1];
  if (codeUnit == 0 || i == maxBytesToRead / 2) return str;
  ++i;
  str += String.fromCharCode(codeUnit);
 }
}

function stringToUTF16(str, outPtr, maxBytesToWrite) {
 assert(outPtr % 2 == 0, "Pointer passed to stringToUTF16 must be aligned to two bytes!");
 assert(typeof maxBytesToWrite == "number", "stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 2) return 0;
 maxBytesToWrite -= 2;
 var startPtr = outPtr;
 var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
 for (var i = 0; i < numCharsToWrite; ++i) {
  var codeUnit = str.charCodeAt(i);
  GROWABLE_HEAP_I16()[outPtr >> 1] = codeUnit;
  outPtr += 2;
 }
 GROWABLE_HEAP_I16()[outPtr >> 1] = 0;
 return outPtr - startPtr;
}

function lengthBytesUTF16(str) {
 return str.length * 2;
}

function UTF32ToString(ptr, maxBytesToRead) {
 assert(ptr % 4 == 0, "Pointer passed to UTF32ToString must be aligned to four bytes!");
 var i = 0;
 var str = "";
 while (!(i >= maxBytesToRead / 4)) {
  var utf32 = GROWABLE_HEAP_I32()[ptr + i * 4 >> 2];
  if (utf32 == 0) break;
  ++i;
  if (utf32 >= 65536) {
   var ch = utf32 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  } else {
   str += String.fromCharCode(utf32);
  }
 }
 return str;
}

function stringToUTF32(str, outPtr, maxBytesToWrite) {
 assert(outPtr % 4 == 0, "Pointer passed to stringToUTF32 must be aligned to four bytes!");
 assert(typeof maxBytesToWrite == "number", "stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 4) return 0;
 var startPtr = outPtr;
 var endPtr = startPtr + maxBytesToWrite - 4;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) {
   var trailSurrogate = str.charCodeAt(++i);
   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
  }
  GROWABLE_HEAP_I32()[outPtr >> 2] = codeUnit;
  outPtr += 4;
  if (outPtr + 4 > endPtr) break;
 }
 GROWABLE_HEAP_I32()[outPtr >> 2] = 0;
 return outPtr - startPtr;
}

function lengthBytesUTF32(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;
  len += 4;
 }
 return len;
}

function allocateUTF8(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8Array(str, GROWABLE_HEAP_I8(), ret, size);
 return ret;
}

function allocateUTF8OnStack(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = stackAlloc(size);
 stringToUTF8Array(str, GROWABLE_HEAP_I8(), ret, size);
 return ret;
}

function writeStringToMemory(string, buffer, dontAddNull) {
 warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");
 var lastChar, end;
 if (dontAddNull) {
  end = buffer + lengthBytesUTF8(string);
  lastChar = GROWABLE_HEAP_I8()[end];
 }
 stringToUTF8(string, buffer, Infinity);
 if (dontAddNull) GROWABLE_HEAP_I8()[end] = lastChar;
}

function writeArrayToMemory(array, buffer) {
 assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
 GROWABLE_HEAP_I8().set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === str.charCodeAt(i) & 255);
  GROWABLE_HEAP_I8()[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) GROWABLE_HEAP_I8()[buffer >> 0] = 0;
}

var PAGE_SIZE = 16384;

var WASM_PAGE_SIZE = 65536;

var ASMJS_PAGE_SIZE = 16777216;

function alignUp(x, multiple) {
 if (x % multiple > 0) {
  x += multiple - x % multiple;
 }
 return x;
}

var HEAP, buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBufferAndViews(buf) {
 buffer = buf;
 Module["HEAP8"] = HEAP8 = new Int8Array(buf);
 Module["HEAP16"] = HEAP16 = new Int16Array(buf);
 Module["HEAP32"] = HEAP32 = new Int32Array(buf);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buf);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buf);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buf);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buf);
}

var STATIC_BASE = 1024, STACK_BASE = 7073968, STACKTOP = STACK_BASE, STACK_MAX = 1831088, DYNAMIC_BASE = 7073968, DYNAMICTOP_PTR = 1830144;

assert(STACK_BASE % 16 === 0, "stack must start aligned");

assert(DYNAMIC_BASE % 16 === 0, "heap must start aligned");

if (ENVIRONMENT_IS_PTHREAD) {
 STACK_MAX = STACKTOP = STACK_MAX = 2147483647;
}

var TOTAL_STACK = 5242880;

if (Module["TOTAL_STACK"]) assert(TOTAL_STACK === Module["TOTAL_STACK"], "the stack size can no longer be determined at runtime");

var INITIAL_INITIAL_MEMORY = Module["INITIAL_MEMORY"] || 134217728;

if (!Object.getOwnPropertyDescriptor(Module, "INITIAL_MEMORY")) Object.defineProperty(Module, "INITIAL_MEMORY", {
 configurable: true,
 get: function() {
  abort("Module.INITIAL_MEMORY has been replaced with plain INITIAL_INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
 }
});

assert(INITIAL_INITIAL_MEMORY >= TOTAL_STACK, "INITIAL_MEMORY should be larger than TOTAL_STACK, was " + INITIAL_INITIAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");

assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined, "JS engine does not provide full typed array support");

if (ENVIRONMENT_IS_PTHREAD) {
 wasmMemory = Module["wasmMemory"];
 buffer = Module["buffer"];
} else {
 if (Module["wasmMemory"]) {
  wasmMemory = Module["wasmMemory"];
 } else {
  wasmMemory = new WebAssembly.Memory({
   "initial": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,
   "maximum": 2147483648 / WASM_PAGE_SIZE,
   "shared": true
  });
  if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {
   err("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag");
   if (ENVIRONMENT_IS_NODE) {
    console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)");
   }
   throw Error("bad memory");
  }
 }
}

if (wasmMemory) {
 buffer = wasmMemory.buffer;
}

INITIAL_INITIAL_MEMORY = buffer.byteLength;

assert(INITIAL_INITIAL_MEMORY % WASM_PAGE_SIZE === 0);

assert(65536 % WASM_PAGE_SIZE === 0);

updateGlobalBufferAndViews(buffer);

if (!ENVIRONMENT_IS_PTHREAD) {
 GROWABLE_HEAP_I32()[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
}

function writeStackCookie() {
 assert((STACK_MAX & 3) == 0);
 GROWABLE_HEAP_U32()[(STACK_MAX >> 2) + 1] = 34821223;
 GROWABLE_HEAP_U32()[(STACK_MAX >> 2) + 2] = 2310721022;
 GROWABLE_HEAP_I32()[0] = 1668509029;
}

function checkStackCookie() {
 var cookie1 = GROWABLE_HEAP_U32()[(STACK_MAX >> 2) + 1];
 var cookie2 = GROWABLE_HEAP_U32()[(STACK_MAX >> 2) + 2];
 if (cookie1 != 34821223 || cookie2 != 2310721022) {
  abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x" + cookie2.toString(16) + " " + cookie1.toString(16));
 }
 if (GROWABLE_HEAP_I32()[0] !== 1668509029) abort("Runtime error: The application has corrupted its heap memory area (address zero)!");
}

(function() {
 var h16 = new Int16Array(1);
 var h8 = new Int8Array(h16.buffer);
 h16[0] = 25459;
 if (h8[0] !== 115 || h8[1] !== 99) throw "Runtime error: expected the system to be little-endian!";
})();

function abortFnPtrError(ptr, sig) {
 abort("Invalid function pointer " + ptr + " called with signature '" + sig + "'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.");
}

function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback(Module);
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Module["dynCall_v"](func);
   } else {
    Module["dynCall_vi"](func, callback.arg);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATMAIN__ = [];

var __ATEXIT__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeExited = false;

if (ENVIRONMENT_IS_PTHREAD) runtimeInitialized = true;

function preRun() {
 if (ENVIRONMENT_IS_PTHREAD) return;
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
 checkStackCookie();
 assert(!runtimeInitialized);
 runtimeInitialized = true;
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 TTY.init();
 callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
 checkStackCookie();
 if (ENVIRONMENT_IS_PTHREAD) return;
 FS.ignorePermissions = false;
 callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
 checkStackCookie();
 if (ENVIRONMENT_IS_PTHREAD) return;
 runtimeExited = true;
}

function postRun() {
 checkStackCookie();
 if (ENVIRONMENT_IS_PTHREAD) return;
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

function unSign(value, bits, ignore) {
 if (value >= 0) {
  return value;
 }
 return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
}

function reSign(value, bits, ignore) {
 if (value <= 0) {
  return value;
 }
 var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);
 if (value >= half && (bits <= 32 || value > half)) {
  value = -2 * half + value;
 }
 return value;
}

assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

var Math_abs = Math.abs;

var Math_cos = Math.cos;

var Math_sin = Math.sin;

var Math_tan = Math.tan;

var Math_acos = Math.acos;

var Math_asin = Math.asin;

var Math_atan = Math.atan;

var Math_atan2 = Math.atan2;

var Math_exp = Math.exp;

var Math_log = Math.log;

var Math_sqrt = Math.sqrt;

var Math_ceil = Math.ceil;

var Math_floor = Math.floor;

var Math_pow = Math.pow;

var Math_imul = Math.imul;

var Math_fround = Math.fround;

var Math_round = Math.round;

var Math_min = Math.min;

var Math_max = Math.max;

var Math_clz32 = Math.clz32;

var Math_trunc = Math.trunc;

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
}

function addRunDependency(id) {
 assert(!ENVIRONMENT_IS_PTHREAD, "addRunDependency cannot be used in a pthread worker");
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval !== "undefined") {
   runDependencyWatcher = setInterval(function() {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      err("still waiting on run dependencies:");
     }
     err("dependency: " + dep);
    }
    if (shown) {
     err("(end of list)");
    }
   }, 1e4);
  }
 } else {
  err("warning: run dependency added without ID");
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  err("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

Module["preloadedImages"] = {};

Module["preloadedAudios"] = {};

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 if (ENVIRONMENT_IS_PTHREAD) console.error("Pthread aborting at " + new Error().stack);
 what += "";
 err(what);
 ABORT = true;
 EXITSTATUS = 1;
 var output = "abort(" + what + ") at " + stackTrace();
 what = output;
 var e = new WebAssembly.RuntimeError(what);
 readyPromiseReject(e);
 throw e;
}

var memoryInitializer = null;

function hasPrefix(str, prefix) {
 return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;
}

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return hasPrefix(filename, dataURIPrefix);
}

var fileURIPrefix = "file://";

function isFileURI(filename) {
 return hasPrefix(filename, fileURIPrefix);
}

function createExportWrapper(name, fixedasm) {
 return function() {
  var displayName = name;
  var asm = fixedasm;
  if (!fixedasm) {
   asm = Module["asm"];
  }
  assert(runtimeInitialized, "native function `" + displayName + "` called before runtime initialization");
  assert(!runtimeExited, "native function `" + displayName + "` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
  if (!asm[name]) {
   assert(asm[name], "exported native function `" + displayName + "` not found");
  }
  return asm[name].apply(null, arguments);
 };
}

var wasmBinaryFile = "pdfix_wasm.wasm";

if (!isDataURI(wasmBinaryFile)) {
 wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary() {
 try {
  if (wasmBinary) {
   return new Uint8Array(wasmBinary);
  }
  if (readBinary) {
   return readBinary(wasmBinaryFile);
  } else {
   throw "both async and sync fetching of the wasm failed";
  }
 } catch (err) {
  abort(err);
 }
}

function getBinaryPromise() {
 if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === "function" && !isFileURI(wasmBinaryFile)) {
  return fetch(wasmBinaryFile, {
   credentials: "same-origin"
  }).then(function(response) {
   if (!response["ok"]) {
    throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
   }
   return response["arrayBuffer"]();
  }).catch(function() {
   return getBinary();
  });
 }
 return new Promise(function(resolve, reject) {
  resolve(getBinary());
 });
}

function createWasm() {
 var info = {
  "env": asmLibraryArg,
  "wasi_snapshot_preview1": asmLibraryArg
 };
 function receiveInstance(instance, module) {
  var exports = instance.exports;
  Module["asm"] = exports;
  wasmModule = module;
  if (!ENVIRONMENT_IS_PTHREAD) {
   removeRunDependency("wasm-instantiate");
  }
 }
 if (!ENVIRONMENT_IS_PTHREAD) {
  addRunDependency("wasm-instantiate");
 }
 var trueModule = Module;
 function receiveInstantiatedSource(output) {
  assert(Module === trueModule, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");
  trueModule = null;
  receiveInstance(output["instance"], output["module"]);
 }
 function instantiateArrayBuffer(receiver) {
  return getBinaryPromise().then(function(binary) {
   return WebAssembly.instantiate(binary, info);
  }).then(receiver, function(reason) {
   err("failed to asynchronously prepare wasm: " + reason);
   abort(reason);
  });
 }
 function instantiateAsync() {
  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === "function" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === "function") {
   fetch(wasmBinaryFile, {
    credentials: "same-origin"
   }).then(function(response) {
    var result = WebAssembly.instantiateStreaming(response, info);
    return result.then(receiveInstantiatedSource, function(reason) {
     err("wasm streaming compile failed: " + reason);
     err("falling back to ArrayBuffer instantiation");
     return instantiateArrayBuffer(receiveInstantiatedSource);
    });
   });
  } else {
   return instantiateArrayBuffer(receiveInstantiatedSource);
  }
 }
 if (Module["instantiateWasm"]) {
  try {
   var exports = Module["instantiateWasm"](info, receiveInstance);
   return exports;
  } catch (e) {
   err("Module.instantiateWasm callback failed with error: " + e);
   return false;
  }
 }
 instantiateAsync();
 return {};
}

var tempDouble;

var tempI64;

var ASM_CONSTS = {
 8900: function() {
  throw "Canceled!";
 },
 9120: function($0, $1) {
  setTimeout(function() {
   _do_emscripten_dispatch_to_thread($0, $1);
  }, 0);
 }
};

function _emscripten_asm_const_iii(code, sigPtr, argbuf) {
 var args = readAsmConstArgs(sigPtr, argbuf);
 return ASM_CONSTS[code].apply(null, args);
}

function array_bounds_check_error(idx, size) {
 throw "Array index " + idx + " out of bounds: [0," + size + ")";
}

function initPthreadsJS() {
 PThread.initRuntime();
}

if (!ENVIRONMENT_IS_PTHREAD) __ATINIT__.push({
 func: function() {
  ___wasm_call_ctors();
 }
});

function abortStackOverflow(allocSize) {
 abort("Stack overflow! Attempted to allocate " + allocSize + " bytes on the stack, but stack has only " + (STACK_MAX - stackSave() + allocSize) + " bytes available!");
}

function demangle(func) {
 warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 return func;
}

function demangleAll(text) {
 var regex = /\b_Z[\w\d_]+/g;
 return text.replace(regex, function(x) {
  var y = demangle(x);
  return x === y ? x : y + " [" + x + "]";
 });
}

var __pthread_ptr = 0;

var __pthread_is_main_runtime_thread = 0;

var __pthread_is_main_browser_thread = 0;

function registerPthreadPtr(pthreadPtr, isMainBrowserThread, isMainRuntimeThread) {
 pthreadPtr = pthreadPtr | 0;
 isMainBrowserThread = isMainBrowserThread | 0;
 isMainRuntimeThread = isMainRuntimeThread | 0;
 __pthread_ptr = pthreadPtr;
 __pthread_is_main_browser_thread = isMainBrowserThread;
 __pthread_is_main_runtime_thread = isMainRuntimeThread;
}

Module["registerPthreadPtr"] = registerPthreadPtr;

var ERRNO_CODES = {
 EPERM: 63,
 ENOENT: 44,
 ESRCH: 71,
 EINTR: 27,
 EIO: 29,
 ENXIO: 60,
 E2BIG: 1,
 ENOEXEC: 45,
 EBADF: 8,
 ECHILD: 12,
 EAGAIN: 6,
 EWOULDBLOCK: 6,
 ENOMEM: 48,
 EACCES: 2,
 EFAULT: 21,
 ENOTBLK: 105,
 EBUSY: 10,
 EEXIST: 20,
 EXDEV: 75,
 ENODEV: 43,
 ENOTDIR: 54,
 EISDIR: 31,
 EINVAL: 28,
 ENFILE: 41,
 EMFILE: 33,
 ENOTTY: 59,
 ETXTBSY: 74,
 EFBIG: 22,
 ENOSPC: 51,
 ESPIPE: 70,
 EROFS: 69,
 EMLINK: 34,
 EPIPE: 64,
 EDOM: 18,
 ERANGE: 68,
 ENOMSG: 49,
 EIDRM: 24,
 ECHRNG: 106,
 EL2NSYNC: 156,
 EL3HLT: 107,
 EL3RST: 108,
 ELNRNG: 109,
 EUNATCH: 110,
 ENOCSI: 111,
 EL2HLT: 112,
 EDEADLK: 16,
 ENOLCK: 46,
 EBADE: 113,
 EBADR: 114,
 EXFULL: 115,
 ENOANO: 104,
 EBADRQC: 103,
 EBADSLT: 102,
 EDEADLOCK: 16,
 EBFONT: 101,
 ENOSTR: 100,
 ENODATA: 116,
 ETIME: 117,
 ENOSR: 118,
 ENONET: 119,
 ENOPKG: 120,
 EREMOTE: 121,
 ENOLINK: 47,
 EADV: 122,
 ESRMNT: 123,
 ECOMM: 124,
 EPROTO: 65,
 EMULTIHOP: 36,
 EDOTDOT: 125,
 EBADMSG: 9,
 ENOTUNIQ: 126,
 EBADFD: 127,
 EREMCHG: 128,
 ELIBACC: 129,
 ELIBBAD: 130,
 ELIBSCN: 131,
 ELIBMAX: 132,
 ELIBEXEC: 133,
 ENOSYS: 52,
 ENOTEMPTY: 55,
 ENAMETOOLONG: 37,
 ELOOP: 32,
 EOPNOTSUPP: 138,
 EPFNOSUPPORT: 139,
 ECONNRESET: 15,
 ENOBUFS: 42,
 EAFNOSUPPORT: 5,
 EPROTOTYPE: 67,
 ENOTSOCK: 57,
 ENOPROTOOPT: 50,
 ESHUTDOWN: 140,
 ECONNREFUSED: 14,
 EADDRINUSE: 3,
 ECONNABORTED: 13,
 ENETUNREACH: 40,
 ENETDOWN: 38,
 ETIMEDOUT: 73,
 EHOSTDOWN: 142,
 EHOSTUNREACH: 23,
 EINPROGRESS: 26,
 EALREADY: 7,
 EDESTADDRREQ: 17,
 EMSGSIZE: 35,
 EPROTONOSUPPORT: 66,
 ESOCKTNOSUPPORT: 137,
 EADDRNOTAVAIL: 4,
 ENETRESET: 39,
 EISCONN: 30,
 ENOTCONN: 53,
 ETOOMANYREFS: 141,
 EUSERS: 136,
 EDQUOT: 19,
 ESTALE: 72,
 ENOTSUP: 138,
 ENOMEDIUM: 148,
 EILSEQ: 25,
 EOVERFLOW: 61,
 ECANCELED: 11,
 ENOTRECOVERABLE: 56,
 EOWNERDEAD: 62,
 ESTRPIPE: 135
};

var __main_thread_futex_wait_address = 1831072;

function _emscripten_futex_wake(addr, count) {
 if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & 3 != 0 || count < 0) return -28;
 if (count == 0) return 0;
 if (count >= 2147483647) count = Infinity;
 var mainThreadWaitAddress = Atomics.load(GROWABLE_HEAP_I32(), __main_thread_futex_wait_address >> 2);
 var mainThreadWoken = 0;
 if (mainThreadWaitAddress == addr) {
  var loadedAddr = Atomics.compareExchange(GROWABLE_HEAP_I32(), __main_thread_futex_wait_address >> 2, mainThreadWaitAddress, 0);
  if (loadedAddr == mainThreadWaitAddress) {
   --count;
   mainThreadWoken = 1;
   if (count <= 0) return 1;
  }
 }
 var ret = Atomics.notify(GROWABLE_HEAP_I32(), addr >> 2, count);
 if (ret >= 0) return ret + mainThreadWoken;
 throw "Atomics.notify returned an unexpected value " + ret;
}

Module["_emscripten_futex_wake"] = _emscripten_futex_wake;

function killThread(pthread_ptr) {
 if (ENVIRONMENT_IS_PTHREAD) throw "Internal Error! killThread() can only ever be called from main application thread!";
 if (!pthread_ptr) throw "Internal Error! Null pthread_ptr in killThread!";
 GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;
 var pthread = PThread.pthreads[pthread_ptr];
 pthread.worker.terminate();
 PThread.freeThreadData(pthread);
 PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker), 1);
 pthread.worker.pthread = undefined;
}

function cancelThread(pthread_ptr) {
 if (ENVIRONMENT_IS_PTHREAD) throw "Internal Error! cancelThread() can only ever be called from main application thread!";
 if (!pthread_ptr) throw "Internal Error! Null pthread_ptr in cancelThread!";
 var pthread = PThread.pthreads[pthread_ptr];
 pthread.worker.postMessage({
  "cmd": "cancel"
 });
}

function cleanupThread(pthread_ptr) {
 if (ENVIRONMENT_IS_PTHREAD) throw "Internal Error! cleanupThread() can only ever be called from main application thread!";
 if (!pthread_ptr) throw "Internal Error! Null pthread_ptr in cleanupThread!";
 GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;
 var pthread = PThread.pthreads[pthread_ptr];
 if (pthread) {
  var worker = pthread.worker;
  PThread.returnWorkerToPool(worker);
 }
}

var PThread = {
 MAIN_THREAD_ID: 1,
 mainThreadInfo: {
  schedPolicy: 0,
  schedPrio: 0
 },
 unusedWorkers: [],
 runningWorkers: [],
 initRuntime: function() {
  registerPthreadPtr(PThread.mainThreadBlock, !ENVIRONMENT_IS_WORKER, 1);
  _emscripten_register_main_browser_thread_id(PThread.mainThreadBlock);
 },
 initMainThreadBlock: function() {
  assert(!ENVIRONMENT_IS_PTHREAD);
  PThread.mainThreadBlock = 1830320;
  for (var i = 0; i < 232 / 4; ++i) GROWABLE_HEAP_U32()[PThread.mainThreadBlock / 4 + i] = 0;
  GROWABLE_HEAP_I32()[PThread.mainThreadBlock + 12 >> 2] = PThread.mainThreadBlock;
  var headPtr = PThread.mainThreadBlock + 156;
  GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;
  var tlsMemory = 1830560;
  for (var i = 0; i < 128; ++i) GROWABLE_HEAP_U32()[tlsMemory / 4 + i] = 0;
  Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 104 >> 2, tlsMemory);
  Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 40 >> 2, PThread.mainThreadBlock);
  Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 44 >> 2, 42);
 },
 initWorker: function() {},
 pthreads: {},
 threadExitHandlers: [],
 setThreadStatus: function() {},
 runExitHandlers: function() {
  while (PThread.threadExitHandlers.length > 0) {
   PThread.threadExitHandlers.pop()();
  }
  if (ENVIRONMENT_IS_PTHREAD && threadInfoStruct) ___pthread_tsd_run_dtors();
 },
 threadExit: function(exitCode) {
  var tb = _pthread_self();
  if (tb) {
   err("Pthread 0x" + tb.toString(16) + " exited.");
   Atomics.store(GROWABLE_HEAP_U32(), tb + 4 >> 2, exitCode);
   Atomics.store(GROWABLE_HEAP_U32(), tb + 0 >> 2, 1);
   Atomics.store(GROWABLE_HEAP_U32(), tb + 60 >> 2, 1);
   Atomics.store(GROWABLE_HEAP_U32(), tb + 64 >> 2, 0);
   PThread.runExitHandlers();
   _emscripten_futex_wake(tb + 0, 2147483647);
   registerPthreadPtr(0, 0, 0);
   threadInfoStruct = 0;
   if (ENVIRONMENT_IS_PTHREAD) {
    postMessage({
     "cmd": "exit"
    });
   }
  }
 },
 threadCancel: function() {
  PThread.runExitHandlers();
  Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 4 >> 2, -1);
  Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 0 >> 2, 1);
  _emscripten_futex_wake(threadInfoStruct + 0, 2147483647);
  threadInfoStruct = selfThreadId = 0;
  registerPthreadPtr(0, 0, 0);
  postMessage({
   "cmd": "cancelDone"
  });
 },
 terminateAllThreads: function() {
  for (var t in PThread.pthreads) {
   var pthread = PThread.pthreads[t];
   if (pthread && pthread.worker) {
    PThread.returnWorkerToPool(pthread.worker);
   }
  }
  PThread.pthreads = {};
  for (var i = 0; i < PThread.unusedWorkers.length; ++i) {
   var worker = PThread.unusedWorkers[i];
   assert(!worker.pthread);
   worker.terminate();
  }
  PThread.unusedWorkers = [];
  for (var i = 0; i < PThread.runningWorkers.length; ++i) {
   var worker = PThread.runningWorkers[i];
   var pthread = worker.pthread;
   assert(pthread, "This Worker should have a pthread it is executing");
   PThread.freeThreadData(pthread);
   worker.terminate();
  }
  PThread.runningWorkers = [];
 },
 freeThreadData: function(pthread) {
  if (!pthread) return;
  if (pthread.threadInfoStruct) {
   var tlsMemory = GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2];
   GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2] = 0;
   _free(tlsMemory);
   _free(pthread.threadInfoStruct);
  }
  pthread.threadInfoStruct = 0;
  if (pthread.allocatedOwnStack && pthread.stackBase) _free(pthread.stackBase);
  pthread.stackBase = 0;
  if (pthread.worker) pthread.worker.pthread = null;
 },
 returnWorkerToPool: function(worker) {
  delete PThread.pthreads[worker.pthread.thread];
  PThread.unusedWorkers.push(worker);
  PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);
  PThread.freeThreadData(worker.pthread);
  worker.pthread = undefined;
 },
 receiveObjectTransfer: function(data) {},
 loadWasmModuleToWorker: function(worker, onFinishedLoading) {
  worker.onmessage = function(e) {
   var d = e["data"];
   var cmd = d["cmd"];
   if (worker.pthread) PThread.currentProxiedOperationCallerThread = worker.pthread.threadInfoStruct;
   if (d["targetThread"] && d["targetThread"] != _pthread_self()) {
    var thread = PThread.pthreads[d.targetThread];
    if (thread) {
     thread.worker.postMessage(e.data, d["transferList"]);
    } else {
     console.error('Internal error! Worker sent a message "' + cmd + '" to target pthread ' + d["targetThread"] + ", but that thread no longer exists!");
    }
    PThread.currentProxiedOperationCallerThread = undefined;
    return;
   }
   if (cmd === "processQueuedMainThreadWork") {
    _emscripten_main_thread_process_queued_calls();
   } else if (cmd === "spawnThread") {
    spawnThread(e.data);
   } else if (cmd === "cleanupThread") {
    cleanupThread(d["thread"]);
   } else if (cmd === "killThread") {
    killThread(d["thread"]);
   } else if (cmd === "cancelThread") {
    cancelThread(d["thread"]);
   } else if (cmd === "loaded") {
    worker.loaded = true;
    if (onFinishedLoading) onFinishedLoading(worker);
    if (worker.runPthread) {
     worker.runPthread();
     delete worker.runPthread;
    }
   } else if (cmd === "print") {
    out("Thread " + d["threadId"] + ": " + d["text"]);
   } else if (cmd === "printErr") {
    err("Thread " + d["threadId"] + ": " + d["text"]);
   } else if (cmd === "alert") {
    alert("Thread " + d["threadId"] + ": " + d["text"]);
   } else if (cmd === "exit") {
    var detached = worker.pthread && Atomics.load(GROWABLE_HEAP_U32(), worker.pthread.thread + 68 >> 2);
    if (detached) {
     PThread.returnWorkerToPool(worker);
    }
   } else if (cmd === "cancelDone") {
    PThread.returnWorkerToPool(worker);
   } else if (cmd === "objectTransfer") {
    PThread.receiveObjectTransfer(e.data);
   } else if (e.data.target === "setimmediate") {
    worker.postMessage(e.data);
   } else {
    err("worker sent an unknown command " + cmd);
   }
   PThread.currentProxiedOperationCallerThread = undefined;
  };
  worker.onerror = function(e) {
   err("pthread sent an error! " + e.filename + ":" + e.lineno + ": " + e.message);
  };
  if (ENVIRONMENT_IS_NODE) {
   worker.on("message", function(data) {
    worker.onmessage({
     data: data
    });
   });
   worker.on("error", function(data) {
    worker.onerror(data);
   });
   worker.on("exit", function(data) {
    console.log("worker exited - TODO: update the worker queue?");
   });
  }
  assert(wasmMemory instanceof WebAssembly.Memory, "WebAssembly memory should have been loaded by now!");
  assert(wasmModule instanceof WebAssembly.Module, "WebAssembly Module should have been loaded by now!");
  worker.postMessage({
   "cmd": "load",
   "urlOrBlob": Module["mainScriptUrlOrBlob"] || _scriptDir,
   "wasmMemory": wasmMemory,
   "wasmModule": wasmModule,
   "DYNAMIC_BASE": DYNAMIC_BASE,
   "DYNAMICTOP_PTR": DYNAMICTOP_PTR
  });
 },
 allocateUnusedWorker: function() {
  var pthreadMainJs = locateFile("pdfix_wasm.worker.js");
  PThread.unusedWorkers.push(new Worker(pthreadMainJs));
 },
 getNewWorker: function() {
  if (PThread.unusedWorkers.length == 0) {
   PThread.allocateUnusedWorker();
   PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);
  }
  if (PThread.unusedWorkers.length > 0) return PThread.unusedWorkers.pop(); else return null;
 },
 busySpinWait: function(msecs) {
  var t = performance.now() + msecs;
  while (performance.now() < t) {
  }
 }
};

function establishStackSpace(stackTop, stackMax) {
 STACK_BASE = STACKTOP = stackTop;
 STACK_MAX = stackMax;
 ___set_stack_limit(STACK_MAX);
 stackRestore(stackTop);
 writeStackCookie();
}

Module["establishStackSpace"] = establishStackSpace;

function getNoExitRuntime() {
 return noExitRuntime;
}

Module["getNoExitRuntime"] = getNoExitRuntime;

function jsStackTrace() {
 var err = new Error();
 if (!err.stack) {
  try {
   throw new Error();
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}

function stackTrace() {
 var js = jsStackTrace();
 if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
 return demangleAll(js);
}

function ___assert_fail(condition, filename, line, func) {
 abort("Assertion failed: " + UTF8ToString(condition) + ", at: " + [ filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function" ]);
}

var _emscripten_get_now;

if (ENVIRONMENT_IS_NODE) {
 _emscripten_get_now = function() {
  var t = process["hrtime"]();
  return t[0] * 1e3 + t[1] / 1e6;
 };
} else if (ENVIRONMENT_IS_PTHREAD) {
 _emscripten_get_now = function() {
  return performance.now() - Module["__performance_now_clock_drift"];
 };
} else if (typeof dateNow !== "undefined") {
 _emscripten_get_now = dateNow;
} else _emscripten_get_now = function() {
 return performance.now();
};

var _emscripten_get_now_is_monotonic = true;

function setErrNo(value) {
 GROWABLE_HEAP_I32()[___errno_location() >> 2] = value;
 return value;
}

function _clock_gettime(clk_id, tp) {
 var now;
 if (clk_id === 0) {
  now = Date.now();
 } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {
  now = _emscripten_get_now();
 } else {
  setErrNo(28);
  return -1;
 }
 GROWABLE_HEAP_I32()[tp >> 2] = now / 1e3 | 0;
 GROWABLE_HEAP_I32()[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
 return 0;
}

function ___clock_gettime(a0, a1) {
 return _clock_gettime(a0, a1);
}

function ___cxa_allocate_exception(size) {
 return _malloc(size);
}

function _atexit(func, arg) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(1, 1, func, arg);
 warnOnce("atexit() called, but EXIT_RUNTIME is not set, so atexits() will not be called. set EXIT_RUNTIME to 1 (see the FAQ)");
}

function ___cxa_atexit(a0, a1) {
 return _atexit(a0, a1);
}

var exceptionInfos = {};

var exceptionCaught = [];

function exception_addRef(ptr) {
 if (!ptr) return;
 var info = exceptionInfos[ptr];
 info.refcount++;
}

function exception_deAdjust(adjusted) {
 if (!adjusted || exceptionInfos[adjusted]) return adjusted;
 for (var key in exceptionInfos) {
  var ptr = +key;
  var adj = exceptionInfos[ptr].adjusted;
  var len = adj.length;
  for (var i = 0; i < len; i++) {
   if (adj[i] === adjusted) {
    return ptr;
   }
  }
 }
 return adjusted;
}

function __ZSt18uncaught_exceptionv() {
 return __ZSt18uncaught_exceptionv.uncaught_exceptions > 0;
}

function ___cxa_begin_catch(ptr) {
 var info = exceptionInfos[ptr];
 if (info && !info.caught) {
  info.caught = true;
  __ZSt18uncaught_exceptionv.uncaught_exceptions--;
 }
 if (info) info.rethrown = false;
 exceptionCaught.push(ptr);
 exception_addRef(exception_deAdjust(ptr));
 return ptr;
}

var exceptionLast = 0;

function ___cxa_free_exception(ptr) {
 try {
  return _free(ptr);
 } catch (e) {
  err("exception during cxa_free_exception: " + e);
 }
}

function exception_decRef(ptr) {
 if (!ptr) return;
 var info = exceptionInfos[ptr];
 assert(info.refcount > 0);
 info.refcount--;
 if (info.refcount === 0 && !info.rethrown) {
  if (info.destructor) {
   Module["dynCall_ii"](info.destructor, ptr);
  }
  delete exceptionInfos[ptr];
  ___cxa_free_exception(ptr);
 }
}

function ___cxa_end_catch() {
 _setThrew(0);
 var ptr = exceptionCaught.pop();
 if (ptr) {
  exception_decRef(exception_deAdjust(ptr));
  exceptionLast = 0;
 }
}

function ___cxa_find_matching_catch_2() {
 var thrown = exceptionLast;
 if (!thrown) {
  return (setTempRet0(0), 0) | 0;
 }
 var info = exceptionInfos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = ___cxa_is_pointer_type(throwntype);
 var buffer = 1830304;
 GROWABLE_HEAP_I32()[buffer >> 2] = thrown;
 thrown = buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {
   thrown = GROWABLE_HEAP_I32()[thrown >> 2];
   info.adjusted.push(thrown);
   return (setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = GROWABLE_HEAP_I32()[thrown >> 2];
 return (setTempRet0(throwntype), thrown) | 0;
}

function ___cxa_find_matching_catch_3() {
 var thrown = exceptionLast;
 if (!thrown) {
  return (setTempRet0(0), 0) | 0;
 }
 var info = exceptionInfos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = ___cxa_is_pointer_type(throwntype);
 var buffer = 1830304;
 GROWABLE_HEAP_I32()[buffer >> 2] = thrown;
 thrown = buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {
   thrown = GROWABLE_HEAP_I32()[thrown >> 2];
   info.adjusted.push(thrown);
   return (setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = GROWABLE_HEAP_I32()[thrown >> 2];
 return (setTempRet0(throwntype), thrown) | 0;
}

function ___cxa_rethrow() {
 var ptr = exceptionCaught.pop();
 ptr = exception_deAdjust(ptr);
 if (!exceptionInfos[ptr].rethrown) {
  exceptionCaught.push(ptr);
  exceptionInfos[ptr].rethrown = true;
 }
 exceptionLast = ptr;
 throw ptr;
}

function ___cxa_throw(ptr, type, destructor) {
 exceptionInfos[ptr] = {
  ptr: ptr,
  adjusted: [ ptr ],
  type: type,
  destructor: destructor,
  refcount: 0,
  caught: false,
  rethrown: false
 };
 exceptionLast = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exceptions++;
 }
 throw ptr;
}

function ___cxa_uncaught_exceptions() {
 return __ZSt18uncaught_exceptionv.uncaught_exceptions;
}

function ___handle_stack_overflow() {
 abort("stack overflow");
}

function ___map_file(pathname, size) {
 setErrNo(63);
 return -1;
}

function ___resumeException(ptr) {
 if (!exceptionLast) {
  exceptionLast = ptr;
 }
 throw ptr;
}

var PATH = {
 splitPath: function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 extname: function(path) {
  return PATH.splitPath(path)[3];
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 },
 join2: function(l, r) {
  return PATH.normalize(l + "/" + r);
 }
};

var PATH_FS = {
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function(p) {
   return !!p;
  }), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: function(from, to) {
  from = PATH_FS.resolve(from).substr(1);
  to = PATH_FS.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(43);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  flush: function(stream) {
   stream.tty.ops.flush(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(60);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(29);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(6);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(60);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);
     var bytesRead = 0;
     try {
      bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);
     } catch (e) {
      if (e.toString().indexOf("EOF") != -1) bytesRead = 0; else throw e;
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  flush: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

var MEMFS = {
 ops_table: null,
 mount: function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(63);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 },
 getFileDataAsRegularArray: function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 },
 getFileDataAsTypedArray: function(node) {
  if (!node.contents) return new Uint8Array(0);
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage: function(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
  return;
 },
 resizeFileStorage: function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(newSize);
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 },
 node_ops: {
  getattr: function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup: function(parent, name) {
   throw FS.genericErrors[44];
  },
  mknod: function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename: function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(55);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  },
  unlink: function(parent, name) {
   delete parent.contents[name];
  },
  rmdir: function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(55);
   }
   delete parent.contents[name];
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink: function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(28);
   }
   return node.link;
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write: function(stream, buffer, offset, length, position, canOwn) {
   assert(!(buffer instanceof ArrayBuffer));
   if (buffer.buffer === GROWABLE_HEAP_I8().buffer) {
    if (canOwn) {
     warnOnce("file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)");
    }
    canOwn = false;
   }
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = buffer.slice(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) {
    node.contents.set(buffer.subarray(offset, offset + length), position);
   } else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(28);
   }
   return position;
  },
  allocate: function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap: function(stream, address, length, position, prot, flags) {
   assert(address === 0);
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(43);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && contents.buffer === buffer) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < contents.length) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = FS.mmapAlloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(48);
    }
    GROWABLE_HEAP_I8().set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync: function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(43);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

var ERRNO_MESSAGES = {
 0: "Success",
 1: "Arg list too long",
 2: "Permission denied",
 3: "Address already in use",
 4: "Address not available",
 5: "Address family not supported by protocol family",
 6: "No more processes",
 7: "Socket already connected",
 8: "Bad file number",
 9: "Trying to read unreadable message",
 10: "Mount device busy",
 11: "Operation canceled",
 12: "No children",
 13: "Connection aborted",
 14: "Connection refused",
 15: "Connection reset by peer",
 16: "File locking deadlock error",
 17: "Destination address required",
 18: "Math arg out of domain of func",
 19: "Quota exceeded",
 20: "File exists",
 21: "Bad address",
 22: "File too large",
 23: "Host is unreachable",
 24: "Identifier removed",
 25: "Illegal byte sequence",
 26: "Connection already in progress",
 27: "Interrupted system call",
 28: "Invalid argument",
 29: "I/O error",
 30: "Socket is already connected",
 31: "Is a directory",
 32: "Too many symbolic links",
 33: "Too many open files",
 34: "Too many links",
 35: "Message too long",
 36: "Multihop attempted",
 37: "File or path name too long",
 38: "Network interface is not configured",
 39: "Connection reset by network",
 40: "Network is unreachable",
 41: "Too many open files in system",
 42: "No buffer space available",
 43: "No such device",
 44: "No such file or directory",
 45: "Exec format error",
 46: "No record locks available",
 47: "The link has been severed",
 48: "Not enough core",
 49: "No message of desired type",
 50: "Protocol not available",
 51: "No space left on device",
 52: "Function not implemented",
 53: "Socket is not connected",
 54: "Not a directory",
 55: "Directory not empty",
 56: "State not recoverable",
 57: "Socket operation on non-socket",
 59: "Not a typewriter",
 60: "No such device or address",
 61: "Value too large for defined data type",
 62: "Previous owner died",
 63: "Not super-user",
 64: "Broken pipe",
 65: "Protocol error",
 66: "Unknown protocol",
 67: "Protocol wrong type for socket",
 68: "Math result not representable",
 69: "Read only file system",
 70: "Illegal seek",
 71: "No such process",
 72: "Stale file handle",
 73: "Connection timed out",
 74: "Text file busy",
 75: "Cross-device link",
 100: "Device not a stream",
 101: "Bad font file fmt",
 102: "Invalid slot",
 103: "Invalid request code",
 104: "No anode",
 105: "Block device required",
 106: "Channel number out of range",
 107: "Level 3 halted",
 108: "Level 3 reset",
 109: "Link number out of range",
 110: "Protocol driver not attached",
 111: "No CSI structure available",
 112: "Level 2 halted",
 113: "Invalid exchange",
 114: "Invalid request descriptor",
 115: "Exchange full",
 116: "No data (for no delay io)",
 117: "Timer expired",
 118: "Out of streams resources",
 119: "Machine is not on the network",
 120: "Package not installed",
 121: "The object is remote",
 122: "Advertise error",
 123: "Srmount error",
 124: "Communication error on send",
 125: "Cross mount point (not really error)",
 126: "Given log. name not unique",
 127: "f.d. invalid for this operation",
 128: "Remote address changed",
 129: "Can   access a needed shared lib",
 130: "Accessing a corrupted shared lib",
 131: ".lib section in a.out corrupted",
 132: "Attempting to link in too many libs",
 133: "Attempting to exec a shared library",
 135: "Streams pipe error",
 136: "Too many users",
 137: "Socket type not supported",
 138: "Not supported",
 139: "Protocol family not supported",
 140: "Can't send after socket shutdown",
 141: "Too many references",
 142: "Host is down",
 148: "No medium (in tape drive)",
 156: "Level 2 not synchronized"
};

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return setErrNo(e.errno);
 },
 lookupPath: function(path, opts) {
  path = PATH_FS.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(32);
  }
  var parts = PATH.normalizeArray(path.split("/").filter(function(p) {
   return !!p;
  }), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(32);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 },
 hashName: function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: function(parent, name) {
  var errCode = FS.mayLookup(parent);
  if (errCode) {
   throw new FS.ErrnoError(errCode, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: function(parent, name, mode, rdev) {
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: function(node) {
  FS.hashRemoveNode(node);
 },
 isRoot: function(node) {
  return node === node.parent;
 },
 isMountpoint: function(node) {
  return !!node.mounted;
 },
 isFile: function(mode) {
  return (mode & 61440) === 32768;
 },
 isDir: function(mode) {
  return (mode & 61440) === 16384;
 },
 isLink: function(mode) {
  return (mode & 61440) === 40960;
 },
 isChrdev: function(mode) {
  return (mode & 61440) === 8192;
 },
 isBlkdev: function(mode) {
  return (mode & 61440) === 24576;
 },
 isFIFO: function(mode) {
  return (mode & 61440) === 4096;
 },
 isSocket: function(mode) {
  return (mode & 49152) === 49152;
 },
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 },
 flagsToPermissionString: function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return 2;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return 2;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return 2;
  }
  return 0;
 },
 mayLookup: function(dir) {
  var errCode = FS.nodePermissions(dir, "x");
  if (errCode) return errCode;
  if (!dir.node_ops.lookup) return 2;
  return 0;
 },
 mayCreate: function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return 20;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var errCode = FS.nodePermissions(dir, "wx");
  if (errCode) {
   return errCode;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 54;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 10;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 31;
   }
  }
  return 0;
 },
 mayOpen: function(node, flags) {
  if (!node) {
   return 44;
  }
  if (FS.isLink(node.mode)) {
   return 32;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 31;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(33);
 },
 getStream: function(fd) {
  return FS.streams[fd];
 },
 createStream: function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = function() {};
   FS.FSStream.prototype = {
    object: {
     get: function() {
      return this.node;
     },
     set: function(val) {
      this.node = val;
     }
    },
    isRead: {
     get: function() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get: function() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get: function() {
      return this.flags & 1024;
     }
    }
   };
  }
  var newStream = new FS.FSStream();
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: function(fd) {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: function() {
   throw new FS.ErrnoError(70);
  }
 },
 major: function(dev) {
  return dev >> 8;
 },
 minor: function(dev) {
  return dev & 255;
 },
 makedev: function(ma, mi) {
  return ma << 8 | mi;
 },
 registerDevice: function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: function(dev) {
  return FS.devices[dev];
 },
 getMounts: function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(errCode) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(errCode);
  }
  function done(errCode) {
   if (errCode) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(errCode);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach(function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  });
 },
 mount: function(type, opts, mountpoint) {
  if (typeof type === "string") {
   throw type;
  }
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(10);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(10);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(54);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(28);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach(function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  });
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 },
 mknod: function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.mayCreate(parent, name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: function(path, mode) {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 20) throw e;
   }
  }
 },
 mkdev: function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: function(oldpath, newpath) {
  if (!PATH_FS.resolve(oldpath)) {
   throw new FS.ErrnoError(44);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var newname = PATH.basename(newpath);
  var errCode = FS.mayCreate(parent, newname);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(10);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(75);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH_FS.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(28);
  }
  relative = PATH_FS.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(55);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var errCode = FS.mayDelete(old_dir, old_name, isdir);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(10);
  }
  if (new_dir !== old_dir) {
   errCode = FS.nodePermissions(old_dir, "w");
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   err("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   err("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 },
 rmdir: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, true);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(54);
  }
  return node.node_ops.readdir(node);
 },
 unlink: function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, false);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 },
 readlink: function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(44);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(28);
  }
  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(63);
  }
  return node.node_ops.getattr(node);
 },
 lstat: function(path) {
  return FS.stat(path, true);
 },
 chmod: function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: function(path, mode) {
  FS.chmod(path, mode, true);
 },
 fchmod: function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chmod(stream.node, mode);
 },
 chown: function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 },
 fchown: function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chown(stream.node, uid, gid);
 },
 truncate: function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(28);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.nodePermissions(node, "w");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(28);
  }
  FS.truncate(stream.node, len);
 },
 utime: function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(44);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(20);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(54);
  }
  if (!created) {
   var errCode = FS.mayOpen(node, flags);
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512 | 131072);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    err("FS.trackingDelegate error on read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   err("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 },
 close: function(stream) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: function(stream) {
  return stream.fd === null;
 },
 llseek: function(stream, offset, whence) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(70);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(28);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(28);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(28);
  }
  if (stream.seekable && stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   err("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 },
 allocate: function(stream, offset, length) {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(28);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(138);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: function(stream, address, length, position, prot, flags) {
  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
   throw new FS.ErrnoError(2);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(2);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(43);
  }
  return stream.stream_ops.mmap(stream, address, length, position, prot, flags);
 },
 msync: function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: function(stream) {
  return 0;
 },
 ioctl: function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(59);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data === "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: function() {
  return FS.currentPath;
 },
 chdir: function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(44);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(54);
  }
  var errCode = FS.nodePermissions(lookup.node, "x");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: function() {
    return 0;
   },
   write: function(stream, buffer, offset, length, pos) {
    return length;
   }
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto === "object" && typeof crypto["getRandomValues"] === "function") {
   var randomBuffer = new Uint8Array(1);
   random_device = function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   };
  } else if (ENVIRONMENT_IS_NODE) {
   try {
    var crypto_module = require("crypto");
    random_device = function() {
     return crypto_module["randomBytes"](1)[0];
    };
   } catch (e) {}
  } else {}
  if (!random_device) {
   random_device = function() {
    abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
   };
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(8);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: function() {
         return stream.path;
        }
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  var stdout = FS.open("/dev/stdout", "w");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 },
 ensureErrnoError: function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   };
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) {
    Object.defineProperty(this, "stack", {
     value: new Error().stack,
     writable: true
    });
    this.stack = demangleAll(this.stack);
   }
  };
  FS.ErrnoError.prototype = new Error();
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 44 ].forEach(function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  });
 },
 staticInit: function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS
  };
 },
 init: function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 getMode: function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 },
 joinPath: function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 },
 absolutePath: function(relative, base) {
  return PATH_FS.resolve(base, relative);
 },
 standardizePath: function(path) {
  return PATH.normalize(path);
 },
 findObject: function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   setErrNo(ret.error);
   return null;
  }
 },
 analyzePath: function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createFolder: function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 },
 createPath: function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: function(stream) {
    stream.seekable = false;
   },
   close: function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(6);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 createLink: function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 },
 forceLoadFile: function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (read_) {
   try {
    obj.contents = intArrayFromString(read_(obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) setErrNo(29);
  return success;
 },
 createLazyFile: function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest();
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   };
   var lazyArray = this;
   lazyArray.setDataGetter(function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   });
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    out("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array();
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach(function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(29);
    }
    return fn.apply(null, arguments);
   };
  });
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(29);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 },
 createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach(function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     });
     handled = true;
    }
   });
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, function(byteArray) {
    processData(byteArray);
   }, onerror);
  } else {
   processData(url);
  }
 },
 indexedDB: function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 },
 DB_NAME: function() {
  return "EM_FS_" + window.location.pathname;
 },
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   out("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 loadFilesFromDB: function(paths, onload, onerror) {
  onload = onload || function() {};
  onerror = onerror || function() {};
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 mmapAlloc: function(size) {
  var alignedSize = alignMemory(size, 16384);
  var ptr = _malloc(alignedSize);
  while (size < alignedSize) GROWABLE_HEAP_I8()[ptr + size++] = 0;
  return ptr;
 }
};

var SYSCALLS = {
 mappings: {},
 DEFAULT_POLLMASK: 5,
 umask: 511,
 calculateAt: function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(8);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -54;
   }
   throw e;
  }
  GROWABLE_HEAP_I32()[buf >> 2] = stat.dev;
  GROWABLE_HEAP_I32()[buf + 4 >> 2] = 0;
  GROWABLE_HEAP_I32()[buf + 8 >> 2] = stat.ino;
  GROWABLE_HEAP_I32()[buf + 12 >> 2] = stat.mode;
  GROWABLE_HEAP_I32()[buf + 16 >> 2] = stat.nlink;
  GROWABLE_HEAP_I32()[buf + 20 >> 2] = stat.uid;
  GROWABLE_HEAP_I32()[buf + 24 >> 2] = stat.gid;
  GROWABLE_HEAP_I32()[buf + 28 >> 2] = stat.rdev;
  GROWABLE_HEAP_I32()[buf + 32 >> 2] = 0;
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  GROWABLE_HEAP_I32()[buf + 40 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 44 >> 2] = tempI64[1];
  GROWABLE_HEAP_I32()[buf + 48 >> 2] = 4096;
  GROWABLE_HEAP_I32()[buf + 52 >> 2] = stat.blocks;
  GROWABLE_HEAP_I32()[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;
  GROWABLE_HEAP_I32()[buf + 60 >> 2] = 0;
  GROWABLE_HEAP_I32()[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  GROWABLE_HEAP_I32()[buf + 68 >> 2] = 0;
  GROWABLE_HEAP_I32()[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  GROWABLE_HEAP_I32()[buf + 76 >> 2] = 0;
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  GROWABLE_HEAP_I32()[buf + 80 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 84 >> 2] = tempI64[1];
  return 0;
 },
 doMsync: function(addr, stream, len, flags, offset) {
  var buffer = GROWABLE_HEAP_U8().slice(addr, addr + len);
  FS.msync(stream, buffer, offset, len, flags);
 },
 doMkdir: function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 },
 doMknod: function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;

  default:
   return -28;
  }
  FS.mknod(path, mode, dev);
  return 0;
 },
 doReadlink: function(path, buf, bufsize) {
  if (bufsize <= 0) return -28;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = GROWABLE_HEAP_I8()[buf + len];
  stringToUTF8(ret, buf, bufsize + 1);
  GROWABLE_HEAP_I8()[buf + len] = endChar;
  return len;
 },
 doAccess: function(path, amode) {
  if (amode & ~7) {
   return -28;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  if (!node) {
   return -44;
  }
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -2;
  }
  return 0;
 },
 doDup: function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 },
 doReadv: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];
   var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 },
 doWritev: function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];
   var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 },
 varargs: undefined,
 get: function() {
  assert(SYSCALLS.varargs != undefined);
  SYSCALLS.varargs += 4;
  var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >> 2];
  return ret;
 },
 getStr: function(ptr) {
  var ret = UTF8ToString(ptr);
  return ret;
 },
 getStreamFromFD: function(fd) {
  var stream = FS.getStream(fd);
  if (!stream) throw new FS.ErrnoError(8);
  return stream;
 },
 get64: function(low, high) {
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }
};

function ___sys_fcntl64(fd, cmd, varargs) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(2, 1, fd, cmd, varargs);
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -28;
    }
    var newStream;
    newStream = FS.open(stream.path, stream.flags, 0, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 12:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    GROWABLE_HEAP_I16()[arg + offset >> 1] = 2;
    return 0;
   }

  case 13:
  case 14:
   return 0;

  case 16:
  case 8:
   return -28;

  case 9:
   setErrNo(28);
   return -1;

  default:
   {
    return -28;
   }
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_fstat64(fd, buf) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(3, 1, fd, buf);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return SYSCALLS.doStat(FS.stat, stream.path, buf);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_ftruncate64(fd, zero, low, high) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(4, 1, fd, zero, low, high);
 try {
  var length = SYSCALLS.get64(low, high);
  FS.ftruncate(fd, length);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_getdents64(fd, dirp, count) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(5, 1, fd, dirp, count);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  if (!stream.getdents) {
   stream.getdents = FS.readdir(stream.path);
  }
  var struct_size = 280;
  var pos = 0;
  var off = FS.llseek(stream, 0, 1);
  var idx = Math.floor(off / struct_size);
  while (idx < stream.getdents.length && pos + struct_size <= count) {
   var id;
   var type;
   var name = stream.getdents[idx];
   if (name[0] === ".") {
    id = 1;
    type = 4;
   } else {
    var child = FS.lookupNode(stream.node, name);
    id = child.id;
    type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8;
   }
   tempI64 = [ id >>> 0, (tempDouble = id, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
   GROWABLE_HEAP_I32()[dirp + pos >> 2] = tempI64[0], GROWABLE_HEAP_I32()[dirp + pos + 4 >> 2] = tempI64[1];
   tempI64 = [ (idx + 1) * struct_size >>> 0, (tempDouble = (idx + 1) * struct_size, 
   +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
   GROWABLE_HEAP_I32()[dirp + pos + 8 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[dirp + pos + 12 >> 2] = tempI64[1];
   GROWABLE_HEAP_I16()[dirp + pos + 16 >> 1] = 280;
   GROWABLE_HEAP_I8()[dirp + pos + 18 >> 0] = type;
   stringToUTF8(name, dirp + pos + 19, 256);
   pos += struct_size;
   idx += 1;
  }
  FS.llseek(stream, idx * struct_size, 0);
  return pos;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_getpid() {
 return 42;
}

function ___sys_ioctl(fd, op, varargs) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(6, 1, fd, op, varargs);
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -59;
    var argp = SYSCALLS.get();
    GROWABLE_HEAP_I32()[argp >> 2] = 0;
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -59;
    return -28;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_madvise1(addr, length, advice) {
 return 0;
}

function syscallMmap2(addr, len, prot, flags, fd, off) {
 off <<= 12;
 var ptr;
 var allocated = false;
 if ((flags & 16) !== 0 && addr % 16384 !== 0) {
  return -28;
 }
 if ((flags & 32) !== 0) {
  ptr = _memalign(16384, len);
  if (!ptr) return -48;
  _memset(ptr, 0, len);
  allocated = true;
 } else {
  var info = FS.getStream(fd);
  if (!info) return -8;
  var res = FS.mmap(info, addr, len, off, prot, flags);
  ptr = res.ptr;
  allocated = res.allocated;
 }
 SYSCALLS.mappings[ptr] = {
  malloc: ptr,
  len: len,
  allocated: allocated,
  fd: fd,
  prot: prot,
  flags: flags,
  offset: off
 };
 return ptr;
}

function ___sys_mmap2(addr, len, prot, flags, fd, off) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(7, 1, addr, len, prot, flags, fd, off);
 try {
  return syscallMmap2(addr, len, prot, flags, fd, off);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_mprotect(addr, len, size) {
 return 0;
}

function syscallMunmap(addr, len) {
 if ((addr | 0) === -1 || len === 0) {
  return -28;
 }
 var info = SYSCALLS.mappings[addr];
 if (!info) return 0;
 if (len === info.len) {
  var stream = FS.getStream(info.fd);
  if (info.prot & 2) {
   SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);
  }
  FS.munmap(stream);
  SYSCALLS.mappings[addr] = null;
  if (info.allocated) {
   _free(info.malloc);
  }
 }
 return 0;
}

function ___sys_munmap(addr, len) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(8, 1, addr, len);
 try {
  return syscallMunmap(addr, len);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_open(path, flags, varargs) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(9, 1, path, flags, varargs);
 SYSCALLS.varargs = varargs;
 try {
  var pathname = SYSCALLS.getStr(path);
  var mode = SYSCALLS.get();
  var stream = FS.open(pathname, flags, mode);
  return stream.fd;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_read(fd, buf, count) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(10, 1, fd, buf, count);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return FS.read(stream, GROWABLE_HEAP_I8(), buf, count);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_rmdir(path) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(11, 1, path);
 try {
  path = SYSCALLS.getStr(path);
  FS.rmdir(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_stat64(path, buf) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(12, 1, path, buf);
 try {
  path = SYSCALLS.getStr(path);
  return SYSCALLS.doStat(FS.stat, path, buf);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function ___sys_unlink(path) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(13, 1, path);
 try {
  path = SYSCALLS.getStr(path);
  FS.unlink(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}

function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;

 case 2:
  return 1;

 case 4:
  return 2;

 case 8:
  return 3;

 default:
  throw new TypeError("Unknown type size: " + size);
 }
}

function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (GROWABLE_HEAP_U8()[c]) {
  ret += embind_charCodes[GROWABLE_HEAP_U8()[c++]];
 }
 return ret;
}

var awaitingDependencies = {};

var registeredTypes = {};

var typeDependencies = {};

var char_0 = 48;

var char_9 = 57;

function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 } else {
  return name;
 }
}

function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n")(body);
}

function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, function(message) {
  this.name = errorName;
  this.message = message;
  var stack = new Error(message).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 });
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 };
 return errorClass;
}

var BindingError = undefined;

function throwBindingError(message) {
 throw new BindingError(message);
}

var InternalError = undefined;

function throwInternalError(message) {
 throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach(function(type) {
  typeDependencies[type] = dependentTypes;
 });
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach(function(dt, i) {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push(function() {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   });
  }
 });
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}

function registerType(rawType, registeredInstance, options) {
 options = options || {};
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach(function(cb) {
   cb();
  });
 }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(wt) {
   return !!wt;
  },
  "toWireType": function(destructors, o) {
   return o ? trueValue : falseValue;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": function(pointer) {
   var heap;
   if (size === 1) {
    heap = GROWABLE_HEAP_I8();
   } else if (size === 2) {
    heap = GROWABLE_HEAP_I16();
   } else if (size === 4) {
    heap = GROWABLE_HEAP_I32();
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  },
  destructorFunction: null
 });
}

var emval_free_list = [];

var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];

function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}

function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}

function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}

function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}

function __emval_register(value) {
 switch (value) {
 case undefined:
  {
   return 1;
  }

 case null:
  {
   return 2;
  }

 case true:
  {
   return 3;
  }

 case false:
  {
   return 4;
  }

 default:
  {
   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
   emval_handle_array[handle] = {
    refcount: 1,
    value: value
   };
   return handle;
  }
 }
}

function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](GROWABLE_HEAP_U32()[pointer >> 2]);
}

function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(handle) {
   var rv = emval_handle_array[handle].value;
   __emval_decref(handle);
   return rv;
  },
  "toWireType": function(destructors, value) {
   return __emval_register(value);
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}

function _embind_repr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}

function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return function(pointer) {
   return this["fromWireType"](GROWABLE_HEAP_F32()[pointer >> 2]);
  };

 case 3:
  return function(pointer) {
   return this["fromWireType"](GROWABLE_HEAP_F64()[pointer >> 3]);
  };

 default:
  throw new TypeError("Unknown float type: " + name);
 }
}

function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   return value;
  },
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   return value;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}

function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return GROWABLE_HEAP_I8()[pointer];
  } : function readU8FromPointer(pointer) {
   return GROWABLE_HEAP_U8()[pointer];
  };

 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return GROWABLE_HEAP_I16()[pointer >> 1];
  } : function readU16FromPointer(pointer) {
   return GROWABLE_HEAP_U16()[pointer >> 1];
  };

 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return GROWABLE_HEAP_I32()[pointer >> 2];
  } : function readU32FromPointer(pointer) {
   return GROWABLE_HEAP_U32()[pointer >> 2];
  };

 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = function(value) {
  return value;
 };
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = function(value) {
   return value << bitshift >>> bitshift;
  };
 }
 var isUnsignedType = name.indexOf("unsigned") != -1;
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   if (value < minRange || value > maxRange) {
    throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
   }
   return isUnsignedType ? value >>> 0 : value | 0;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = GROWABLE_HEAP_U32();
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(buffer, data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}

function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 var stdStringIsUTF8 = name === "std::string";
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = GROWABLE_HEAP_U32()[value >> 2];
   var str;
   if (stdStringIsUTF8) {
    var decodeStartPtr = value + 4;
    for (var i = 0; i <= length; ++i) {
     var currentBytePtr = value + 4 + i;
     if (i == length || GROWABLE_HEAP_U8()[currentBytePtr] == 0) {
      var maxRead = currentBytePtr - decodeStartPtr;
      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);
      if (str === undefined) {
       str = stringSegment;
      } else {
       str += String.fromCharCode(0);
       str += stringSegment;
      }
      decodeStartPtr = currentBytePtr + 1;
     }
    }
   } else {
    var a = new Array(length);
    for (var i = 0; i < length; ++i) {
     a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[value + 4 + i]);
    }
    str = a.join("");
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   var getLength;
   var valueIsOfTypeString = typeof value === "string";
   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
    throwBindingError("Cannot pass non-string to std::string");
   }
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    getLength = function() {
     return lengthBytesUTF8(value);
    };
   } else {
    getLength = function() {
     return value.length;
    };
   }
   var length = getLength();
   var ptr = _malloc(4 + length + 1);
   GROWABLE_HEAP_U32()[ptr >> 2] = length;
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    stringToUTF8(value, ptr + 4, length + 1);
   } else {
    if (valueIsOfTypeString) {
     for (var i = 0; i < length; ++i) {
      var charCode = value.charCodeAt(i);
      if (charCode > 255) {
       _free(ptr);
       throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
      }
      GROWABLE_HEAP_U8()[ptr + 4 + i] = charCode;
     }
    } else {
     for (var i = 0; i < length; ++i) {
      GROWABLE_HEAP_U8()[ptr + 4 + i] = value[i];
     }
    }
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var decodeString, encodeString, getHeap, lengthBytesUTF, shift;
 if (charSize === 2) {
  decodeString = UTF16ToString;
  encodeString = stringToUTF16;
  lengthBytesUTF = lengthBytesUTF16;
  getHeap = function() {
   return GROWABLE_HEAP_U16();
  };
  shift = 1;
 } else if (charSize === 4) {
  decodeString = UTF32ToString;
  encodeString = stringToUTF32;
  lengthBytesUTF = lengthBytesUTF32;
  getHeap = function() {
   return GROWABLE_HEAP_U32();
  };
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = GROWABLE_HEAP_U32()[value >> 2];
   var HEAP = getHeap();
   var str;
   var decodeStartPtr = value + 4;
   for (var i = 0; i <= length; ++i) {
    var currentBytePtr = value + 4 + i * charSize;
    if (i == length || HEAP[currentBytePtr >> shift] == 0) {
     var maxReadBytes = currentBytePtr - decodeStartPtr;
     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);
     if (str === undefined) {
      str = stringSegment;
     } else {
      str += String.fromCharCode(0);
      str += stringSegment;
     }
     decodeStartPtr = currentBytePtr + charSize;
    }
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (!(typeof value === "string")) {
    throwBindingError("Cannot pass non-string to C++ string type " + name);
   }
   var length = lengthBytesUTF(value);
   var ptr = _malloc(4 + length + charSize);
   GROWABLE_HEAP_U32()[ptr >> 2] = length >> shift;
   encodeString(value, ptr + 4, length + charSize);
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": function() {
   return undefined;
  },
  "toWireType": function(destructors, o) {
   return undefined;
  }
 });
}

function __emscripten_notify_thread_queue(targetThreadId, mainThreadId) {
 if (targetThreadId == mainThreadId) {
  postMessage({
   "cmd": "processQueuedMainThreadWork"
  });
 } else if (ENVIRONMENT_IS_PTHREAD) {
  postMessage({
   "targetThread": targetThreadId,
   "cmd": "processThreadQueue"
  });
 } else {
  var pthread = PThread.pthreads[targetThreadId];
  var worker = pthread && pthread.worker;
  if (!worker) {
   err("Cannot send message to thread with ID " + targetThreadId + ", unknown thread ID!");
   return;
  }
  worker.postMessage({
   "cmd": "processThreadQueue"
  });
 }
 return 1;
}

function _abort() {
 abort();
}

var _abs = Math_abs;

function _emscripten_check_blocking_allowed() {
 if (ENVIRONMENT_IS_NODE) return;
 if (ENVIRONMENT_IS_WORKER) return;
 warnOnce("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread");
}

function _emscripten_conditional_set_current_thread_status_js(expectedStatus, newStatus) {}

function _emscripten_conditional_set_current_thread_status(expectedStatus, newStatus) {
 expectedStatus = expectedStatus | 0;
 newStatus = newStatus | 0;
}

function _emscripten_futex_wait(addr, val, timeout) {
 if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & 3 != 0) return -28;
 if (ENVIRONMENT_IS_WORKER) {
  var ret = Atomics.wait(GROWABLE_HEAP_I32(), addr >> 2, val, timeout);
  if (ret === "timed-out") return -73;
  if (ret === "not-equal") return -6;
  if (ret === "ok") return 0;
  throw "Atomics.wait returned an unexpected value " + ret;
 } else {
  var loadedVal = Atomics.load(GROWABLE_HEAP_I32(), addr >> 2);
  if (val != loadedVal) return -6;
  var tNow = performance.now();
  var tEnd = tNow + timeout;
  Atomics.store(GROWABLE_HEAP_I32(), __main_thread_futex_wait_address >> 2, addr);
  var ourWaitAddress = addr;
  while (addr == ourWaitAddress) {
   tNow = performance.now();
   if (tNow > tEnd) {
    return -73;
   }
   _emscripten_main_thread_process_queued_calls();
   addr = Atomics.load(GROWABLE_HEAP_I32(), __main_thread_futex_wait_address >> 2);
  }
  return 0;
 }
}

function _emscripten_get_sbrk_ptr() {
 return 1830144;
}

function _emscripten_is_main_browser_thread() {
 return __pthread_is_main_browser_thread | 0;
}

function _emscripten_is_main_runtime_thread() {
 return __pthread_is_main_runtime_thread | 0;
}

function _longjmp(env, value) {
 _setThrew(env, value || 1);
 throw "longjmp";
}

function _emscripten_longjmp(env, value) {
 _longjmp(env, value);
}

function _emscripten_memcpy_big(dest, src, num) {
 GROWABLE_HEAP_U8().copyWithin(dest, src, src + num);
}

function _emscripten_proxy_to_main_thread_js(index, sync) {
 var numCallArgs = arguments.length - 2;
 if (numCallArgs > 20 - 1) throw "emscripten_proxy_to_main_thread_js: Too many arguments " + numCallArgs + " to proxied function idx=" + index + ", maximum supported is " + (20 - 1) + "!";
 var stack = stackSave();
 var args = stackAlloc(numCallArgs * 8);
 var b = args >> 3;
 for (var i = 0; i < numCallArgs; i++) {
  GROWABLE_HEAP_F64()[b + i] = arguments[2 + i];
 }
 var ret = _emscripten_run_in_main_runtime_thread_js(index, numCallArgs, args, sync);
 stackRestore(stack);
 return ret;
}

var _emscripten_receive_on_main_thread_js_callArgs = [];

var readAsmConstArgsArray = [];

function readAsmConstArgs(sigPtr, buf) {
 assert(Array.isArray(readAsmConstArgsArray));
 assert(buf % 16 == 0);
 readAsmConstArgsArray.length = 0;
 var ch;
 buf >>= 2;
 while (ch = GROWABLE_HEAP_U8()[sigPtr++]) {
  assert(ch === 100 || ch === 102 || ch === 105);
  var double = ch < 105;
  if (double && buf & 1) buf++;
  readAsmConstArgsArray.push(double ? GROWABLE_HEAP_F64()[buf++ >> 1] : GROWABLE_HEAP_I32()[buf]);
  ++buf;
 }
 return readAsmConstArgsArray;
}

function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {
 _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;
 var b = args >> 3;
 for (var i = 0; i < numCallArgs; i++) {
  _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i];
 }
 var isEmAsmConst = index < 0;
 var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];
 assert(func.length == numCallArgs, "Call args mismatch in emscripten_receive_on_main_thread_js");
 return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);
}

function _emscripten_get_heap_size() {
 return GROWABLE_HEAP_U8().length;
}

function emscripten_realloc_buffer(size) {
 try {
  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
  updateGlobalBufferAndViews(wasmMemory.buffer);
  return 1;
 } catch (e) {
  console.error("emscripten_realloc_buffer: Attempted to grow heap from " + buffer.byteLength + " bytes to " + size + " bytes, but got error: " + e);
 }
}

function _emscripten_resize_heap(requestedSize) {
 requestedSize = requestedSize >>> 0;
 var oldSize = _emscripten_get_heap_size();
 if (requestedSize <= oldSize) {
  return false;
 }
 var PAGE_MULTIPLE = 65536;
 var maxHeapSize = 2147483648;
 if (requestedSize > maxHeapSize) {
  err("Cannot enlarge memory, asked to go up to " + requestedSize + " bytes, but the limit is " + maxHeapSize + " bytes!");
  return false;
 }
 var minHeapSize = 16777216;
 for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
  var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), PAGE_MULTIPLE));
  var replacement = emscripten_realloc_buffer(newSize);
  if (replacement) {
   return true;
  }
 }
 err("Failed to grow the heap from " + oldSize + " bytes to " + newSize + " bytes, not enough memory!");
 return false;
}

var JSEvents = {
 inEventHandler: 0,
 removeAllEventListeners: function() {
  for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {
   JSEvents._removeHandler(i);
  }
  JSEvents.eventHandlers = [];
  JSEvents.deferredCalls = [];
 },
 registerRemoveEventListeners: function() {
  if (!JSEvents.removeEventListenersRegistered) {
   __ATEXIT__.push(JSEvents.removeAllEventListeners);
   JSEvents.removeEventListenersRegistered = true;
  }
 },
 deferredCalls: [],
 deferCall: function(targetFunction, precedence, argsList) {
  function arraysHaveEqualContent(arrA, arrB) {
   if (arrA.length != arrB.length) return false;
   for (var i in arrA) {
    if (arrA[i] != arrB[i]) return false;
   }
   return true;
  }
  for (var i in JSEvents.deferredCalls) {
   var call = JSEvents.deferredCalls[i];
   if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {
    return;
   }
  }
  JSEvents.deferredCalls.push({
   targetFunction: targetFunction,
   precedence: precedence,
   argsList: argsList
  });
  JSEvents.deferredCalls.sort(function(x, y) {
   return x.precedence < y.precedence;
  });
 },
 removeDeferredCalls: function(targetFunction) {
  for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {
   if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {
    JSEvents.deferredCalls.splice(i, 1);
    --i;
   }
  }
 },
 canPerformEventHandlerRequests: function() {
  return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;
 },
 runDeferredCalls: function() {
  if (!JSEvents.canPerformEventHandlerRequests()) {
   return;
  }
  for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {
   var call = JSEvents.deferredCalls[i];
   JSEvents.deferredCalls.splice(i, 1);
   --i;
   call.targetFunction.apply(null, call.argsList);
  }
 },
 eventHandlers: [],
 removeAllHandlersOnTarget: function(target, eventTypeString) {
  for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {
   if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {
    JSEvents._removeHandler(i--);
   }
  }
 },
 _removeHandler: function(i) {
  var h = JSEvents.eventHandlers[i];
  h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);
  JSEvents.eventHandlers.splice(i, 1);
 },
 registerOrRemoveHandler: function(eventHandler) {
  var jsEventHandler = function jsEventHandler(event) {
   ++JSEvents.inEventHandler;
   JSEvents.currentEventHandler = eventHandler;
   JSEvents.runDeferredCalls();
   eventHandler.handlerFunc(event);
   JSEvents.runDeferredCalls();
   --JSEvents.inEventHandler;
  };
  if (eventHandler.callbackfunc) {
   eventHandler.eventListenerFunc = jsEventHandler;
   eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);
   JSEvents.eventHandlers.push(eventHandler);
   JSEvents.registerRemoveEventListeners();
  } else {
   for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {
    if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {
     JSEvents._removeHandler(i--);
    }
   }
  }
 },
 queueEventHandlerOnThread_iiii: function(targetThread, eventHandlerFunc, eventTypeId, eventData, userData) {
  var stackTop = stackSave();
  var varargs = stackAlloc(12);
  GROWABLE_HEAP_I32()[varargs >> 2] = eventTypeId;
  GROWABLE_HEAP_I32()[varargs + 4 >> 2] = eventData;
  GROWABLE_HEAP_I32()[varargs + 8 >> 2] = userData;
  __emscripten_call_on_thread(0, targetThread, 637534208, eventHandlerFunc, eventData, varargs);
  stackRestore(stackTop);
 },
 getTargetThreadForEventCallback: function(targetThread) {
  switch (targetThread) {
  case 1:
   return 0;

  case 2:
   return PThread.currentProxiedOperationCallerThread;

  default:
   return targetThread;
  }
 },
 getNodeNameForTarget: function(target) {
  if (!target) return "";
  if (target == window) return "#window";
  if (target == screen) return "#screen";
  return target && target.nodeName ? target.nodeName : "";
 },
 fullscreenEnabled: function() {
  return document.fullscreenEnabled || document.webkitFullscreenEnabled;
 }
};

function stringToNewUTF8(jsString) {
 var length = lengthBytesUTF8(jsString) + 1;
 var cString = _malloc(length);
 stringToUTF8(jsString, cString, length);
 return cString;
}

function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height) {
 var stackTop = stackSave();
 var varargs = stackAlloc(12);
 var targetCanvasPtr = 0;
 if (targetCanvas) {
  targetCanvasPtr = stringToNewUTF8(targetCanvas);
 }
 GROWABLE_HEAP_I32()[varargs >> 2] = targetCanvasPtr;
 GROWABLE_HEAP_I32()[varargs + 4 >> 2] = width;
 GROWABLE_HEAP_I32()[varargs + 8 >> 2] = height;
 __emscripten_call_on_thread(0, targetThread, 657457152, 0, targetCanvasPtr, varargs);
 stackRestore(stackTop);
}

function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, targetCanvas, width, height) {
 targetCanvas = targetCanvas ? UTF8ToString(targetCanvas) : "";
 _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height);
}

function maybeCStringToJsString(cString) {
 return cString > 2 ? UTF8ToString(cString) : cString;
}

var specialHTMLTargets = [ 0, typeof document !== "undefined" ? document : 0, typeof window !== "undefined" ? window : 0 ];

function findEventTarget(target) {
 target = maybeCStringToJsString(target);
 var domElement = specialHTMLTargets[target] || (typeof document !== "undefined" ? document.querySelector(target) : undefined);
 return domElement;
}

function findCanvasEventTarget(target) {
 return findEventTarget(target);
}

function _emscripten_set_canvas_element_size_calling_thread(target, width, height) {
 var canvas = findCanvasEventTarget(target);
 if (!canvas) return -4;
 if (canvas.canvasSharedPtr) {
  GROWABLE_HEAP_I32()[canvas.canvasSharedPtr >> 2] = width;
  GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 4 >> 2] = height;
 }
 if (canvas.offscreenCanvas || !canvas.controlTransferredOffscreen) {
  if (canvas.offscreenCanvas) canvas = canvas.offscreenCanvas;
  var autoResizeViewport = false;
  if (canvas.GLctxObject && canvas.GLctxObject.GLctx) {
   var prevViewport = canvas.GLctxObject.GLctx.getParameter(2978);
   autoResizeViewport = prevViewport[0] === 0 && prevViewport[1] === 0 && prevViewport[2] === canvas.width && prevViewport[3] === canvas.height;
  }
  canvas.width = width;
  canvas.height = height;
  if (autoResizeViewport) {
   canvas.GLctxObject.GLctx.viewport(0, 0, width, height);
  }
 } else if (canvas.canvasSharedPtr) {
  var targetThread = GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 8 >> 2];
  _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, target, width, height);
  return 1;
 } else {
  return -4;
 }
 return 0;
}

function _emscripten_set_canvas_element_size_main_thread(target, width, height) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(14, 1, target, width, height);
 return _emscripten_set_canvas_element_size_calling_thread(target, width, height);
}

function _emscripten_set_canvas_element_size(target, width, height) {
 var canvas = findCanvasEventTarget(target);
 if (canvas) {
  return _emscripten_set_canvas_element_size_calling_thread(target, width, height);
 } else {
  return _emscripten_set_canvas_element_size_main_thread(target, width, height);
 }
}

function _emscripten_set_current_thread_status_js(newStatus) {}

function _emscripten_set_current_thread_status(newStatus) {
 newStatus = newStatus | 0;
}

function __webgl_enable_ANGLE_instanced_arrays(ctx) {
 var ext = ctx.getExtension("ANGLE_instanced_arrays");
 if (ext) {
  ctx["vertexAttribDivisor"] = function(index, divisor) {
   ext["vertexAttribDivisorANGLE"](index, divisor);
  };
  ctx["drawArraysInstanced"] = function(mode, first, count, primcount) {
   ext["drawArraysInstancedANGLE"](mode, first, count, primcount);
  };
  ctx["drawElementsInstanced"] = function(mode, count, type, indices, primcount) {
   ext["drawElementsInstancedANGLE"](mode, count, type, indices, primcount);
  };
  return 1;
 }
}

function __webgl_enable_OES_vertex_array_object(ctx) {
 var ext = ctx.getExtension("OES_vertex_array_object");
 if (ext) {
  ctx["createVertexArray"] = function() {
   return ext["createVertexArrayOES"]();
  };
  ctx["deleteVertexArray"] = function(vao) {
   ext["deleteVertexArrayOES"](vao);
  };
  ctx["bindVertexArray"] = function(vao) {
   ext["bindVertexArrayOES"](vao);
  };
  ctx["isVertexArray"] = function(vao) {
   return ext["isVertexArrayOES"](vao);
  };
  return 1;
 }
}

function __webgl_enable_WEBGL_draw_buffers(ctx) {
 var ext = ctx.getExtension("WEBGL_draw_buffers");
 if (ext) {
  ctx["drawBuffers"] = function(n, bufs) {
   ext["drawBuffersWEBGL"](n, bufs);
  };
  return 1;
 }
}

var GL = {
 counter: 1,
 buffers: [],
 programs: [],
 framebuffers: [],
 renderbuffers: [],
 textures: [],
 uniforms: [],
 shaders: [],
 vaos: [],
 contexts: {},
 offscreenCanvases: {},
 timerQueriesEXT: [],
 programInfos: {},
 stringCache: {},
 unpackAlignment: 4,
 recordError: function recordError(errorCode) {
  if (!GL.lastError) {
   GL.lastError = errorCode;
  }
 },
 getNewId: function(table) {
  var ret = GL.counter++;
  for (var i = table.length; i < ret; i++) {
   table[i] = null;
  }
  return ret;
 },
 getSource: function(shader, count, string, length) {
  var source = "";
  for (var i = 0; i < count; ++i) {
   var len = length ? GROWABLE_HEAP_I32()[length + i * 4 >> 2] : -1;
   source += UTF8ToString(GROWABLE_HEAP_I32()[string + i * 4 >> 2], len < 0 ? undefined : len);
  }
  return source;
 },
 createContext: function(canvas, webGLContextAttributes) {
  var ctx = canvas.getContext("webgl", webGLContextAttributes);
  if (!ctx) return 0;
  var handle = GL.registerContext(ctx, webGLContextAttributes);
  return handle;
 },
 registerContext: function(ctx, webGLContextAttributes) {
  var handle = _malloc(8);
  GROWABLE_HEAP_I32()[handle + 4 >> 2] = _pthread_self();
  var context = {
   handle: handle,
   attributes: webGLContextAttributes,
   version: webGLContextAttributes.majorVersion,
   GLctx: ctx
  };
  if (ctx.canvas) ctx.canvas.GLctxObject = context;
  GL.contexts[handle] = context;
  if (typeof webGLContextAttributes.enableExtensionsByDefault === "undefined" || webGLContextAttributes.enableExtensionsByDefault) {
   GL.initExtensions(context);
  }
  return handle;
 },
 makeContextCurrent: function(contextHandle) {
  GL.currentContext = GL.contexts[contextHandle];
  Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;
  return !(contextHandle && !GLctx);
 },
 getContext: function(contextHandle) {
  return GL.contexts[contextHandle];
 },
 deleteContext: function(contextHandle) {
  if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;
  if (typeof JSEvents === "object") JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);
  if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;
  _free(GL.contexts[contextHandle].handle);
  GL.contexts[contextHandle] = null;
 },
 initExtensions: function(context) {
  if (!context) context = GL.currentContext;
  if (context.initExtensionsDone) return;
  context.initExtensionsDone = true;
  var GLctx = context.GLctx;
  __webgl_enable_ANGLE_instanced_arrays(GLctx);
  __webgl_enable_OES_vertex_array_object(GLctx);
  __webgl_enable_WEBGL_draw_buffers(GLctx);
  GLctx.disjointTimerQueryExt = GLctx.getExtension("EXT_disjoint_timer_query");
  var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives", "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture", "OES_element_index_uint", "EXT_texture_filter_anisotropic", "EXT_frag_depth", "WEBGL_draw_buffers", "ANGLE_instanced_arrays", "OES_texture_float_linear", "OES_texture_half_float_linear", "EXT_blend_minmax", "EXT_shader_texture_lod", "EXT_texture_norm16", "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float", "EXT_sRGB", "WEBGL_compressed_texture_etc1", "EXT_disjoint_timer_query", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_astc", "EXT_color_buffer_float", "WEBGL_compressed_texture_s3tc_srgb", "EXT_disjoint_timer_query_webgl2", "WEBKIT_WEBGL_compressed_texture_pvrtc" ];
  function shouldEnableAutomatically(extension) {
   var ret = false;
   automaticallyEnabledExtensions.forEach(function(include) {
    if (extension.indexOf(include) != -1) {
     ret = true;
    }
   });
   return ret;
  }
  var exts = GLctx.getSupportedExtensions() || [];
  exts.forEach(function(ext) {
   if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
    GLctx.getExtension(ext);
   }
  });
 },
 populateUniformTable: function(program) {
  var p = GL.programs[program];
  var ptable = GL.programInfos[program] = {
   uniforms: {},
   maxUniformLength: 0,
   maxAttributeLength: -1,
   maxUniformBlockNameLength: -1
  };
  var utable = ptable.uniforms;
  var numUniforms = GLctx.getProgramParameter(p, 35718);
  for (var i = 0; i < numUniforms; ++i) {
   var u = GLctx.getActiveUniform(p, i);
   var name = u.name;
   ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length + 1);
   if (name.slice(-1) == "]") {
    name = name.slice(0, name.lastIndexOf("["));
   }
   var loc = GLctx.getUniformLocation(p, name);
   if (loc) {
    var id = GL.getNewId(GL.uniforms);
    utable[name] = [ u.size, id ];
    GL.uniforms[id] = loc;
    for (var j = 1; j < u.size; ++j) {
     var n = name + "[" + j + "]";
     loc = GLctx.getUniformLocation(p, n);
     id = GL.getNewId(GL.uniforms);
     GL.uniforms[id] = loc;
    }
   }
  }
 }
};

var __emscripten_webgl_power_preferences = [ "default", "low-power", "high-performance" ];

function _emscripten_webgl_do_create_context(target, attributes) {
 assert(attributes);
 var contextAttributes = {};
 var a = attributes >> 2;
 contextAttributes["alpha"] = !!GROWABLE_HEAP_I32()[a + (0 >> 2)];
 contextAttributes["depth"] = !!GROWABLE_HEAP_I32()[a + (4 >> 2)];
 contextAttributes["stencil"] = !!GROWABLE_HEAP_I32()[a + (8 >> 2)];
 contextAttributes["antialias"] = !!GROWABLE_HEAP_I32()[a + (12 >> 2)];
 contextAttributes["premultipliedAlpha"] = !!GROWABLE_HEAP_I32()[a + (16 >> 2)];
 contextAttributes["preserveDrawingBuffer"] = !!GROWABLE_HEAP_I32()[a + (20 >> 2)];
 var powerPreference = GROWABLE_HEAP_I32()[a + (24 >> 2)];
 contextAttributes["powerPreference"] = __emscripten_webgl_power_preferences[powerPreference];
 contextAttributes["failIfMajorPerformanceCaveat"] = !!GROWABLE_HEAP_I32()[a + (28 >> 2)];
 contextAttributes.majorVersion = GROWABLE_HEAP_I32()[a + (32 >> 2)];
 contextAttributes.minorVersion = GROWABLE_HEAP_I32()[a + (36 >> 2)];
 contextAttributes.enableExtensionsByDefault = GROWABLE_HEAP_I32()[a + (40 >> 2)];
 contextAttributes.explicitSwapControl = GROWABLE_HEAP_I32()[a + (44 >> 2)];
 contextAttributes.proxyContextToMainThread = GROWABLE_HEAP_I32()[a + (48 >> 2)];
 contextAttributes.renderViaOffscreenBackBuffer = GROWABLE_HEAP_I32()[a + (52 >> 2)];
 var canvas = findCanvasEventTarget(target);
 if (!canvas) {
  return -4;
 }
 if (contextAttributes.explicitSwapControl) {
  return -1;
 }
 var contextHandle = GL.createContext(canvas, contextAttributes);
 return contextHandle;
}

function _emscripten_webgl_create_context(a0, a1) {
 return _emscripten_webgl_do_create_context(a0, a1);
}

var ENV = {};

function getExecutableName() {
 return thisProgram || "./this.program";
}

function getEnvStrings() {
 if (!getEnvStrings.strings) {
  var lang = (typeof navigator === "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8";
  var env = {
   "USER": "web_user",
   "LOGNAME": "web_user",
   "PATH": "/",
   "PWD": "/",
   "HOME": "/home/web_user",
   "LANG": lang,
   "_": getExecutableName()
  };
  for (var x in ENV) {
   env[x] = ENV[x];
  }
  var strings = [];
  for (var x in env) {
   strings.push(x + "=" + env[x]);
  }
  getEnvStrings.strings = strings;
 }
 return getEnvStrings.strings;
}

function _environ_get(__environ, environ_buf) {
 var bufSize = 0;
 getEnvStrings().forEach(function(string, i) {
  var ptr = environ_buf + bufSize;
  GROWABLE_HEAP_I32()[__environ + i * 4 >> 2] = ptr;
  writeAsciiToMemory(string, ptr);
  bufSize += string.length + 1;
 });
 return 0;
}

function _environ_sizes_get(penviron_count, penviron_buf_size) {
 var strings = getEnvStrings();
 GROWABLE_HEAP_I32()[penviron_count >> 2] = strings.length;
 var bufSize = 0;
 strings.forEach(function(string) {
  bufSize += string.length + 1;
 });
 GROWABLE_HEAP_I32()[penviron_buf_size >> 2] = bufSize;
 return 0;
}

function _exit(status) {
 exit(status);
}

function _fd_close(fd) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(15, 1, fd);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _fd_fdstat_get(fd, pbuf) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(16, 1, fd, pbuf);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;
  GROWABLE_HEAP_I8()[pbuf >> 0] = type;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _fd_read(fd, iov, iovcnt, pnum) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(17, 1, fd, iov, iovcnt, pnum);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = SYSCALLS.doReadv(stream, iov, iovcnt);
  GROWABLE_HEAP_I32()[pnum >> 2] = num;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(18, 1, fd, offset_low, offset_high, whence, newOffset);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var HIGH_OFFSET = 4294967296;
  var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);
  var DOUBLE_LIMIT = 9007199254740992;
  if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
   return -61;
  }
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  GROWABLE_HEAP_I32()[newOffset >> 2] = tempI64[0], GROWABLE_HEAP_I32()[newOffset + 4 >> 2] = tempI64[1];
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _fd_sync(fd) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(19, 1, fd);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  if (stream.stream_ops && stream.stream_ops.fsync) {
   return -stream.stream_ops.fsync(stream);
  }
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _fd_write(fd, iov, iovcnt, pnum) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(20, 1, fd, iov, iovcnt, pnum);
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = SYSCALLS.doWritev(stream, iov, iovcnt);
  GROWABLE_HEAP_I32()[pnum >> 2] = num;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return e.errno;
 }
}

function _getTempRet0() {
 return getTempRet0() | 0;
}

function _gettimeofday(ptr) {
 var now = Date.now();
 GROWABLE_HEAP_I32()[ptr >> 2] = now / 1e3 | 0;
 GROWABLE_HEAP_I32()[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
 return 0;
}

var ___tm_current = 1830160;

var ___tm_timezone = (stringToUTF8("GMT", 1830208, 4), 1830208);

function _gmtime_r(time, tmPtr) {
 var date = new Date(GROWABLE_HEAP_I32()[time >> 2] * 1e3);
 GROWABLE_HEAP_I32()[tmPtr >> 2] = date.getUTCSeconds();
 GROWABLE_HEAP_I32()[tmPtr + 4 >> 2] = date.getUTCMinutes();
 GROWABLE_HEAP_I32()[tmPtr + 8 >> 2] = date.getUTCHours();
 GROWABLE_HEAP_I32()[tmPtr + 12 >> 2] = date.getUTCDate();
 GROWABLE_HEAP_I32()[tmPtr + 16 >> 2] = date.getUTCMonth();
 GROWABLE_HEAP_I32()[tmPtr + 20 >> 2] = date.getUTCFullYear() - 1900;
 GROWABLE_HEAP_I32()[tmPtr + 24 >> 2] = date.getUTCDay();
 GROWABLE_HEAP_I32()[tmPtr + 36 >> 2] = 0;
 GROWABLE_HEAP_I32()[tmPtr + 32 >> 2] = 0;
 var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
 var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
 GROWABLE_HEAP_I32()[tmPtr + 28 >> 2] = yday;
 GROWABLE_HEAP_I32()[tmPtr + 40 >> 2] = ___tm_timezone;
 return tmPtr;
}

function _gmtime(time) {
 return _gmtime_r(time, ___tm_current);
}

function _tzset() {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(21, 1);
 if (_tzset.called) return;
 _tzset.called = true;
 GROWABLE_HEAP_I32()[__get_timezone() >> 2] = new Date().getTimezoneOffset() * 60;
 var currentYear = new Date().getFullYear();
 var winter = new Date(currentYear, 0, 1);
 var summer = new Date(currentYear, 6, 1);
 GROWABLE_HEAP_I32()[__get_daylight() >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = allocateUTF8(winterName);
 var summerNamePtr = allocateUTF8(summerName);
 if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
  GROWABLE_HEAP_I32()[__get_tzname() >> 2] = winterNamePtr;
  GROWABLE_HEAP_I32()[__get_tzname() + 4 >> 2] = summerNamePtr;
 } else {
  GROWABLE_HEAP_I32()[__get_tzname() >> 2] = summerNamePtr;
  GROWABLE_HEAP_I32()[__get_tzname() + 4 >> 2] = winterNamePtr;
 }
}

function _localtime_r(time, tmPtr) {
 _tzset();
 var date = new Date(GROWABLE_HEAP_I32()[time >> 2] * 1e3);
 GROWABLE_HEAP_I32()[tmPtr >> 2] = date.getSeconds();
 GROWABLE_HEAP_I32()[tmPtr + 4 >> 2] = date.getMinutes();
 GROWABLE_HEAP_I32()[tmPtr + 8 >> 2] = date.getHours();
 GROWABLE_HEAP_I32()[tmPtr + 12 >> 2] = date.getDate();
 GROWABLE_HEAP_I32()[tmPtr + 16 >> 2] = date.getMonth();
 GROWABLE_HEAP_I32()[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
 GROWABLE_HEAP_I32()[tmPtr + 24 >> 2] = date.getDay();
 var start = new Date(date.getFullYear(), 0, 1);
 var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
 GROWABLE_HEAP_I32()[tmPtr + 28 >> 2] = yday;
 GROWABLE_HEAP_I32()[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
 var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;
 GROWABLE_HEAP_I32()[tmPtr + 32 >> 2] = dst;
 var zonePtr = GROWABLE_HEAP_I32()[__get_tzname() + (dst ? 4 : 0) >> 2];
 GROWABLE_HEAP_I32()[tmPtr + 40 >> 2] = zonePtr;
 return tmPtr;
}

function _localtime(time) {
 return _localtime_r(time, ___tm_current);
}

function _pthread_cleanup_pop(execute) {
 var routine = PThread.threadExitHandlers.pop();
 if (execute) routine();
}

function _pthread_cleanup_push(routine, arg) {
 PThread.threadExitHandlers.push(function() {
  dynCall_vi(routine, arg);
 });
}

function spawnThread(threadParams) {
 if (ENVIRONMENT_IS_PTHREAD) throw "Internal Error! spawnThread() can only ever be called from main application thread!";
 var worker = PThread.getNewWorker();
 if (worker.pthread !== undefined) throw "Internal error!";
 if (!threadParams.pthread_ptr) throw "Internal error, no pthread ptr!";
 PThread.runningWorkers.push(worker);
 var tlsMemory = _malloc(128 * 4);
 for (var i = 0; i < 128; ++i) {
  GROWABLE_HEAP_I32()[tlsMemory + i * 4 >> 2] = 0;
 }
 var stackHigh = threadParams.stackBase + threadParams.stackSize;
 var pthread = PThread.pthreads[threadParams.pthread_ptr] = {
  worker: worker,
  stackBase: threadParams.stackBase,
  stackSize: threadParams.stackSize,
  allocatedOwnStack: threadParams.allocatedOwnStack,
  thread: threadParams.pthread_ptr,
  threadInfoStruct: threadParams.pthread_ptr
 };
 var tis = pthread.threadInfoStruct >> 2;
 Atomics.store(GROWABLE_HEAP_U32(), tis + (0 >> 2), 0);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (4 >> 2), 0);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (8 >> 2), 0);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (68 >> 2), threadParams.detached);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (104 >> 2), tlsMemory);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (48 >> 2), 0);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (40 >> 2), pthread.threadInfoStruct);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (44 >> 2), 42);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (108 >> 2), threadParams.stackSize);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (84 >> 2), threadParams.stackSize);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (80 >> 2), stackHigh);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 8 >> 2), stackHigh);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 12 >> 2), threadParams.detached);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 20 >> 2), threadParams.schedPolicy);
 Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 24 >> 2), threadParams.schedPrio);
 var global_libc = _emscripten_get_global_libc();
 var global_locale = global_libc + 40;
 Atomics.store(GROWABLE_HEAP_U32(), tis + (176 >> 2), global_locale);
 worker.pthread = pthread;
 var msg = {
  "cmd": "run",
  "start_routine": threadParams.startRoutine,
  "arg": threadParams.arg,
  "threadInfoStruct": threadParams.pthread_ptr,
  "selfThreadId": threadParams.pthread_ptr,
  "parentThreadId": threadParams.parent_pthread_ptr,
  "stackBase": threadParams.stackBase,
  "stackSize": threadParams.stackSize
 };
 worker.runPthread = function() {
  msg.time = performance.now();
  worker.postMessage(msg, threadParams.transferList);
 };
 if (worker.loaded) {
  worker.runPthread();
  delete worker.runPthread;
 }
}

function _pthread_getschedparam(thread, policy, schedparam) {
 if (!policy && !schedparam) return ERRNO_CODES.EINVAL;
 if (!thread) {
  err("pthread_getschedparam called with a null thread pointer!");
  return ERRNO_CODES.ESRCH;
 }
 var self = GROWABLE_HEAP_I32()[thread + 12 >> 2];
 if (self !== thread) {
  err("pthread_getschedparam attempted on thread " + thread + ", which does not point to a valid thread, or does not exist anymore!");
  return ERRNO_CODES.ESRCH;
 }
 var schedPolicy = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 20 >> 2);
 var schedPrio = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 24 >> 2);
 if (policy) GROWABLE_HEAP_I32()[policy >> 2] = schedPolicy;
 if (schedparam) GROWABLE_HEAP_I32()[schedparam >> 2] = schedPrio;
 return 0;
}

function _pthread_self() {
 return __pthread_ptr | 0;
}

Module["_pthread_self"] = _pthread_self;

function resetPrototype(constructor, attrs) {
 var object = Object.create(constructor.prototype);
 for (var key in attrs) {
  if (attrs.hasOwnProperty(key)) {
   object[key] = attrs[key];
  }
 }
 return object;
}

function _pthread_create(pthread_ptr, attr, start_routine, arg) {
 if (typeof SharedArrayBuffer === "undefined") {
  err("Current environment does not support SharedArrayBuffer, pthreads are not available!");
  return 6;
 }
 if (!pthread_ptr) {
  err("pthread_create called with a null thread pointer!");
  return 28;
 }
 var transferList = [];
 var error = 0;
 if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {
  return _emscripten_sync_run_in_main_thread_4(687865856, pthread_ptr, attr, start_routine, arg);
 }
 if (error) return error;
 var stackSize = 0;
 var stackBase = 0;
 var detached = 0;
 var schedPolicy = 0;
 var schedPrio = 0;
 if (attr) {
  stackSize = GROWABLE_HEAP_I32()[attr >> 2];
  stackSize += 81920;
  stackBase = GROWABLE_HEAP_I32()[attr + 8 >> 2];
  detached = GROWABLE_HEAP_I32()[attr + 12 >> 2] !== 0;
  var inheritSched = GROWABLE_HEAP_I32()[attr + 16 >> 2] === 0;
  if (inheritSched) {
   var prevSchedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];
   var prevSchedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];
   var parentThreadPtr = PThread.currentProxiedOperationCallerThread ? PThread.currentProxiedOperationCallerThread : _pthread_self();
   _pthread_getschedparam(parentThreadPtr, attr + 20, attr + 24);
   schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];
   schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];
   GROWABLE_HEAP_I32()[attr + 20 >> 2] = prevSchedPolicy;
   GROWABLE_HEAP_I32()[attr + 24 >> 2] = prevSchedPrio;
  } else {
   schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];
   schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];
  }
 } else {
  stackSize = 2097152;
 }
 var allocatedOwnStack = stackBase == 0;
 if (allocatedOwnStack) {
  stackBase = _memalign(16, stackSize);
 } else {
  stackBase -= stackSize;
  assert(stackBase > 0);
 }
 var threadInfoStruct = _malloc(232);
 for (var i = 0; i < 232 >> 2; ++i) GROWABLE_HEAP_U32()[(threadInfoStruct >> 2) + i] = 0;
 GROWABLE_HEAP_I32()[pthread_ptr >> 2] = threadInfoStruct;
 GROWABLE_HEAP_I32()[threadInfoStruct + 12 >> 2] = threadInfoStruct;
 var headPtr = threadInfoStruct + 156;
 GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;
 var threadParams = {
  stackBase: stackBase,
  stackSize: stackSize,
  allocatedOwnStack: allocatedOwnStack,
  schedPolicy: schedPolicy,
  schedPrio: schedPrio,
  detached: detached,
  startRoutine: start_routine,
  pthread_ptr: threadInfoStruct,
  parent_pthread_ptr: _pthread_self(),
  arg: arg,
  transferList: transferList
 };
 if (ENVIRONMENT_IS_PTHREAD) {
  threadParams.cmd = "spawnThread";
  postMessage(threadParams, transferList);
 } else {
  spawnThread(threadParams);
 }
 return 0;
}

function __pthread_testcancel_js() {
 if (!ENVIRONMENT_IS_PTHREAD) return;
 if (!threadInfoStruct) return;
 var cancelDisabled = Atomics.load(GROWABLE_HEAP_U32(), threadInfoStruct + 60 >> 2);
 if (cancelDisabled) return;
 var canceled = Atomics.load(GROWABLE_HEAP_U32(), threadInfoStruct + 0 >> 2);
 if (canceled == 2) throw "Canceled!";
}

function __emscripten_do_pthread_join(thread, status, block) {
 if (!thread) {
  err("pthread_join attempted on a null thread pointer!");
  return ERRNO_CODES.ESRCH;
 }
 if (ENVIRONMENT_IS_PTHREAD && selfThreadId == thread) {
  err("PThread " + thread + " is attempting to join to itself!");
  return ERRNO_CODES.EDEADLK;
 } else if (!ENVIRONMENT_IS_PTHREAD && PThread.mainThreadBlock == thread) {
  err("Main thread " + thread + " is attempting to join to itself!");
  return ERRNO_CODES.EDEADLK;
 }
 var self = GROWABLE_HEAP_I32()[thread + 12 >> 2];
 if (self !== thread) {
  err("pthread_join attempted on thread " + thread + ", which does not point to a valid thread, or does not exist anymore!");
  return ERRNO_CODES.ESRCH;
 }
 var detached = Atomics.load(GROWABLE_HEAP_U32(), thread + 68 >> 2);
 if (detached) {
  err("Attempted to join thread " + thread + ", which was already detached!");
  return ERRNO_CODES.EINVAL;
 }
 if (block) {
  _emscripten_check_blocking_allowed();
 }
 for (;;) {
  var threadStatus = Atomics.load(GROWABLE_HEAP_U32(), thread + 0 >> 2);
  if (threadStatus == 1) {
   var threadExitCode = Atomics.load(GROWABLE_HEAP_U32(), thread + 4 >> 2);
   if (status) GROWABLE_HEAP_I32()[status >> 2] = threadExitCode;
   Atomics.store(GROWABLE_HEAP_U32(), thread + 68 >> 2, 1);
   if (!ENVIRONMENT_IS_PTHREAD) cleanupThread(thread); else postMessage({
    "cmd": "cleanupThread",
    "thread": thread
   });
   return 0;
  }
  if (!block) {
   return ERRNO_CODES.EBUSY;
  }
  __pthread_testcancel_js();
  if (!ENVIRONMENT_IS_PTHREAD) _emscripten_main_thread_process_queued_calls();
  _emscripten_futex_wait(thread + 0, threadStatus, ENVIRONMENT_IS_PTHREAD ? 100 : 1);
 }
}

function _pthread_join(thread, status) {
 return __emscripten_do_pthread_join(thread, status, true);
}

function _roundf(d) {
 d = +d;
 return d >= +0 ? +Math_floor(d + +.5) : +Math_ceil(d - +.5);
}

function _setTempRet0($i) {
 setTempRet0($i | 0);
}

function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) {}
 return sum;
}

var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}

function _strftime(s, maxsize, format, tm) {
 var tm_zone = GROWABLE_HEAP_I32()[tm + 40 >> 2];
 var date = {
  tm_sec: GROWABLE_HEAP_I32()[tm >> 2],
  tm_min: GROWABLE_HEAP_I32()[tm + 4 >> 2],
  tm_hour: GROWABLE_HEAP_I32()[tm + 8 >> 2],
  tm_mday: GROWABLE_HEAP_I32()[tm + 12 >> 2],
  tm_mon: GROWABLE_HEAP_I32()[tm + 16 >> 2],
  tm_year: GROWABLE_HEAP_I32()[tm + 20 >> 2],
  tm_wday: GROWABLE_HEAP_I32()[tm + 24 >> 2],
  tm_yday: GROWABLE_HEAP_I32()[tm + 28 >> 2],
  tm_isdst: GROWABLE_HEAP_I32()[tm + 32 >> 2],
  tm_gmtoff: GROWABLE_HEAP_I32()[tm + 36 >> 2],
  tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
 };
 var pattern = UTF8ToString(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S",
  "%Ec": "%c",
  "%EC": "%C",
  "%Ex": "%m/%d/%y",
  "%EX": "%H:%M:%S",
  "%Ey": "%y",
  "%EY": "%Y",
  "%Od": "%d",
  "%Oe": "%e",
  "%OH": "%H",
  "%OI": "%I",
  "%Om": "%m",
  "%OM": "%M",
  "%OS": "%S",
  "%Ou": "%u",
  "%OU": "%U",
  "%OV": "%V",
  "%Ow": "%w",
  "%OW": "%W",
  "%Oy": "%y"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);

  case 1:
   return janFourth;

  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);

  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);

  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);

  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);

  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  },
  "%A": function(date) {
   return WEEKDAYS[date.tm_wday];
  },
  "%b": function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  },
  "%B": function(date) {
   return MONTHS[date.tm_mon];
  },
  "%C": function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  },
  "%d": function(date) {
   return leadingNulls(date.tm_mday, 2);
  },
  "%e": function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  },
  "%g": function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  },
  "%G": function(date) {
   return getWeekBasedYear(date);
  },
  "%H": function(date) {
   return leadingNulls(date.tm_hour, 2);
  },
  "%I": function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  },
  "%j": function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  },
  "%m": function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  },
  "%M": function(date) {
   return leadingNulls(date.tm_min, 2);
  },
  "%n": function() {
   return "\n";
  },
  "%p": function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  },
  "%S": function(date) {
   return leadingNulls(date.tm_sec, 2);
  },
  "%t": function() {
   return "\t";
  },
  "%u": function(date) {
   return date.tm_wday || 7;
  },
  "%U": function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  },
  "%V": function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  },
  "%w": function(date) {
   return date.tm_wday;
  },
  "%W": function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  },
  "%y": function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  },
  "%Y": function(date) {
   return date.tm_year + 1900;
  },
  "%z": function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  },
  "%Z": function(date) {
   return date.tm_zone;
  },
  "%%": function() {
   return "%";
  }
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}

function _sysconf(name) {
 if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(22, 1, name);
 switch (name) {
 case 30:
  return 16384;

 case 85:
  var maxHeapSize = 2147483648;
  return maxHeapSize / 16384;

 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
 case 79:
  return 200809;

 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;

 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;

 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;

 case 31:
 case 42:
 case 72:
  return 32;

 case 87:
 case 26:
 case 33:
  return 2147483647;

 case 34:
 case 1:
  return 47839;

 case 38:
 case 36:
  return 99;

 case 43:
 case 37:
  return 2048;

 case 0:
  return 2097152;

 case 3:
  return 65536;

 case 28:
  return 32768;

 case 44:
  return 32767;

 case 75:
  return 16384;

 case 39:
  return 1e3;

 case 89:
  return 700;

 case 71:
  return 256;

 case 40:
  return 255;

 case 2:
  return 100;

 case 180:
  return 64;

 case 25:
  return 20;

 case 5:
  return 16;

 case 6:
  return 6;

 case 73:
  return 4;

 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 setErrNo(28);
 return -1;
}

function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  GROWABLE_HEAP_I32()[ptr >> 2] = ret;
 }
 return ret;
}

if (!ENVIRONMENT_IS_PTHREAD) PThread.initMainThreadBlock(); else PThread.initWorker();

var FSNode = function(parent, name, mode, rdev) {
 if (!parent) {
  parent = this;
 }
 this.parent = parent;
 this.mount = parent.mount;
 this.mounted = null;
 this.id = FS.nextInode++;
 this.name = name;
 this.mode = mode;
 this.node_ops = {};
 this.stream_ops = {};
 this.rdev = rdev;
};

var readMode = 292 | 73;

var writeMode = 146;

Object.defineProperties(FSNode.prototype, {
 read: {
  get: function() {
   return (this.mode & readMode) === readMode;
  },
  set: function(val) {
   val ? this.mode |= readMode : this.mode &= ~readMode;
  }
 },
 write: {
  get: function() {
   return (this.mode & writeMode) === writeMode;
  },
  set: function(val) {
   val ? this.mode |= writeMode : this.mode &= ~writeMode;
  }
 },
 isFolder: {
  get: function() {
   return FS.isDir(this.mode);
  }
 },
 isDevice: {
  get: function() {
   return FS.isChrdev(this.mode);
  }
 }
});

FS.FSNode = FSNode;

FS.staticInit();

embind_init_charCodes();

BindingError = Module["BindingError"] = extendError(Error, "BindingError");

InternalError = Module["InternalError"] = extendError(Error, "InternalError");

init_emval();

var GLctx;

var proxiedFunctionTable = [ null, _atexit, ___sys_fcntl64, ___sys_fstat64, ___sys_ftruncate64, ___sys_getdents64, ___sys_ioctl, ___sys_mmap2, ___sys_munmap, ___sys_open, ___sys_read, ___sys_rmdir, ___sys_stat64, ___sys_unlink, _emscripten_set_canvas_element_size_main_thread, _fd_close, _fd_fdstat_get, _fd_read, _fd_seek, _fd_sync, _fd_write, _tzset, _sysconf ];

var ASSERTIONS = true;

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   if (ASSERTIONS) {
    assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   }
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}

var asmGlobalArg = {};

var asmLibraryArg = {
 "__assert_fail": ___assert_fail,
 "__clock_gettime": ___clock_gettime,
 "__cxa_allocate_exception": ___cxa_allocate_exception,
 "__cxa_atexit": ___cxa_atexit,
 "__cxa_begin_catch": ___cxa_begin_catch,
 "__cxa_end_catch": ___cxa_end_catch,
 "__cxa_find_matching_catch_2": ___cxa_find_matching_catch_2,
 "__cxa_find_matching_catch_3": ___cxa_find_matching_catch_3,
 "__cxa_free_exception": ___cxa_free_exception,
 "__cxa_rethrow": ___cxa_rethrow,
 "__cxa_throw": ___cxa_throw,
 "__cxa_uncaught_exceptions": ___cxa_uncaught_exceptions,
 "__handle_stack_overflow": ___handle_stack_overflow,
 "__map_file": ___map_file,
 "__resumeException": ___resumeException,
 "__sys_fcntl64": ___sys_fcntl64,
 "__sys_fstat64": ___sys_fstat64,
 "__sys_ftruncate64": ___sys_ftruncate64,
 "__sys_getdents64": ___sys_getdents64,
 "__sys_getpid": ___sys_getpid,
 "__sys_ioctl": ___sys_ioctl,
 "__sys_madvise1": ___sys_madvise1,
 "__sys_mmap2": ___sys_mmap2,
 "__sys_mprotect": ___sys_mprotect,
 "__sys_munmap": ___sys_munmap,
 "__sys_open": ___sys_open,
 "__sys_read": ___sys_read,
 "__sys_rmdir": ___sys_rmdir,
 "__sys_stat64": ___sys_stat64,
 "__sys_unlink": ___sys_unlink,
 "_embind_register_bool": __embind_register_bool,
 "_embind_register_emval": __embind_register_emval,
 "_embind_register_float": __embind_register_float,
 "_embind_register_integer": __embind_register_integer,
 "_embind_register_memory_view": __embind_register_memory_view,
 "_embind_register_std_string": __embind_register_std_string,
 "_embind_register_std_wstring": __embind_register_std_wstring,
 "_embind_register_void": __embind_register_void,
 "_emscripten_notify_thread_queue": __emscripten_notify_thread_queue,
 "abort": _abort,
 "abs": _abs,
 "array_bounds_check_error": array_bounds_check_error,
 "emscripten_asm_const_iii": _emscripten_asm_const_iii,
 "emscripten_check_blocking_allowed": _emscripten_check_blocking_allowed,
 "emscripten_conditional_set_current_thread_status": _emscripten_conditional_set_current_thread_status,
 "emscripten_futex_wait": _emscripten_futex_wait,
 "emscripten_futex_wake": _emscripten_futex_wake,
 "emscripten_get_now": _emscripten_get_now,
 "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr,
 "emscripten_is_main_browser_thread": _emscripten_is_main_browser_thread,
 "emscripten_is_main_runtime_thread": _emscripten_is_main_runtime_thread,
 "emscripten_longjmp": _emscripten_longjmp,
 "emscripten_memcpy_big": _emscripten_memcpy_big,
 "emscripten_receive_on_main_thread_js": _emscripten_receive_on_main_thread_js,
 "emscripten_resize_heap": _emscripten_resize_heap,
 "emscripten_set_canvas_element_size": _emscripten_set_canvas_element_size,
 "emscripten_set_current_thread_status": _emscripten_set_current_thread_status,
 "emscripten_webgl_create_context": _emscripten_webgl_create_context,
 "environ_get": _environ_get,
 "environ_sizes_get": _environ_sizes_get,
 "exit": _exit,
 "fd_close": _fd_close,
 "fd_fdstat_get": _fd_fdstat_get,
 "fd_read": _fd_read,
 "fd_seek": _fd_seek,
 "fd_sync": _fd_sync,
 "fd_write": _fd_write,
 "getTempRet0": _getTempRet0,
 "gettimeofday": _gettimeofday,
 "gmtime": _gmtime,
 "initPthreadsJS": initPthreadsJS,
 "invoke_diii": invoke_diii,
 "invoke_fiii": invoke_fiii,
 "invoke_i": invoke_i,
 "invoke_ii": invoke_ii,
 "invoke_iii": invoke_iii,
 "invoke_iiii": invoke_iiii,
 "invoke_iiiii": invoke_iiiii,
 "invoke_iiiiid": invoke_iiiiid,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_iiiiiiiii": invoke_iiiiiiiii,
 "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii,
 "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii,
 "invoke_iiiiiiiiiiiii": invoke_iiiiiiiiiiiii,
 "invoke_jiiii": invoke_jiiii,
 "invoke_v": invoke_v,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_viid": invoke_viid,
 "invoke_viii": invoke_viii,
 "invoke_viiii": invoke_viiii,
 "invoke_viiiiiii": invoke_viiiiiii,
 "invoke_viiiiiiiii": invoke_viiiiiiiii,
 "invoke_viiiiiiiiii": invoke_viiiiiiiiii,
 "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii,
 "localtime": _localtime,
 "memory": wasmMemory || Module["wasmMemory"],
 "pthread_cleanup_pop": _pthread_cleanup_pop,
 "pthread_cleanup_push": _pthread_cleanup_push,
 "pthread_create": _pthread_create,
 "pthread_join": _pthread_join,
 "pthread_self": _pthread_self,
 "roundf": _roundf,
 "setTempRet0": _setTempRet0,
 "strftime": _strftime,
 "strftime_l": _strftime_l,
 "sysconf": _sysconf,
 "table": wasmTable,
 "time": _time
};

var asm = createWasm();

var ___wasm_call_ctors = Module["___wasm_call_ctors"] = createExportWrapper("__wasm_call_ctors");

var ___em_js__array_bounds_check_error = Module["___em_js__array_bounds_check_error"] = createExportWrapper("__em_js__array_bounds_check_error");

var _emscripten_bind_PdeElement_GetType_0 = Module["_emscripten_bind_PdeElement_GetType_0"] = createExportWrapper("emscripten_bind_PdeElement_GetType_0");

var _emscripten_bind_PdeElement_GetBBox_1 = Module["_emscripten_bind_PdeElement_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeElement_GetBBox_1");

var _emscripten_bind_PdeElement_SetBBox_1 = Module["_emscripten_bind_PdeElement_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeElement_SetBBox_1");

var _emscripten_bind_PdeElement_GetId_0 = Module["_emscripten_bind_PdeElement_GetId_0"] = createExportWrapper("emscripten_bind_PdeElement_GetId_0");

var _emscripten_bind_PdeElement_GetGraphicState_1 = Module["_emscripten_bind_PdeElement_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeElement_GetGraphicState_1");

var _emscripten_bind_PdeElement_GetNumChildren_0 = Module["_emscripten_bind_PdeElement_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeElement_GetNumChildren_0");

var _emscripten_bind_PdeElement_GetChild_1 = Module["_emscripten_bind_PdeElement_GetChild_1"] = createExportWrapper("emscripten_bind_PdeElement_GetChild_1");

var _emscripten_bind_PdeElement_GetAlignment_0 = Module["_emscripten_bind_PdeElement_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeElement_GetAlignment_0");

var _emscripten_bind_PdeElement_GetAngle_0 = Module["_emscripten_bind_PdeElement_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeElement_GetAngle_0");

var _emscripten_bind_PdeElement_SetRender_1 = Module["_emscripten_bind_PdeElement_SetRender_1"] = createExportWrapper("emscripten_bind_PdeElement_SetRender_1");

var _emscripten_bind_PdeElement_SetData_1 = Module["_emscripten_bind_PdeElement_SetData_1"] = createExportWrapper("emscripten_bind_PdeElement_SetData_1");

var _emscripten_bind_PdeElement_GetData_0 = Module["_emscripten_bind_PdeElement_GetData_0"] = createExportWrapper("emscripten_bind_PdeElement_GetData_0");

var _emscripten_bind_PdeElement_SetAlt_1 = Module["_emscripten_bind_PdeElement_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeElement_SetAlt_1");

var _emscripten_bind_PdeElement_SetActualText_1 = Module["_emscripten_bind_PdeElement_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeElement_SetActualText_1");

var _emscripten_bind_PdeElement_GetFlags_0 = Module["_emscripten_bind_PdeElement_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeElement_GetFlags_0");

var _emscripten_bind_PdeElement_SetFlags_1 = Module["_emscripten_bind_PdeElement_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeElement_SetFlags_1");

var _emscripten_bind_PdeElement_GetNumPageObjects_0 = Module["_emscripten_bind_PdeElement_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeElement_GetNumPageObjects_0");

var _emscripten_bind_PdeElement_GetPageObject_1 = Module["_emscripten_bind_PdeElement_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeElement_GetPageObject_1");

var _emscripten_bind_PdeElement_GetPageMap_0 = Module["_emscripten_bind_PdeElement_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeElement_GetPageMap_0");

var _emscripten_bind_PdeElement___destroy___0 = Module["_emscripten_bind_PdeElement___destroy___0"] = createExportWrapper("emscripten_bind_PdeElement___destroy___0");

var _emscripten_bind_PdfAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfAnnot_GetSubtype_0");

var _emscripten_bind_PdfAnnot_GetFlags_0 = Module["_emscripten_bind_PdfAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfAnnot_GetFlags_0");

var _emscripten_bind_PdfAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfAnnot_GetAppearance_1");

var _emscripten_bind_PdfAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfAnnot_GetBBox_1 = Module["_emscripten_bind_PdfAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfAnnot_GetBBox_1");

var _emscripten_bind_PdfAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfAnnot_PointInAnnot_1");

var _emscripten_bind_PdfAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfAnnot_RectInAnnot_1");

var _emscripten_bind_PdfAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfAnnot_GetStructObject_1");

var _emscripten_bind_PdfAnnot_GetObject_0 = Module["_emscripten_bind_PdfAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfAnnot_GetObject_0");

var _emscripten_bind_PdfAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfAnnot___destroy___0 = Module["_emscripten_bind_PdfAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfAnnot___destroy___0");

var _emscripten_bind_PdsObject_GetObjectType_0 = Module["_emscripten_bind_PdsObject_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsObject_GetObjectType_0");

var _emscripten_bind_PdsObject_GetId_0 = Module["_emscripten_bind_PdsObject_GetId_0"] = createExportWrapper("emscripten_bind_PdsObject_GetId_0");

var _emscripten_bind_PdsObject___destroy___0 = Module["_emscripten_bind_PdsObject___destroy___0"] = createExportWrapper("emscripten_bind_PdsObject___destroy___0");

var _emscripten_bind_PdsPageObject_GetObjectType_0 = Module["_emscripten_bind_PdsPageObject_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsPageObject_GetObjectType_0");

var _emscripten_bind_PdsPageObject_GetBBox_1 = Module["_emscripten_bind_PdsPageObject_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsPageObject_GetBBox_1");

var _emscripten_bind_PdsPageObject_GetId_0 = Module["_emscripten_bind_PdsPageObject_GetId_0"] = createExportWrapper("emscripten_bind_PdsPageObject_GetId_0");

var _emscripten_bind_PdsPageObject_SetRender_1 = Module["_emscripten_bind_PdsPageObject_SetRender_1"] = createExportWrapper("emscripten_bind_PdsPageObject_SetRender_1");

var _emscripten_bind_PdsPageObject_GetStructObject_1 = Module["_emscripten_bind_PdsPageObject_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsPageObject_GetStructObject_1");

var _emscripten_bind_PdsPageObject_GetContentMark_0 = Module["_emscripten_bind_PdsPageObject_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsPageObject_GetContentMark_0");

var _emscripten_bind_PdsPageObject_GetPage_0 = Module["_emscripten_bind_PdsPageObject_GetPage_0"] = createExportWrapper("emscripten_bind_PdsPageObject_GetPage_0");

var _emscripten_bind_PdsPageObject_GetGState_1 = Module["_emscripten_bind_PdsPageObject_GetGState_1"] = createExportWrapper("emscripten_bind_PdsPageObject_GetGState_1");

var _emscripten_bind_PdsPageObject___destroy___0 = Module["_emscripten_bind_PdsPageObject___destroy___0"] = createExportWrapper("emscripten_bind_PdsPageObject___destroy___0");

var _emscripten_bind_PdeContainer_GetType_0 = Module["_emscripten_bind_PdeContainer_GetType_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetType_0");

var _emscripten_bind_PdeContainer_GetBBox_1 = Module["_emscripten_bind_PdeContainer_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeContainer_GetBBox_1");

var _emscripten_bind_PdeContainer_SetBBox_1 = Module["_emscripten_bind_PdeContainer_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetBBox_1");

var _emscripten_bind_PdeContainer_GetId_0 = Module["_emscripten_bind_PdeContainer_GetId_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetId_0");

var _emscripten_bind_PdeContainer_GetGraphicState_1 = Module["_emscripten_bind_PdeContainer_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeContainer_GetGraphicState_1");

var _emscripten_bind_PdeContainer_GetNumChildren_0 = Module["_emscripten_bind_PdeContainer_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetNumChildren_0");

var _emscripten_bind_PdeContainer_GetChild_1 = Module["_emscripten_bind_PdeContainer_GetChild_1"] = createExportWrapper("emscripten_bind_PdeContainer_GetChild_1");

var _emscripten_bind_PdeContainer_GetAlignment_0 = Module["_emscripten_bind_PdeContainer_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetAlignment_0");

var _emscripten_bind_PdeContainer_GetAngle_0 = Module["_emscripten_bind_PdeContainer_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetAngle_0");

var _emscripten_bind_PdeContainer_SetRender_1 = Module["_emscripten_bind_PdeContainer_SetRender_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetRender_1");

var _emscripten_bind_PdeContainer_SetData_1 = Module["_emscripten_bind_PdeContainer_SetData_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetData_1");

var _emscripten_bind_PdeContainer_GetData_0 = Module["_emscripten_bind_PdeContainer_GetData_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetData_0");

var _emscripten_bind_PdeContainer_SetAlt_1 = Module["_emscripten_bind_PdeContainer_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetAlt_1");

var _emscripten_bind_PdeContainer_SetActualText_1 = Module["_emscripten_bind_PdeContainer_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetActualText_1");

var _emscripten_bind_PdeContainer_GetFlags_0 = Module["_emscripten_bind_PdeContainer_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetFlags_0");

var _emscripten_bind_PdeContainer_SetFlags_1 = Module["_emscripten_bind_PdeContainer_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeContainer_SetFlags_1");

var _emscripten_bind_PdeContainer_GetNumPageObjects_0 = Module["_emscripten_bind_PdeContainer_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetNumPageObjects_0");

var _emscripten_bind_PdeContainer_GetPageObject_1 = Module["_emscripten_bind_PdeContainer_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeContainer_GetPageObject_1");

var _emscripten_bind_PdeContainer_GetPageMap_0 = Module["_emscripten_bind_PdeContainer_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeContainer_GetPageMap_0");

var _emscripten_bind_PdeContainer___destroy___0 = Module["_emscripten_bind_PdeContainer___destroy___0"] = createExportWrapper("emscripten_bind_PdeContainer___destroy___0");

var _emscripten_bind_PdeAnnot_GetAnnot_0 = Module["_emscripten_bind_PdeAnnot_GetAnnot_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetAnnot_0");

var _emscripten_bind_PdeAnnot_GetType_0 = Module["_emscripten_bind_PdeAnnot_GetType_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetType_0");

var _emscripten_bind_PdeAnnot_GetBBox_1 = Module["_emscripten_bind_PdeAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeAnnot_GetBBox_1");

var _emscripten_bind_PdeAnnot_SetBBox_1 = Module["_emscripten_bind_PdeAnnot_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetBBox_1");

var _emscripten_bind_PdeAnnot_GetId_0 = Module["_emscripten_bind_PdeAnnot_GetId_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetId_0");

var _emscripten_bind_PdeAnnot_GetGraphicState_1 = Module["_emscripten_bind_PdeAnnot_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeAnnot_GetGraphicState_1");

var _emscripten_bind_PdeAnnot_GetNumChildren_0 = Module["_emscripten_bind_PdeAnnot_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetNumChildren_0");

var _emscripten_bind_PdeAnnot_GetChild_1 = Module["_emscripten_bind_PdeAnnot_GetChild_1"] = createExportWrapper("emscripten_bind_PdeAnnot_GetChild_1");

var _emscripten_bind_PdeAnnot_GetAlignment_0 = Module["_emscripten_bind_PdeAnnot_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetAlignment_0");

var _emscripten_bind_PdeAnnot_GetAngle_0 = Module["_emscripten_bind_PdeAnnot_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetAngle_0");

var _emscripten_bind_PdeAnnot_SetRender_1 = Module["_emscripten_bind_PdeAnnot_SetRender_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetRender_1");

var _emscripten_bind_PdeAnnot_SetData_1 = Module["_emscripten_bind_PdeAnnot_SetData_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetData_1");

var _emscripten_bind_PdeAnnot_GetData_0 = Module["_emscripten_bind_PdeAnnot_GetData_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetData_0");

var _emscripten_bind_PdeAnnot_SetAlt_1 = Module["_emscripten_bind_PdeAnnot_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetAlt_1");

var _emscripten_bind_PdeAnnot_SetActualText_1 = Module["_emscripten_bind_PdeAnnot_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetActualText_1");

var _emscripten_bind_PdeAnnot_GetFlags_0 = Module["_emscripten_bind_PdeAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetFlags_0");

var _emscripten_bind_PdeAnnot_SetFlags_1 = Module["_emscripten_bind_PdeAnnot_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeAnnot_SetFlags_1");

var _emscripten_bind_PdeAnnot_GetNumPageObjects_0 = Module["_emscripten_bind_PdeAnnot_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetNumPageObjects_0");

var _emscripten_bind_PdeAnnot_GetPageObject_1 = Module["_emscripten_bind_PdeAnnot_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeAnnot_GetPageObject_1");

var _emscripten_bind_PdeAnnot_GetPageMap_0 = Module["_emscripten_bind_PdeAnnot_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeAnnot_GetPageMap_0");

var _emscripten_bind_PdeAnnot___destroy___0 = Module["_emscripten_bind_PdeAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdeAnnot___destroy___0");

var _emscripten_bind_PdfMarkupAnnot_GetContents_2 = Module["_emscripten_bind_PdfMarkupAnnot_GetContents_2"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetContents_2");

var _emscripten_bind_PdfMarkupAnnot_SetContents_1 = Module["_emscripten_bind_PdfMarkupAnnot_SetContents_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_SetContents_1");

var _emscripten_bind_PdfMarkupAnnot_GetAuthor_2 = Module["_emscripten_bind_PdfMarkupAnnot_GetAuthor_2"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetAuthor_2");

var _emscripten_bind_PdfMarkupAnnot_SetAuthor_1 = Module["_emscripten_bind_PdfMarkupAnnot_SetAuthor_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_SetAuthor_1");

var _emscripten_bind_PdfMarkupAnnot_GetNumReplies_0 = Module["_emscripten_bind_PdfMarkupAnnot_GetNumReplies_0"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetNumReplies_0");

var _emscripten_bind_PdfMarkupAnnot_GetReply_1 = Module["_emscripten_bind_PdfMarkupAnnot_GetReply_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetReply_1");

var _emscripten_bind_PdfMarkupAnnot_AddReply_2 = Module["_emscripten_bind_PdfMarkupAnnot_AddReply_2"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_AddReply_2");

var _emscripten_bind_PdfMarkupAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfMarkupAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetSubtype_0");

var _emscripten_bind_PdfMarkupAnnot_GetFlags_0 = Module["_emscripten_bind_PdfMarkupAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetFlags_0");

var _emscripten_bind_PdfMarkupAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfMarkupAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetAppearance_1");

var _emscripten_bind_PdfMarkupAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfMarkupAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfMarkupAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfMarkupAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfMarkupAnnot_GetBBox_1 = Module["_emscripten_bind_PdfMarkupAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetBBox_1");

var _emscripten_bind_PdfMarkupAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfMarkupAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_PointInAnnot_1");

var _emscripten_bind_PdfMarkupAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfMarkupAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_RectInAnnot_1");

var _emscripten_bind_PdfMarkupAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfMarkupAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetStructObject_1");

var _emscripten_bind_PdfMarkupAnnot_GetObject_0 = Module["_emscripten_bind_PdfMarkupAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_GetObject_0");

var _emscripten_bind_PdfMarkupAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfMarkupAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfMarkupAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfMarkupAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfMarkupAnnot___destroy___0 = Module["_emscripten_bind_PdfMarkupAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfMarkupAnnot___destroy___0");

var _emscripten_bind_PdfBaseDigSig_Destroy_0 = Module["_emscripten_bind_PdfBaseDigSig_Destroy_0"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_Destroy_0");

var _emscripten_bind_PdfBaseDigSig_SetReason_1 = Module["_emscripten_bind_PdfBaseDigSig_SetReason_1"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SetReason_1");

var _emscripten_bind_PdfBaseDigSig_SetLocation_1 = Module["_emscripten_bind_PdfBaseDigSig_SetLocation_1"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SetLocation_1");

var _emscripten_bind_PdfBaseDigSig_SetContactInfo_1 = Module["_emscripten_bind_PdfBaseDigSig_SetContactInfo_1"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SetContactInfo_1");

var _emscripten_bind_PdfBaseDigSig_SetName_1 = Module["_emscripten_bind_PdfBaseDigSig_SetName_1"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SetName_1");

var _emscripten_bind_PdfBaseDigSig_SetTimeStampServer_3 = Module["_emscripten_bind_PdfBaseDigSig_SetTimeStampServer_3"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SetTimeStampServer_3");

var _emscripten_bind_PdfBaseDigSig_SignDoc_2 = Module["_emscripten_bind_PdfBaseDigSig_SignDoc_2"] = createExportWrapper("emscripten_bind_PdfBaseDigSig_SignDoc_2");

var _emscripten_bind_PdfBaseDigSig___destroy___0 = Module["_emscripten_bind_PdfBaseDigSig___destroy___0"] = createExportWrapper("emscripten_bind_PdfBaseDigSig___destroy___0");

var _emscripten_bind_PdfAlternate_GetSubtype_0 = Module["_emscripten_bind_PdfAlternate_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfAlternate_GetSubtype_0");

var _emscripten_bind_PdfAlternate_GetName_2 = Module["_emscripten_bind_PdfAlternate_GetName_2"] = createExportWrapper("emscripten_bind_PdfAlternate_GetName_2");

var _emscripten_bind_PdfAlternate_GetDescription_2 = Module["_emscripten_bind_PdfAlternate_GetDescription_2"] = createExportWrapper("emscripten_bind_PdfAlternate_GetDescription_2");

var _emscripten_bind_PdfAlternate_GetFileName_2 = Module["_emscripten_bind_PdfAlternate_GetFileName_2"] = createExportWrapper("emscripten_bind_PdfAlternate_GetFileName_2");

var _emscripten_bind_PdfAlternate_SaveContent_1 = Module["_emscripten_bind_PdfAlternate_SaveContent_1"] = createExportWrapper("emscripten_bind_PdfAlternate_SaveContent_1");

var _emscripten_bind_PdfAlternate_Release_0 = Module["_emscripten_bind_PdfAlternate_Release_0"] = createExportWrapper("emscripten_bind_PdfAlternate_Release_0");

var _emscripten_bind_PdfAlternate___destroy___0 = Module["_emscripten_bind_PdfAlternate___destroy___0"] = createExportWrapper("emscripten_bind_PdfAlternate___destroy___0");

var _emscripten_bind_PsStream_Destroy_0 = Module["_emscripten_bind_PsStream_Destroy_0"] = createExportWrapper("emscripten_bind_PsStream_Destroy_0");

var _emscripten_bind_PsStream_IsEof_0 = Module["_emscripten_bind_PsStream_IsEof_0"] = createExportWrapper("emscripten_bind_PsStream_IsEof_0");

var _emscripten_bind_PsStream_GetSize_0 = Module["_emscripten_bind_PsStream_GetSize_0"] = createExportWrapper("emscripten_bind_PsStream_GetSize_0");

var _emscripten_bind_PsStream_Read_3 = Module["_emscripten_bind_PsStream_Read_3"] = createExportWrapper("emscripten_bind_PsStream_Read_3");

var _emscripten_bind_PsStream_Write_3 = Module["_emscripten_bind_PsStream_Write_3"] = createExportWrapper("emscripten_bind_PsStream_Write_3");

var _emscripten_bind_PsStream_GetPos_0 = Module["_emscripten_bind_PsStream_GetPos_0"] = createExportWrapper("emscripten_bind_PsStream_GetPos_0");

var _emscripten_bind_PsStream_Flush_0 = Module["_emscripten_bind_PsStream_Flush_0"] = createExportWrapper("emscripten_bind_PsStream_Flush_0");

var _emscripten_bind_PsStream_GetStream_0 = Module["_emscripten_bind_PsStream_GetStream_0"] = createExportWrapper("emscripten_bind_PsStream_GetStream_0");

var _emscripten_bind_PsStream_GetType_0 = Module["_emscripten_bind_PsStream_GetType_0"] = createExportWrapper("emscripten_bind_PsStream_GetType_0");

var _emscripten_bind_PsStream___destroy___0 = Module["_emscripten_bind_PsStream___destroy___0"] = createExportWrapper("emscripten_bind_PsStream___destroy___0");

var _emscripten_bind_PsAuthorization_SaveToStream_2 = Module["_emscripten_bind_PsAuthorization_SaveToStream_2"] = createExportWrapper("emscripten_bind_PsAuthorization_SaveToStream_2");

var _emscripten_bind_PsAuthorization_IsAuthorized_0 = Module["_emscripten_bind_PsAuthorization_IsAuthorized_0"] = createExportWrapper("emscripten_bind_PsAuthorization_IsAuthorized_0");

var _emscripten_bind_PsAuthorization_IsAuthorizedPlatform_1 = Module["_emscripten_bind_PsAuthorization_IsAuthorizedPlatform_1"] = createExportWrapper("emscripten_bind_PsAuthorization_IsAuthorizedPlatform_1");

var _emscripten_bind_PsAuthorization_IsAuthorizedOption_1 = Module["_emscripten_bind_PsAuthorization_IsAuthorizedOption_1"] = createExportWrapper("emscripten_bind_PsAuthorization_IsAuthorizedOption_1");

var _emscripten_bind_PsAuthorization_GetType_0 = Module["_emscripten_bind_PsAuthorization_GetType_0"] = createExportWrapper("emscripten_bind_PsAuthorization_GetType_0");

var _emscripten_bind_PsAuthorization___destroy___0 = Module["_emscripten_bind_PsAuthorization___destroy___0"] = createExportWrapper("emscripten_bind_PsAuthorization___destroy___0");

var _emscripten_bind_PdfixPlugin_Destroy_0 = Module["_emscripten_bind_PdfixPlugin_Destroy_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_Destroy_0");

var _emscripten_bind_PdfixPlugin_Initialize_1 = Module["_emscripten_bind_PdfixPlugin_Initialize_1"] = createExportWrapper("emscripten_bind_PdfixPlugin_Initialize_1");

var _emscripten_bind_PdfixPlugin_GetVersionMajor_0 = Module["_emscripten_bind_PdfixPlugin_GetVersionMajor_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetVersionMajor_0");

var _emscripten_bind_PdfixPlugin_GetVersionMinor_0 = Module["_emscripten_bind_PdfixPlugin_GetVersionMinor_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetVersionMinor_0");

var _emscripten_bind_PdfixPlugin_GetVersionPatch_0 = Module["_emscripten_bind_PdfixPlugin_GetVersionPatch_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetVersionPatch_0");

var _emscripten_bind_PdfixPlugin_GetPdfixVersionMajor_0 = Module["_emscripten_bind_PdfixPlugin_GetPdfixVersionMajor_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetPdfixVersionMajor_0");

var _emscripten_bind_PdfixPlugin_GetPdfixVersionMinor_0 = Module["_emscripten_bind_PdfixPlugin_GetPdfixVersionMinor_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetPdfixVersionMinor_0");

var _emscripten_bind_PdfixPlugin_GetPdfixVersionPatch_0 = Module["_emscripten_bind_PdfixPlugin_GetPdfixVersionPatch_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetPdfixVersionPatch_0");

var _emscripten_bind_PdfixPlugin_GetPdfix_0 = Module["_emscripten_bind_PdfixPlugin_GetPdfix_0"] = createExportWrapper("emscripten_bind_PdfixPlugin_GetPdfix_0");

var _emscripten_bind_PdfixPlugin___destroy___0 = Module["_emscripten_bind_PdfixPlugin___destroy___0"] = createExportWrapper("emscripten_bind_PdfixPlugin___destroy___0");

var _emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = createExportWrapper("emscripten_bind_VoidPtr___destroy___0");

var _emscripten_bind_PdfPageRangeParams_PdfPageRangeParams_0 = Module["_emscripten_bind_PdfPageRangeParams_PdfPageRangeParams_0"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_PdfPageRangeParams_0");

var _emscripten_bind_PdfPageRangeParams_get_start_page_0 = Module["_emscripten_bind_PdfPageRangeParams_get_start_page_0"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_get_start_page_0");

var _emscripten_bind_PdfPageRangeParams_set_start_page_1 = Module["_emscripten_bind_PdfPageRangeParams_set_start_page_1"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_set_start_page_1");

var _emscripten_bind_PdfPageRangeParams_get_end_page_0 = Module["_emscripten_bind_PdfPageRangeParams_get_end_page_0"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_get_end_page_0");

var _emscripten_bind_PdfPageRangeParams_set_end_page_1 = Module["_emscripten_bind_PdfPageRangeParams_set_end_page_1"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_set_end_page_1");

var _emscripten_bind_PdfPageRangeParams_get_page_range_spec_0 = Module["_emscripten_bind_PdfPageRangeParams_get_page_range_spec_0"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_get_page_range_spec_0");

var _emscripten_bind_PdfPageRangeParams_set_page_range_spec_1 = Module["_emscripten_bind_PdfPageRangeParams_set_page_range_spec_1"] = createExportWrapper("emscripten_bind_PdfPageRangeParams_set_page_range_spec_1");

var _emscripten_bind_PdfPageRangeParams___destroy___0 = Module["_emscripten_bind_PdfPageRangeParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfPageRangeParams___destroy___0");

var _emscripten_bind_PdfWatermarkParams_PdfWatermarkParams_0 = Module["_emscripten_bind_PdfWatermarkParams_PdfWatermarkParams_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_PdfWatermarkParams_0");

var _emscripten_bind_PdfWatermarkParams_get_page_range_0 = Module["_emscripten_bind_PdfWatermarkParams_get_page_range_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_page_range_0");

var _emscripten_bind_PdfWatermarkParams_set_page_range_1 = Module["_emscripten_bind_PdfWatermarkParams_set_page_range_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_page_range_1");

var _emscripten_bind_PdfWatermarkParams_get_order_top_0 = Module["_emscripten_bind_PdfWatermarkParams_get_order_top_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_order_top_0");

var _emscripten_bind_PdfWatermarkParams_set_order_top_1 = Module["_emscripten_bind_PdfWatermarkParams_set_order_top_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_order_top_1");

var _emscripten_bind_PdfWatermarkParams_get_h_align_0 = Module["_emscripten_bind_PdfWatermarkParams_get_h_align_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_h_align_0");

var _emscripten_bind_PdfWatermarkParams_set_h_align_1 = Module["_emscripten_bind_PdfWatermarkParams_set_h_align_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_h_align_1");

var _emscripten_bind_PdfWatermarkParams_get_v_align_0 = Module["_emscripten_bind_PdfWatermarkParams_get_v_align_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_v_align_0");

var _emscripten_bind_PdfWatermarkParams_set_v_align_1 = Module["_emscripten_bind_PdfWatermarkParams_set_v_align_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_v_align_1");

var _emscripten_bind_PdfWatermarkParams_get_percentage_vals_0 = Module["_emscripten_bind_PdfWatermarkParams_get_percentage_vals_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_percentage_vals_0");

var _emscripten_bind_PdfWatermarkParams_set_percentage_vals_1 = Module["_emscripten_bind_PdfWatermarkParams_set_percentage_vals_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_percentage_vals_1");

var _emscripten_bind_PdfWatermarkParams_get_h_value_0 = Module["_emscripten_bind_PdfWatermarkParams_get_h_value_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_h_value_0");

var _emscripten_bind_PdfWatermarkParams_set_h_value_1 = Module["_emscripten_bind_PdfWatermarkParams_set_h_value_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_h_value_1");

var _emscripten_bind_PdfWatermarkParams_get_v_value_0 = Module["_emscripten_bind_PdfWatermarkParams_get_v_value_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_v_value_0");

var _emscripten_bind_PdfWatermarkParams_set_v_value_1 = Module["_emscripten_bind_PdfWatermarkParams_set_v_value_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_v_value_1");

var _emscripten_bind_PdfWatermarkParams_get_scale_0 = Module["_emscripten_bind_PdfWatermarkParams_get_scale_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_scale_0");

var _emscripten_bind_PdfWatermarkParams_set_scale_1 = Module["_emscripten_bind_PdfWatermarkParams_set_scale_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_scale_1");

var _emscripten_bind_PdfWatermarkParams_get_rotation_0 = Module["_emscripten_bind_PdfWatermarkParams_get_rotation_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_rotation_0");

var _emscripten_bind_PdfWatermarkParams_set_rotation_1 = Module["_emscripten_bind_PdfWatermarkParams_set_rotation_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_rotation_1");

var _emscripten_bind_PdfWatermarkParams_get_opacity_0 = Module["_emscripten_bind_PdfWatermarkParams_get_opacity_0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_get_opacity_0");

var _emscripten_bind_PdfWatermarkParams_set_opacity_1 = Module["_emscripten_bind_PdfWatermarkParams_set_opacity_1"] = createExportWrapper("emscripten_bind_PdfWatermarkParams_set_opacity_1");

var _emscripten_bind_PdfWatermarkParams___destroy___0 = Module["_emscripten_bind_PdfWatermarkParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfWatermarkParams___destroy___0");

var _emscripten_bind_PdfPoint_PdfPoint_0 = Module["_emscripten_bind_PdfPoint_PdfPoint_0"] = createExportWrapper("emscripten_bind_PdfPoint_PdfPoint_0");

var _emscripten_bind_PdfPoint_get_x_0 = Module["_emscripten_bind_PdfPoint_get_x_0"] = createExportWrapper("emscripten_bind_PdfPoint_get_x_0");

var _emscripten_bind_PdfPoint_set_x_1 = Module["_emscripten_bind_PdfPoint_set_x_1"] = createExportWrapper("emscripten_bind_PdfPoint_set_x_1");

var _emscripten_bind_PdfPoint_get_y_0 = Module["_emscripten_bind_PdfPoint_get_y_0"] = createExportWrapper("emscripten_bind_PdfPoint_get_y_0");

var _emscripten_bind_PdfPoint_set_y_1 = Module["_emscripten_bind_PdfPoint_set_y_1"] = createExportWrapper("emscripten_bind_PdfPoint_set_y_1");

var _emscripten_bind_PdfPoint___destroy___0 = Module["_emscripten_bind_PdfPoint___destroy___0"] = createExportWrapper("emscripten_bind_PdfPoint___destroy___0");

var _emscripten_bind_PdfDevPoint_PdfDevPoint_0 = Module["_emscripten_bind_PdfDevPoint_PdfDevPoint_0"] = createExportWrapper("emscripten_bind_PdfDevPoint_PdfDevPoint_0");

var _emscripten_bind_PdfDevPoint_get_x_0 = Module["_emscripten_bind_PdfDevPoint_get_x_0"] = createExportWrapper("emscripten_bind_PdfDevPoint_get_x_0");

var _emscripten_bind_PdfDevPoint_set_x_1 = Module["_emscripten_bind_PdfDevPoint_set_x_1"] = createExportWrapper("emscripten_bind_PdfDevPoint_set_x_1");

var _emscripten_bind_PdfDevPoint_get_y_0 = Module["_emscripten_bind_PdfDevPoint_get_y_0"] = createExportWrapper("emscripten_bind_PdfDevPoint_get_y_0");

var _emscripten_bind_PdfDevPoint_set_y_1 = Module["_emscripten_bind_PdfDevPoint_set_y_1"] = createExportWrapper("emscripten_bind_PdfDevPoint_set_y_1");

var _emscripten_bind_PdfDevPoint___destroy___0 = Module["_emscripten_bind_PdfDevPoint___destroy___0"] = createExportWrapper("emscripten_bind_PdfDevPoint___destroy___0");

var _emscripten_bind_PdfRect_PdfRect_0 = Module["_emscripten_bind_PdfRect_PdfRect_0"] = createExportWrapper("emscripten_bind_PdfRect_PdfRect_0");

var _emscripten_bind_PdfRect_get_left_0 = Module["_emscripten_bind_PdfRect_get_left_0"] = createExportWrapper("emscripten_bind_PdfRect_get_left_0");

var _emscripten_bind_PdfRect_set_left_1 = Module["_emscripten_bind_PdfRect_set_left_1"] = createExportWrapper("emscripten_bind_PdfRect_set_left_1");

var _emscripten_bind_PdfRect_get_top_0 = Module["_emscripten_bind_PdfRect_get_top_0"] = createExportWrapper("emscripten_bind_PdfRect_get_top_0");

var _emscripten_bind_PdfRect_set_top_1 = Module["_emscripten_bind_PdfRect_set_top_1"] = createExportWrapper("emscripten_bind_PdfRect_set_top_1");

var _emscripten_bind_PdfRect_get_right_0 = Module["_emscripten_bind_PdfRect_get_right_0"] = createExportWrapper("emscripten_bind_PdfRect_get_right_0");

var _emscripten_bind_PdfRect_set_right_1 = Module["_emscripten_bind_PdfRect_set_right_1"] = createExportWrapper("emscripten_bind_PdfRect_set_right_1");

var _emscripten_bind_PdfRect_get_bottom_0 = Module["_emscripten_bind_PdfRect_get_bottom_0"] = createExportWrapper("emscripten_bind_PdfRect_get_bottom_0");

var _emscripten_bind_PdfRect_set_bottom_1 = Module["_emscripten_bind_PdfRect_set_bottom_1"] = createExportWrapper("emscripten_bind_PdfRect_set_bottom_1");

var _emscripten_bind_PdfRect___destroy___0 = Module["_emscripten_bind_PdfRect___destroy___0"] = createExportWrapper("emscripten_bind_PdfRect___destroy___0");

var _emscripten_bind_PdfDevRect_PdfDevRect_0 = Module["_emscripten_bind_PdfDevRect_PdfDevRect_0"] = createExportWrapper("emscripten_bind_PdfDevRect_PdfDevRect_0");

var _emscripten_bind_PdfDevRect_get_left_0 = Module["_emscripten_bind_PdfDevRect_get_left_0"] = createExportWrapper("emscripten_bind_PdfDevRect_get_left_0");

var _emscripten_bind_PdfDevRect_set_left_1 = Module["_emscripten_bind_PdfDevRect_set_left_1"] = createExportWrapper("emscripten_bind_PdfDevRect_set_left_1");

var _emscripten_bind_PdfDevRect_get_top_0 = Module["_emscripten_bind_PdfDevRect_get_top_0"] = createExportWrapper("emscripten_bind_PdfDevRect_get_top_0");

var _emscripten_bind_PdfDevRect_set_top_1 = Module["_emscripten_bind_PdfDevRect_set_top_1"] = createExportWrapper("emscripten_bind_PdfDevRect_set_top_1");

var _emscripten_bind_PdfDevRect_get_right_0 = Module["_emscripten_bind_PdfDevRect_get_right_0"] = createExportWrapper("emscripten_bind_PdfDevRect_get_right_0");

var _emscripten_bind_PdfDevRect_set_right_1 = Module["_emscripten_bind_PdfDevRect_set_right_1"] = createExportWrapper("emscripten_bind_PdfDevRect_set_right_1");

var _emscripten_bind_PdfDevRect_get_bottom_0 = Module["_emscripten_bind_PdfDevRect_get_bottom_0"] = createExportWrapper("emscripten_bind_PdfDevRect_get_bottom_0");

var _emscripten_bind_PdfDevRect_set_bottom_1 = Module["_emscripten_bind_PdfDevRect_set_bottom_1"] = createExportWrapper("emscripten_bind_PdfDevRect_set_bottom_1");

var _emscripten_bind_PdfDevRect___destroy___0 = Module["_emscripten_bind_PdfDevRect___destroy___0"] = createExportWrapper("emscripten_bind_PdfDevRect___destroy___0");

var _emscripten_bind_PdfQuad_PdfQuad_0 = Module["_emscripten_bind_PdfQuad_PdfQuad_0"] = createExportWrapper("emscripten_bind_PdfQuad_PdfQuad_0");

var _emscripten_bind_PdfQuad_get_tl_0 = Module["_emscripten_bind_PdfQuad_get_tl_0"] = createExportWrapper("emscripten_bind_PdfQuad_get_tl_0");

var _emscripten_bind_PdfQuad_set_tl_1 = Module["_emscripten_bind_PdfQuad_set_tl_1"] = createExportWrapper("emscripten_bind_PdfQuad_set_tl_1");

var _emscripten_bind_PdfQuad_get_tr_0 = Module["_emscripten_bind_PdfQuad_get_tr_0"] = createExportWrapper("emscripten_bind_PdfQuad_get_tr_0");

var _emscripten_bind_PdfQuad_set_tr_1 = Module["_emscripten_bind_PdfQuad_set_tr_1"] = createExportWrapper("emscripten_bind_PdfQuad_set_tr_1");

var _emscripten_bind_PdfQuad_get_bl_0 = Module["_emscripten_bind_PdfQuad_get_bl_0"] = createExportWrapper("emscripten_bind_PdfQuad_get_bl_0");

var _emscripten_bind_PdfQuad_set_bl_1 = Module["_emscripten_bind_PdfQuad_set_bl_1"] = createExportWrapper("emscripten_bind_PdfQuad_set_bl_1");

var _emscripten_bind_PdfQuad_get_br_0 = Module["_emscripten_bind_PdfQuad_get_br_0"] = createExportWrapper("emscripten_bind_PdfQuad_get_br_0");

var _emscripten_bind_PdfQuad_set_br_1 = Module["_emscripten_bind_PdfQuad_set_br_1"] = createExportWrapper("emscripten_bind_PdfQuad_set_br_1");

var _emscripten_bind_PdfQuad___destroy___0 = Module["_emscripten_bind_PdfQuad___destroy___0"] = createExportWrapper("emscripten_bind_PdfQuad___destroy___0");

var _emscripten_bind_PdfDevQuad_PdfDevQuad_0 = Module["_emscripten_bind_PdfDevQuad_PdfDevQuad_0"] = createExportWrapper("emscripten_bind_PdfDevQuad_PdfDevQuad_0");

var _emscripten_bind_PdfDevQuad_get_tl_0 = Module["_emscripten_bind_PdfDevQuad_get_tl_0"] = createExportWrapper("emscripten_bind_PdfDevQuad_get_tl_0");

var _emscripten_bind_PdfDevQuad_set_tl_1 = Module["_emscripten_bind_PdfDevQuad_set_tl_1"] = createExportWrapper("emscripten_bind_PdfDevQuad_set_tl_1");

var _emscripten_bind_PdfDevQuad_get_tr_0 = Module["_emscripten_bind_PdfDevQuad_get_tr_0"] = createExportWrapper("emscripten_bind_PdfDevQuad_get_tr_0");

var _emscripten_bind_PdfDevQuad_set_tr_1 = Module["_emscripten_bind_PdfDevQuad_set_tr_1"] = createExportWrapper("emscripten_bind_PdfDevQuad_set_tr_1");

var _emscripten_bind_PdfDevQuad_get_bl_0 = Module["_emscripten_bind_PdfDevQuad_get_bl_0"] = createExportWrapper("emscripten_bind_PdfDevQuad_get_bl_0");

var _emscripten_bind_PdfDevQuad_set_bl_1 = Module["_emscripten_bind_PdfDevQuad_set_bl_1"] = createExportWrapper("emscripten_bind_PdfDevQuad_set_bl_1");

var _emscripten_bind_PdfDevQuad_get_br_0 = Module["_emscripten_bind_PdfDevQuad_get_br_0"] = createExportWrapper("emscripten_bind_PdfDevQuad_get_br_0");

var _emscripten_bind_PdfDevQuad_set_br_1 = Module["_emscripten_bind_PdfDevQuad_set_br_1"] = createExportWrapper("emscripten_bind_PdfDevQuad_set_br_1");

var _emscripten_bind_PdfDevQuad___destroy___0 = Module["_emscripten_bind_PdfDevQuad___destroy___0"] = createExportWrapper("emscripten_bind_PdfDevQuad___destroy___0");

var _emscripten_bind_PdfMatrix_PdfMatrix_0 = Module["_emscripten_bind_PdfMatrix_PdfMatrix_0"] = createExportWrapper("emscripten_bind_PdfMatrix_PdfMatrix_0");

var _emscripten_bind_PdfMatrix_get_a_0 = Module["_emscripten_bind_PdfMatrix_get_a_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_a_0");

var _emscripten_bind_PdfMatrix_set_a_1 = Module["_emscripten_bind_PdfMatrix_set_a_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_a_1");

var _emscripten_bind_PdfMatrix_get_b_0 = Module["_emscripten_bind_PdfMatrix_get_b_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_b_0");

var _emscripten_bind_PdfMatrix_set_b_1 = Module["_emscripten_bind_PdfMatrix_set_b_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_b_1");

var _emscripten_bind_PdfMatrix_get_c_0 = Module["_emscripten_bind_PdfMatrix_get_c_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_c_0");

var _emscripten_bind_PdfMatrix_set_c_1 = Module["_emscripten_bind_PdfMatrix_set_c_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_c_1");

var _emscripten_bind_PdfMatrix_get_d_0 = Module["_emscripten_bind_PdfMatrix_get_d_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_d_0");

var _emscripten_bind_PdfMatrix_set_d_1 = Module["_emscripten_bind_PdfMatrix_set_d_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_d_1");

var _emscripten_bind_PdfMatrix_get_e_0 = Module["_emscripten_bind_PdfMatrix_get_e_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_e_0");

var _emscripten_bind_PdfMatrix_set_e_1 = Module["_emscripten_bind_PdfMatrix_set_e_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_e_1");

var _emscripten_bind_PdfMatrix_get_f_0 = Module["_emscripten_bind_PdfMatrix_get_f_0"] = createExportWrapper("emscripten_bind_PdfMatrix_get_f_0");

var _emscripten_bind_PdfMatrix_set_f_1 = Module["_emscripten_bind_PdfMatrix_set_f_1"] = createExportWrapper("emscripten_bind_PdfMatrix_set_f_1");

var _emscripten_bind_PdfMatrix___destroy___0 = Module["_emscripten_bind_PdfMatrix___destroy___0"] = createExportWrapper("emscripten_bind_PdfMatrix___destroy___0");

var _emscripten_bind_PdfRGB_PdfRGB_0 = Module["_emscripten_bind_PdfRGB_PdfRGB_0"] = createExportWrapper("emscripten_bind_PdfRGB_PdfRGB_0");

var _emscripten_bind_PdfRGB_get_r_0 = Module["_emscripten_bind_PdfRGB_get_r_0"] = createExportWrapper("emscripten_bind_PdfRGB_get_r_0");

var _emscripten_bind_PdfRGB_set_r_1 = Module["_emscripten_bind_PdfRGB_set_r_1"] = createExportWrapper("emscripten_bind_PdfRGB_set_r_1");

var _emscripten_bind_PdfRGB_get_g_0 = Module["_emscripten_bind_PdfRGB_get_g_0"] = createExportWrapper("emscripten_bind_PdfRGB_get_g_0");

var _emscripten_bind_PdfRGB_set_g_1 = Module["_emscripten_bind_PdfRGB_set_g_1"] = createExportWrapper("emscripten_bind_PdfRGB_set_g_1");

var _emscripten_bind_PdfRGB_get_b_0 = Module["_emscripten_bind_PdfRGB_get_b_0"] = createExportWrapper("emscripten_bind_PdfRGB_get_b_0");

var _emscripten_bind_PdfRGB_set_b_1 = Module["_emscripten_bind_PdfRGB_set_b_1"] = createExportWrapper("emscripten_bind_PdfRGB_set_b_1");

var _emscripten_bind_PdfRGB___destroy___0 = Module["_emscripten_bind_PdfRGB___destroy___0"] = createExportWrapper("emscripten_bind_PdfRGB___destroy___0");

var _emscripten_bind_PdfColorState_PdfColorState_0 = Module["_emscripten_bind_PdfColorState_PdfColorState_0"] = createExportWrapper("emscripten_bind_PdfColorState_PdfColorState_0");

var _emscripten_bind_PdfColorState_get_fill_type_0 = Module["_emscripten_bind_PdfColorState_get_fill_type_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_fill_type_0");

var _emscripten_bind_PdfColorState_set_fill_type_1 = Module["_emscripten_bind_PdfColorState_set_fill_type_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_fill_type_1");

var _emscripten_bind_PdfColorState_get_stroke_type_0 = Module["_emscripten_bind_PdfColorState_get_stroke_type_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_stroke_type_0");

var _emscripten_bind_PdfColorState_set_stroke_type_1 = Module["_emscripten_bind_PdfColorState_set_stroke_type_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_stroke_type_1");

var _emscripten_bind_PdfColorState_get_fill_color_0 = Module["_emscripten_bind_PdfColorState_get_fill_color_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_fill_color_0");

var _emscripten_bind_PdfColorState_set_fill_color_1 = Module["_emscripten_bind_PdfColorState_set_fill_color_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_fill_color_1");

var _emscripten_bind_PdfColorState_get_stroke_color_0 = Module["_emscripten_bind_PdfColorState_get_stroke_color_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_stroke_color_0");

var _emscripten_bind_PdfColorState_set_stroke_color_1 = Module["_emscripten_bind_PdfColorState_set_stroke_color_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_stroke_color_1");

var _emscripten_bind_PdfColorState_get_fill_opacity_0 = Module["_emscripten_bind_PdfColorState_get_fill_opacity_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_fill_opacity_0");

var _emscripten_bind_PdfColorState_set_fill_opacity_1 = Module["_emscripten_bind_PdfColorState_set_fill_opacity_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_fill_opacity_1");

var _emscripten_bind_PdfColorState_get_stroke_opacity_0 = Module["_emscripten_bind_PdfColorState_get_stroke_opacity_0"] = createExportWrapper("emscripten_bind_PdfColorState_get_stroke_opacity_0");

var _emscripten_bind_PdfColorState_set_stroke_opacity_1 = Module["_emscripten_bind_PdfColorState_set_stroke_opacity_1"] = createExportWrapper("emscripten_bind_PdfColorState_set_stroke_opacity_1");

var _emscripten_bind_PdfColorState___destroy___0 = Module["_emscripten_bind_PdfColorState___destroy___0"] = createExportWrapper("emscripten_bind_PdfColorState___destroy___0");

var _emscripten_bind_PdfTextState_PdfTextState_0 = Module["_emscripten_bind_PdfTextState_PdfTextState_0"] = createExportWrapper("emscripten_bind_PdfTextState_PdfTextState_0");

var _emscripten_bind_PdfTextState_get_color_state_0 = Module["_emscripten_bind_PdfTextState_get_color_state_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_color_state_0");

var _emscripten_bind_PdfTextState_set_color_state_1 = Module["_emscripten_bind_PdfTextState_set_color_state_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_color_state_1");

var _emscripten_bind_PdfTextState_get_font_0 = Module["_emscripten_bind_PdfTextState_get_font_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_font_0");

var _emscripten_bind_PdfTextState_set_font_1 = Module["_emscripten_bind_PdfTextState_set_font_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_font_1");

var _emscripten_bind_PdfTextState_get_font_size_0 = Module["_emscripten_bind_PdfTextState_get_font_size_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_font_size_0");

var _emscripten_bind_PdfTextState_set_font_size_1 = Module["_emscripten_bind_PdfTextState_set_font_size_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_font_size_1");

var _emscripten_bind_PdfTextState_get_char_spacing_0 = Module["_emscripten_bind_PdfTextState_get_char_spacing_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_char_spacing_0");

var _emscripten_bind_PdfTextState_set_char_spacing_1 = Module["_emscripten_bind_PdfTextState_set_char_spacing_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_char_spacing_1");

var _emscripten_bind_PdfTextState_get_word_spacing_0 = Module["_emscripten_bind_PdfTextState_get_word_spacing_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_word_spacing_0");

var _emscripten_bind_PdfTextState_set_word_spacing_1 = Module["_emscripten_bind_PdfTextState_set_word_spacing_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_word_spacing_1");

var _emscripten_bind_PdfTextState_get_flags_0 = Module["_emscripten_bind_PdfTextState_get_flags_0"] = createExportWrapper("emscripten_bind_PdfTextState_get_flags_0");

var _emscripten_bind_PdfTextState_set_flags_1 = Module["_emscripten_bind_PdfTextState_set_flags_1"] = createExportWrapper("emscripten_bind_PdfTextState_set_flags_1");

var _emscripten_bind_PdfTextState___destroy___0 = Module["_emscripten_bind_PdfTextState___destroy___0"] = createExportWrapper("emscripten_bind_PdfTextState___destroy___0");

var _emscripten_bind_PdfGraphicState_PdfGraphicState_0 = Module["_emscripten_bind_PdfGraphicState_PdfGraphicState_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_PdfGraphicState_0");

var _emscripten_bind_PdfGraphicState_get_color_state_0 = Module["_emscripten_bind_PdfGraphicState_get_color_state_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_color_state_0");

var _emscripten_bind_PdfGraphicState_set_color_state_1 = Module["_emscripten_bind_PdfGraphicState_set_color_state_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_color_state_1");

var _emscripten_bind_PdfGraphicState_get_line_width_0 = Module["_emscripten_bind_PdfGraphicState_get_line_width_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_line_width_0");

var _emscripten_bind_PdfGraphicState_set_line_width_1 = Module["_emscripten_bind_PdfGraphicState_set_line_width_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_line_width_1");

var _emscripten_bind_PdfGraphicState_get_miter_limit_0 = Module["_emscripten_bind_PdfGraphicState_get_miter_limit_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_miter_limit_0");

var _emscripten_bind_PdfGraphicState_set_miter_limit_1 = Module["_emscripten_bind_PdfGraphicState_set_miter_limit_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_miter_limit_1");

var _emscripten_bind_PdfGraphicState_get_line_cap_0 = Module["_emscripten_bind_PdfGraphicState_get_line_cap_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_line_cap_0");

var _emscripten_bind_PdfGraphicState_set_line_cap_1 = Module["_emscripten_bind_PdfGraphicState_set_line_cap_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_line_cap_1");

var _emscripten_bind_PdfGraphicState_get_line_join_0 = Module["_emscripten_bind_PdfGraphicState_get_line_join_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_line_join_0");

var _emscripten_bind_PdfGraphicState_set_line_join_1 = Module["_emscripten_bind_PdfGraphicState_set_line_join_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_line_join_1");

var _emscripten_bind_PdfGraphicState_get_blend_mode_0 = Module["_emscripten_bind_PdfGraphicState_get_blend_mode_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_blend_mode_0");

var _emscripten_bind_PdfGraphicState_set_blend_mode_1 = Module["_emscripten_bind_PdfGraphicState_set_blend_mode_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_blend_mode_1");

var _emscripten_bind_PdfGraphicState_get_matrix_0 = Module["_emscripten_bind_PdfGraphicState_get_matrix_0"] = createExportWrapper("emscripten_bind_PdfGraphicState_get_matrix_0");

var _emscripten_bind_PdfGraphicState_set_matrix_1 = Module["_emscripten_bind_PdfGraphicState_set_matrix_1"] = createExportWrapper("emscripten_bind_PdfGraphicState_set_matrix_1");

var _emscripten_bind_PdfGraphicState___destroy___0 = Module["_emscripten_bind_PdfGraphicState___destroy___0"] = createExportWrapper("emscripten_bind_PdfGraphicState___destroy___0");

var _emscripten_bind_PdfFontState_PdfFontState_0 = Module["_emscripten_bind_PdfFontState_PdfFontState_0"] = createExportWrapper("emscripten_bind_PdfFontState_PdfFontState_0");

var _emscripten_bind_PdfFontState_get_type_0 = Module["_emscripten_bind_PdfFontState_get_type_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_type_0");

var _emscripten_bind_PdfFontState_set_type_1 = Module["_emscripten_bind_PdfFontState_set_type_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_type_1");

var _emscripten_bind_PdfFontState_get_flags_0 = Module["_emscripten_bind_PdfFontState_get_flags_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_flags_0");

var _emscripten_bind_PdfFontState_set_flags_1 = Module["_emscripten_bind_PdfFontState_set_flags_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_flags_1");

var _emscripten_bind_PdfFontState_get_bbox_0 = Module["_emscripten_bind_PdfFontState_get_bbox_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_bbox_0");

var _emscripten_bind_PdfFontState_set_bbox_1 = Module["_emscripten_bind_PdfFontState_set_bbox_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_bbox_1");

var _emscripten_bind_PdfFontState_get_ascent_0 = Module["_emscripten_bind_PdfFontState_get_ascent_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_ascent_0");

var _emscripten_bind_PdfFontState_set_ascent_1 = Module["_emscripten_bind_PdfFontState_set_ascent_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_ascent_1");

var _emscripten_bind_PdfFontState_get_descent_0 = Module["_emscripten_bind_PdfFontState_get_descent_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_descent_0");

var _emscripten_bind_PdfFontState_set_descent_1 = Module["_emscripten_bind_PdfFontState_set_descent_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_descent_1");

var _emscripten_bind_PdfFontState_get_italic_0 = Module["_emscripten_bind_PdfFontState_get_italic_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_italic_0");

var _emscripten_bind_PdfFontState_set_italic_1 = Module["_emscripten_bind_PdfFontState_set_italic_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_italic_1");

var _emscripten_bind_PdfFontState_get_bold_0 = Module["_emscripten_bind_PdfFontState_get_bold_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_bold_0");

var _emscripten_bind_PdfFontState_set_bold_1 = Module["_emscripten_bind_PdfFontState_set_bold_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_bold_1");

var _emscripten_bind_PdfFontState_get_fixed_width_0 = Module["_emscripten_bind_PdfFontState_get_fixed_width_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_fixed_width_0");

var _emscripten_bind_PdfFontState_set_fixed_width_1 = Module["_emscripten_bind_PdfFontState_set_fixed_width_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_fixed_width_1");

var _emscripten_bind_PdfFontState_get_vertical_0 = Module["_emscripten_bind_PdfFontState_get_vertical_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_vertical_0");

var _emscripten_bind_PdfFontState_set_vertical_1 = Module["_emscripten_bind_PdfFontState_set_vertical_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_vertical_1");

var _emscripten_bind_PdfFontState_get_embedded_0 = Module["_emscripten_bind_PdfFontState_get_embedded_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_embedded_0");

var _emscripten_bind_PdfFontState_set_embedded_1 = Module["_emscripten_bind_PdfFontState_set_embedded_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_embedded_1");

var _emscripten_bind_PdfFontState_get_height_0 = Module["_emscripten_bind_PdfFontState_get_height_0"] = createExportWrapper("emscripten_bind_PdfFontState_get_height_0");

var _emscripten_bind_PdfFontState_set_height_1 = Module["_emscripten_bind_PdfFontState_set_height_1"] = createExportWrapper("emscripten_bind_PdfFontState_set_height_1");

var _emscripten_bind_PdfFontState___destroy___0 = Module["_emscripten_bind_PdfFontState___destroy___0"] = createExportWrapper("emscripten_bind_PdfFontState___destroy___0");

var _emscripten_bind_PdfPageRenderParams_PdfPageRenderParams_0 = Module["_emscripten_bind_PdfPageRenderParams_PdfPageRenderParams_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_PdfPageRenderParams_0");

var _emscripten_bind_PdfPageRenderParams_get_device_0 = Module["_emscripten_bind_PdfPageRenderParams_get_device_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_get_device_0");

var _emscripten_bind_PdfPageRenderParams_set_device_1 = Module["_emscripten_bind_PdfPageRenderParams_set_device_1"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_set_device_1");

var _emscripten_bind_PdfPageRenderParams_get_image_0 = Module["_emscripten_bind_PdfPageRenderParams_get_image_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_get_image_0");

var _emscripten_bind_PdfPageRenderParams_set_image_1 = Module["_emscripten_bind_PdfPageRenderParams_set_image_1"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_set_image_1");

var _emscripten_bind_PdfPageRenderParams_get_matrix_0 = Module["_emscripten_bind_PdfPageRenderParams_get_matrix_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_get_matrix_0");

var _emscripten_bind_PdfPageRenderParams_set_matrix_1 = Module["_emscripten_bind_PdfPageRenderParams_set_matrix_1"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_set_matrix_1");

var _emscripten_bind_PdfPageRenderParams_get_clip_box_0 = Module["_emscripten_bind_PdfPageRenderParams_get_clip_box_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_get_clip_box_0");

var _emscripten_bind_PdfPageRenderParams_set_clip_box_1 = Module["_emscripten_bind_PdfPageRenderParams_set_clip_box_1"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_set_clip_box_1");

var _emscripten_bind_PdfPageRenderParams_get_render_flags_0 = Module["_emscripten_bind_PdfPageRenderParams_get_render_flags_0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_get_render_flags_0");

var _emscripten_bind_PdfPageRenderParams_set_render_flags_1 = Module["_emscripten_bind_PdfPageRenderParams_set_render_flags_1"] = createExportWrapper("emscripten_bind_PdfPageRenderParams_set_render_flags_1");

var _emscripten_bind_PdfPageRenderParams___destroy___0 = Module["_emscripten_bind_PdfPageRenderParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfPageRenderParams___destroy___0");

var _emscripten_bind_PdfAnnotAppearance_PdfAnnotAppearance_0 = Module["_emscripten_bind_PdfAnnotAppearance_PdfAnnotAppearance_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_PdfAnnotAppearance_0");

var _emscripten_bind_PdfAnnotAppearance_get_fill_color_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_fill_color_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_fill_color_0");

var _emscripten_bind_PdfAnnotAppearance_set_fill_color_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_fill_color_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_fill_color_1");

var _emscripten_bind_PdfAnnotAppearance_get_fill_type_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_fill_type_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_fill_type_0");

var _emscripten_bind_PdfAnnotAppearance_set_fill_type_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_fill_type_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_fill_type_1");

var _emscripten_bind_PdfAnnotAppearance_get_border_color_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_border_color_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_border_color_0");

var _emscripten_bind_PdfAnnotAppearance_set_border_color_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_border_color_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_border_color_1");

var _emscripten_bind_PdfAnnotAppearance_get_border_width_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_border_width_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_border_width_0");

var _emscripten_bind_PdfAnnotAppearance_set_border_width_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_border_width_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_border_width_1");

var _emscripten_bind_PdfAnnotAppearance_get_border_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_border_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_border_0");

var _emscripten_bind_PdfAnnotAppearance_set_border_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_border_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_border_1");

var _emscripten_bind_PdfAnnotAppearance_get_opacity_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_opacity_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_opacity_0");

var _emscripten_bind_PdfAnnotAppearance_set_opacity_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_opacity_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_opacity_1");

var _emscripten_bind_PdfAnnotAppearance_get_font_size_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_font_size_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_font_size_0");

var _emscripten_bind_PdfAnnotAppearance_set_font_size_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_font_size_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_font_size_1");

var _emscripten_bind_PdfAnnotAppearance_get_text_align_0 = Module["_emscripten_bind_PdfAnnotAppearance_get_text_align_0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_get_text_align_0");

var _emscripten_bind_PdfAnnotAppearance_set_text_align_1 = Module["_emscripten_bind_PdfAnnotAppearance_set_text_align_1"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance_set_text_align_1");

var _emscripten_bind_PdfAnnotAppearance___destroy___0 = Module["_emscripten_bind_PdfAnnotAppearance___destroy___0"] = createExportWrapper("emscripten_bind_PdfAnnotAppearance___destroy___0");

var _emscripten_bind_PdfBookmarkAppearance_PdfBookmarkAppearance_0 = Module["_emscripten_bind_PdfBookmarkAppearance_PdfBookmarkAppearance_0"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_PdfBookmarkAppearance_0");

var _emscripten_bind_PdfBookmarkAppearance_get_color_0 = Module["_emscripten_bind_PdfBookmarkAppearance_get_color_0"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_get_color_0");

var _emscripten_bind_PdfBookmarkAppearance_set_color_1 = Module["_emscripten_bind_PdfBookmarkAppearance_set_color_1"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_set_color_1");

var _emscripten_bind_PdfBookmarkAppearance_get_italic_0 = Module["_emscripten_bind_PdfBookmarkAppearance_get_italic_0"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_get_italic_0");

var _emscripten_bind_PdfBookmarkAppearance_set_italic_1 = Module["_emscripten_bind_PdfBookmarkAppearance_set_italic_1"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_set_italic_1");

var _emscripten_bind_PdfBookmarkAppearance_get_bold_0 = Module["_emscripten_bind_PdfBookmarkAppearance_get_bold_0"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_get_bold_0");

var _emscripten_bind_PdfBookmarkAppearance_set_bold_1 = Module["_emscripten_bind_PdfBookmarkAppearance_set_bold_1"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance_set_bold_1");

var _emscripten_bind_PdfBookmarkAppearance___destroy___0 = Module["_emscripten_bind_PdfBookmarkAppearance___destroy___0"] = createExportWrapper("emscripten_bind_PdfBookmarkAppearance___destroy___0");

var _emscripten_bind_PdfWhitespaceParams_PdfWhitespaceParams_0 = Module["_emscripten_bind_PdfWhitespaceParams_PdfWhitespaceParams_0"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams_PdfWhitespaceParams_0");

var _emscripten_bind_PdfWhitespaceParams_get_width_0 = Module["_emscripten_bind_PdfWhitespaceParams_get_width_0"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams_get_width_0");

var _emscripten_bind_PdfWhitespaceParams_set_width_1 = Module["_emscripten_bind_PdfWhitespaceParams_set_width_1"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams_set_width_1");

var _emscripten_bind_PdfWhitespaceParams_get_height_0 = Module["_emscripten_bind_PdfWhitespaceParams_get_height_0"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams_get_height_0");

var _emscripten_bind_PdfWhitespaceParams_set_height_1 = Module["_emscripten_bind_PdfWhitespaceParams_set_height_1"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams_set_height_1");

var _emscripten_bind_PdfWhitespaceParams___destroy___0 = Module["_emscripten_bind_PdfWhitespaceParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfWhitespaceParams___destroy___0");

var _emscripten_bind_PdfFlattenAnnotsParams_PdfFlattenAnnotsParams_0 = Module["_emscripten_bind_PdfFlattenAnnotsParams_PdfFlattenAnnotsParams_0"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams_PdfFlattenAnnotsParams_0");

var _emscripten_bind_PdfFlattenAnnotsParams_get_page_range_0 = Module["_emscripten_bind_PdfFlattenAnnotsParams_get_page_range_0"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams_get_page_range_0");

var _emscripten_bind_PdfFlattenAnnotsParams_set_page_range_1 = Module["_emscripten_bind_PdfFlattenAnnotsParams_set_page_range_1"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams_set_page_range_1");

var _emscripten_bind_PdfFlattenAnnotsParams_get_subtype_0 = Module["_emscripten_bind_PdfFlattenAnnotsParams_get_subtype_0"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams_get_subtype_0");

var _emscripten_bind_PdfFlattenAnnotsParams_set_subtype_1 = Module["_emscripten_bind_PdfFlattenAnnotsParams_set_subtype_1"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams_set_subtype_1");

var _emscripten_bind_PdfFlattenAnnotsParams___destroy___0 = Module["_emscripten_bind_PdfFlattenAnnotsParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfFlattenAnnotsParams___destroy___0");

var _emscripten_bind_PdfMediaQueryParams_PdfMediaQueryParams_0 = Module["_emscripten_bind_PdfMediaQueryParams_PdfMediaQueryParams_0"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams_PdfMediaQueryParams_0");

var _emscripten_bind_PdfMediaQueryParams_get_type_0 = Module["_emscripten_bind_PdfMediaQueryParams_get_type_0"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams_get_type_0");

var _emscripten_bind_PdfMediaQueryParams_set_type_1 = Module["_emscripten_bind_PdfMediaQueryParams_set_type_1"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams_set_type_1");

var _emscripten_bind_PdfMediaQueryParams_get_min_width_0 = Module["_emscripten_bind_PdfMediaQueryParams_get_min_width_0"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams_get_min_width_0");

var _emscripten_bind_PdfMediaQueryParams_set_min_width_1 = Module["_emscripten_bind_PdfMediaQueryParams_set_min_width_1"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams_set_min_width_1");

var _emscripten_bind_PdfMediaQueryParams___destroy___0 = Module["_emscripten_bind_PdfMediaQueryParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfMediaQueryParams___destroy___0");

var _emscripten_bind_PdfImageParams_PdfImageParams_0 = Module["_emscripten_bind_PdfImageParams_PdfImageParams_0"] = createExportWrapper("emscripten_bind_PdfImageParams_PdfImageParams_0");

var _emscripten_bind_PdfImageParams_get_format_0 = Module["_emscripten_bind_PdfImageParams_get_format_0"] = createExportWrapper("emscripten_bind_PdfImageParams_get_format_0");

var _emscripten_bind_PdfImageParams_set_format_1 = Module["_emscripten_bind_PdfImageParams_set_format_1"] = createExportWrapper("emscripten_bind_PdfImageParams_set_format_1");

var _emscripten_bind_PdfImageParams_get_quality_0 = Module["_emscripten_bind_PdfImageParams_get_quality_0"] = createExportWrapper("emscripten_bind_PdfImageParams_get_quality_0");

var _emscripten_bind_PdfImageParams_set_quality_1 = Module["_emscripten_bind_PdfImageParams_set_quality_1"] = createExportWrapper("emscripten_bind_PdfImageParams_set_quality_1");

var _emscripten_bind_PdfImageParams___destroy___0 = Module["_emscripten_bind_PdfImageParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfImageParams___destroy___0");

var _emscripten_bind_PdfAccessibleParams_PdfAccessibleParams_0 = Module["_emscripten_bind_PdfAccessibleParams_PdfAccessibleParams_0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_PdfAccessibleParams_0");

var _emscripten_bind_PdfAccessibleParams_get_accept_tags_0 = Module["_emscripten_bind_PdfAccessibleParams_get_accept_tags_0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_get_accept_tags_0");

var _emscripten_bind_PdfAccessibleParams_set_accept_tags_1 = Module["_emscripten_bind_PdfAccessibleParams_set_accept_tags_1"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_set_accept_tags_1");

var _emscripten_bind_PdfAccessibleParams_get_embed_fonts_0 = Module["_emscripten_bind_PdfAccessibleParams_get_embed_fonts_0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_get_embed_fonts_0");

var _emscripten_bind_PdfAccessibleParams_set_embed_fonts_1 = Module["_emscripten_bind_PdfAccessibleParams_set_embed_fonts_1"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_set_embed_fonts_1");

var _emscripten_bind_PdfAccessibleParams_get_subset_fonts_0 = Module["_emscripten_bind_PdfAccessibleParams_get_subset_fonts_0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_get_subset_fonts_0");

var _emscripten_bind_PdfAccessibleParams_set_subset_fonts_1 = Module["_emscripten_bind_PdfAccessibleParams_set_subset_fonts_1"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_set_subset_fonts_1");

var _emscripten_bind_PdfAccessibleParams_get_create_bookmarks_0 = Module["_emscripten_bind_PdfAccessibleParams_get_create_bookmarks_0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_get_create_bookmarks_0");

var _emscripten_bind_PdfAccessibleParams_set_create_bookmarks_1 = Module["_emscripten_bind_PdfAccessibleParams_set_create_bookmarks_1"] = createExportWrapper("emscripten_bind_PdfAccessibleParams_set_create_bookmarks_1");

var _emscripten_bind_PdfAccessibleParams___destroy___0 = Module["_emscripten_bind_PdfAccessibleParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfAccessibleParams___destroy___0");

var _emscripten_bind_PdsContentParams_PdsContentParams_0 = Module["_emscripten_bind_PdsContentParams_PdsContentParams_0"] = createExportWrapper("emscripten_bind_PdsContentParams_PdsContentParams_0");

var _emscripten_bind_PdsContentParams_get_flags_0 = Module["_emscripten_bind_PdsContentParams_get_flags_0"] = createExportWrapper("emscripten_bind_PdsContentParams_get_flags_0");

var _emscripten_bind_PdsContentParams_set_flags_1 = Module["_emscripten_bind_PdsContentParams_set_flags_1"] = createExportWrapper("emscripten_bind_PdsContentParams_set_flags_1");

var _emscripten_bind_PdsContentParams_get_form_type_0 = Module["_emscripten_bind_PdsContentParams_get_form_type_0"] = createExportWrapper("emscripten_bind_PdsContentParams_get_form_type_0");

var _emscripten_bind_PdsContentParams_set_form_type_1 = Module["_emscripten_bind_PdsContentParams_set_form_type_1"] = createExportWrapper("emscripten_bind_PdsContentParams_set_form_type_1");

var _emscripten_bind_PdsContentParams_get_bbox_0 = Module["_emscripten_bind_PdsContentParams_get_bbox_0"] = createExportWrapper("emscripten_bind_PdsContentParams_get_bbox_0");

var _emscripten_bind_PdsContentParams_set_bbox_1 = Module["_emscripten_bind_PdsContentParams_set_bbox_1"] = createExportWrapper("emscripten_bind_PdsContentParams_set_bbox_1");

var _emscripten_bind_PdsContentParams_get_matrix_0 = Module["_emscripten_bind_PdsContentParams_get_matrix_0"] = createExportWrapper("emscripten_bind_PdsContentParams_get_matrix_0");

var _emscripten_bind_PdsContentParams_set_matrix_1 = Module["_emscripten_bind_PdsContentParams_set_matrix_1"] = createExportWrapper("emscripten_bind_PdsContentParams_set_matrix_1");

var _emscripten_bind_PdsContentParams___destroy___0 = Module["_emscripten_bind_PdsContentParams___destroy___0"] = createExportWrapper("emscripten_bind_PdsContentParams___destroy___0");

var _emscripten_bind_PdfCancelProc___destroy___0 = Module["_emscripten_bind_PdfCancelProc___destroy___0"] = createExportWrapper("emscripten_bind_PdfCancelProc___destroy___0");

var _emscripten_bind_PdfEventProc___destroy___0 = Module["_emscripten_bind_PdfEventProc___destroy___0"] = createExportWrapper("emscripten_bind_PdfEventProc___destroy___0");

var _emscripten_bind_PdfDigestDataProc___destroy___0 = Module["_emscripten_bind_PdfDigestDataProc___destroy___0"] = createExportWrapper("emscripten_bind_PdfDigestDataProc___destroy___0");

var _emscripten_bind_PsStreamReadProc___destroy___0 = Module["_emscripten_bind_PsStreamReadProc___destroy___0"] = createExportWrapper("emscripten_bind_PsStreamReadProc___destroy___0");

var _emscripten_bind_PsStreamWriteProc___destroy___0 = Module["_emscripten_bind_PsStreamWriteProc___destroy___0"] = createExportWrapper("emscripten_bind_PsStreamWriteProc___destroy___0");

var _emscripten_bind_PsStreamDestroyProc___destroy___0 = Module["_emscripten_bind_PsStreamDestroyProc___destroy___0"] = createExportWrapper("emscripten_bind_PsStreamDestroyProc___destroy___0");

var _emscripten_bind_PsStreamGetSizeProc___destroy___0 = Module["_emscripten_bind_PsStreamGetSizeProc___destroy___0"] = createExportWrapper("emscripten_bind_PsStreamGetSizeProc___destroy___0");

var _emscripten_bind_PdsBoolean_GetValue_0 = Module["_emscripten_bind_PdsBoolean_GetValue_0"] = createExportWrapper("emscripten_bind_PdsBoolean_GetValue_0");

var _emscripten_bind_PdsBoolean_GetObjectType_0 = Module["_emscripten_bind_PdsBoolean_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsBoolean_GetObjectType_0");

var _emscripten_bind_PdsBoolean_GetId_0 = Module["_emscripten_bind_PdsBoolean_GetId_0"] = createExportWrapper("emscripten_bind_PdsBoolean_GetId_0");

var _emscripten_bind_PdsBoolean___destroy___0 = Module["_emscripten_bind_PdsBoolean___destroy___0"] = createExportWrapper("emscripten_bind_PdsBoolean___destroy___0");

var _emscripten_bind_PdsNumber_IsIntegerValue_0 = Module["_emscripten_bind_PdsNumber_IsIntegerValue_0"] = createExportWrapper("emscripten_bind_PdsNumber_IsIntegerValue_0");

var _emscripten_bind_PdsNumber_GetIntegerValue_0 = Module["_emscripten_bind_PdsNumber_GetIntegerValue_0"] = createExportWrapper("emscripten_bind_PdsNumber_GetIntegerValue_0");

var _emscripten_bind_PdsNumber_GetValue_0 = Module["_emscripten_bind_PdsNumber_GetValue_0"] = createExportWrapper("emscripten_bind_PdsNumber_GetValue_0");

var _emscripten_bind_PdsNumber_GetObjectType_0 = Module["_emscripten_bind_PdsNumber_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsNumber_GetObjectType_0");

var _emscripten_bind_PdsNumber_GetId_0 = Module["_emscripten_bind_PdsNumber_GetId_0"] = createExportWrapper("emscripten_bind_PdsNumber_GetId_0");

var _emscripten_bind_PdsNumber___destroy___0 = Module["_emscripten_bind_PdsNumber___destroy___0"] = createExportWrapper("emscripten_bind_PdsNumber___destroy___0");

var _emscripten_bind_PdsString_GetValue_2 = Module["_emscripten_bind_PdsString_GetValue_2"] = createExportWrapper("emscripten_bind_PdsString_GetValue_2");

var _emscripten_bind_PdsString_GetText_2 = Module["_emscripten_bind_PdsString_GetText_2"] = createExportWrapper("emscripten_bind_PdsString_GetText_2");

var _emscripten_bind_PdsString_GetObjectType_0 = Module["_emscripten_bind_PdsString_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsString_GetObjectType_0");

var _emscripten_bind_PdsString_GetId_0 = Module["_emscripten_bind_PdsString_GetId_0"] = createExportWrapper("emscripten_bind_PdsString_GetId_0");

var _emscripten_bind_PdsString___destroy___0 = Module["_emscripten_bind_PdsString___destroy___0"] = createExportWrapper("emscripten_bind_PdsString___destroy___0");

var _emscripten_bind_PdsName_GetValue_2 = Module["_emscripten_bind_PdsName_GetValue_2"] = createExportWrapper("emscripten_bind_PdsName_GetValue_2");

var _emscripten_bind_PdsName_GetText_2 = Module["_emscripten_bind_PdsName_GetText_2"] = createExportWrapper("emscripten_bind_PdsName_GetText_2");

var _emscripten_bind_PdsName_GetObjectType_0 = Module["_emscripten_bind_PdsName_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsName_GetObjectType_0");

var _emscripten_bind_PdsName_GetId_0 = Module["_emscripten_bind_PdsName_GetId_0"] = createExportWrapper("emscripten_bind_PdsName_GetId_0");

var _emscripten_bind_PdsName___destroy___0 = Module["_emscripten_bind_PdsName___destroy___0"] = createExportWrapper("emscripten_bind_PdsName___destroy___0");

var _emscripten_bind_PdsArray_GetNumObjects_0 = Module["_emscripten_bind_PdsArray_GetNumObjects_0"] = createExportWrapper("emscripten_bind_PdsArray_GetNumObjects_0");

var _emscripten_bind_PdsArray_Get_1 = Module["_emscripten_bind_PdsArray_Get_1"] = createExportWrapper("emscripten_bind_PdsArray_Get_1");

var _emscripten_bind_PdsArray_Put_2 = Module["_emscripten_bind_PdsArray_Put_2"] = createExportWrapper("emscripten_bind_PdsArray_Put_2");

var _emscripten_bind_PdsArray_PutNumber_2 = Module["_emscripten_bind_PdsArray_PutNumber_2"] = createExportWrapper("emscripten_bind_PdsArray_PutNumber_2");

var _emscripten_bind_PdsArray_PutName_2 = Module["_emscripten_bind_PdsArray_PutName_2"] = createExportWrapper("emscripten_bind_PdsArray_PutName_2");

var _emscripten_bind_PdsArray_Insert_2 = Module["_emscripten_bind_PdsArray_Insert_2"] = createExportWrapper("emscripten_bind_PdsArray_Insert_2");

var _emscripten_bind_PdsArray_InsertDict_1 = Module["_emscripten_bind_PdsArray_InsertDict_1"] = createExportWrapper("emscripten_bind_PdsArray_InsertDict_1");

var _emscripten_bind_PdsArray_InsertArray_1 = Module["_emscripten_bind_PdsArray_InsertArray_1"] = createExportWrapper("emscripten_bind_PdsArray_InsertArray_1");

var _emscripten_bind_PdsArray_RemoveNth_1 = Module["_emscripten_bind_PdsArray_RemoveNth_1"] = createExportWrapper("emscripten_bind_PdsArray_RemoveNth_1");

var _emscripten_bind_PdsArray_GetDictionary_1 = Module["_emscripten_bind_PdsArray_GetDictionary_1"] = createExportWrapper("emscripten_bind_PdsArray_GetDictionary_1");

var _emscripten_bind_PdsArray_GetArray_1 = Module["_emscripten_bind_PdsArray_GetArray_1"] = createExportWrapper("emscripten_bind_PdsArray_GetArray_1");

var _emscripten_bind_PdsArray_GetStream_1 = Module["_emscripten_bind_PdsArray_GetStream_1"] = createExportWrapper("emscripten_bind_PdsArray_GetStream_1");

var _emscripten_bind_PdsArray_GetString_3 = Module["_emscripten_bind_PdsArray_GetString_3"] = createExportWrapper("emscripten_bind_PdsArray_GetString_3");

var _emscripten_bind_PdsArray_GetText_3 = Module["_emscripten_bind_PdsArray_GetText_3"] = createExportWrapper("emscripten_bind_PdsArray_GetText_3");

var _emscripten_bind_PdsArray_GetNumber_1 = Module["_emscripten_bind_PdsArray_GetNumber_1"] = createExportWrapper("emscripten_bind_PdsArray_GetNumber_1");

var _emscripten_bind_PdsArray_GetInteger_1 = Module["_emscripten_bind_PdsArray_GetInteger_1"] = createExportWrapper("emscripten_bind_PdsArray_GetInteger_1");

var _emscripten_bind_PdsArray_GetObjectType_0 = Module["_emscripten_bind_PdsArray_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsArray_GetObjectType_0");

var _emscripten_bind_PdsArray_GetId_0 = Module["_emscripten_bind_PdsArray_GetId_0"] = createExportWrapper("emscripten_bind_PdsArray_GetId_0");

var _emscripten_bind_PdsArray___destroy___0 = Module["_emscripten_bind_PdsArray___destroy___0"] = createExportWrapper("emscripten_bind_PdsArray___destroy___0");

var _emscripten_bind_PdsDictionary_Known_1 = Module["_emscripten_bind_PdsDictionary_Known_1"] = createExportWrapper("emscripten_bind_PdsDictionary_Known_1");

var _emscripten_bind_PdsDictionary_GetNumKeys_0 = Module["_emscripten_bind_PdsDictionary_GetNumKeys_0"] = createExportWrapper("emscripten_bind_PdsDictionary_GetNumKeys_0");

var _emscripten_bind_PdsDictionary_GetKey_3 = Module["_emscripten_bind_PdsDictionary_GetKey_3"] = createExportWrapper("emscripten_bind_PdsDictionary_GetKey_3");

var _emscripten_bind_PdsDictionary_Get_1 = Module["_emscripten_bind_PdsDictionary_Get_1"] = createExportWrapper("emscripten_bind_PdsDictionary_Get_1");

var _emscripten_bind_PdsDictionary_Put_2 = Module["_emscripten_bind_PdsDictionary_Put_2"] = createExportWrapper("emscripten_bind_PdsDictionary_Put_2");

var _emscripten_bind_PdsDictionary_PutBool_2 = Module["_emscripten_bind_PdsDictionary_PutBool_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutBool_2");

var _emscripten_bind_PdsDictionary_PutName_2 = Module["_emscripten_bind_PdsDictionary_PutName_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutName_2");

var _emscripten_bind_PdsDictionary_PutString_2 = Module["_emscripten_bind_PdsDictionary_PutString_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutString_2");

var _emscripten_bind_PdsDictionary_PutNumber_2 = Module["_emscripten_bind_PdsDictionary_PutNumber_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutNumber_2");

var _emscripten_bind_PdsDictionary_PutRect_2 = Module["_emscripten_bind_PdsDictionary_PutRect_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutRect_2");

var _emscripten_bind_PdsDictionary_PutMatrix_2 = Module["_emscripten_bind_PdsDictionary_PutMatrix_2"] = createExportWrapper("emscripten_bind_PdsDictionary_PutMatrix_2");

var _emscripten_bind_PdsDictionary_PutDict_1 = Module["_emscripten_bind_PdsDictionary_PutDict_1"] = createExportWrapper("emscripten_bind_PdsDictionary_PutDict_1");

var _emscripten_bind_PdsDictionary_PutArray_1 = Module["_emscripten_bind_PdsDictionary_PutArray_1"] = createExportWrapper("emscripten_bind_PdsDictionary_PutArray_1");

var _emscripten_bind_PdsDictionary_GetDictionary_1 = Module["_emscripten_bind_PdsDictionary_GetDictionary_1"] = createExportWrapper("emscripten_bind_PdsDictionary_GetDictionary_1");

var _emscripten_bind_PdsDictionary_GetArray_1 = Module["_emscripten_bind_PdsDictionary_GetArray_1"] = createExportWrapper("emscripten_bind_PdsDictionary_GetArray_1");

var _emscripten_bind_PdsDictionary_GetStream_1 = Module["_emscripten_bind_PdsDictionary_GetStream_1"] = createExportWrapper("emscripten_bind_PdsDictionary_GetStream_1");

var _emscripten_bind_PdsDictionary_GetString_3 = Module["_emscripten_bind_PdsDictionary_GetString_3"] = createExportWrapper("emscripten_bind_PdsDictionary_GetString_3");

var _emscripten_bind_PdsDictionary_GetText_3 = Module["_emscripten_bind_PdsDictionary_GetText_3"] = createExportWrapper("emscripten_bind_PdsDictionary_GetText_3");

var _emscripten_bind_PdsDictionary_GetNumber_1 = Module["_emscripten_bind_PdsDictionary_GetNumber_1"] = createExportWrapper("emscripten_bind_PdsDictionary_GetNumber_1");

var _emscripten_bind_PdsDictionary_GetInteger_2 = Module["_emscripten_bind_PdsDictionary_GetInteger_2"] = createExportWrapper("emscripten_bind_PdsDictionary_GetInteger_2");

var _emscripten_bind_PdsDictionary_GetBoolean_2 = Module["_emscripten_bind_PdsDictionary_GetBoolean_2"] = createExportWrapper("emscripten_bind_PdsDictionary_GetBoolean_2");

var _emscripten_bind_PdsDictionary_GetObjectType_0 = Module["_emscripten_bind_PdsDictionary_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsDictionary_GetObjectType_0");

var _emscripten_bind_PdsDictionary_GetId_0 = Module["_emscripten_bind_PdsDictionary_GetId_0"] = createExportWrapper("emscripten_bind_PdsDictionary_GetId_0");

var _emscripten_bind_PdsDictionary___destroy___0 = Module["_emscripten_bind_PdsDictionary___destroy___0"] = createExportWrapper("emscripten_bind_PdsDictionary___destroy___0");

var _emscripten_bind_PdsStream_GetStreamDict_0 = Module["_emscripten_bind_PdsStream_GetStreamDict_0"] = createExportWrapper("emscripten_bind_PdsStream_GetStreamDict_0");

var _emscripten_bind_PdsStream_GetRawDataSize_0 = Module["_emscripten_bind_PdsStream_GetRawDataSize_0"] = createExportWrapper("emscripten_bind_PdsStream_GetRawDataSize_0");

var _emscripten_bind_PdsStream_IsEof_0 = Module["_emscripten_bind_PdsStream_IsEof_0"] = createExportWrapper("emscripten_bind_PdsStream_IsEof_0");

var _emscripten_bind_PdsStream_GetSize_0 = Module["_emscripten_bind_PdsStream_GetSize_0"] = createExportWrapper("emscripten_bind_PdsStream_GetSize_0");

var _emscripten_bind_PdsStream_Read_3 = Module["_emscripten_bind_PdsStream_Read_3"] = createExportWrapper("emscripten_bind_PdsStream_Read_3");

var _emscripten_bind_PdsStream_GetPos_0 = Module["_emscripten_bind_PdsStream_GetPos_0"] = createExportWrapper("emscripten_bind_PdsStream_GetPos_0");

var _emscripten_bind_PdsStream_GetObjectType_0 = Module["_emscripten_bind_PdsStream_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsStream_GetObjectType_0");

var _emscripten_bind_PdsStream_GetId_0 = Module["_emscripten_bind_PdsStream_GetId_0"] = createExportWrapper("emscripten_bind_PdsStream_GetId_0");

var _emscripten_bind_PdsStream___destroy___0 = Module["_emscripten_bind_PdsStream___destroy___0"] = createExportWrapper("emscripten_bind_PdsStream___destroy___0");

var _emscripten_bind_PdsNull_GetObjectType_0 = Module["_emscripten_bind_PdsNull_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsNull_GetObjectType_0");

var _emscripten_bind_PdsNull_GetId_0 = Module["_emscripten_bind_PdsNull_GetId_0"] = createExportWrapper("emscripten_bind_PdsNull_GetId_0");

var _emscripten_bind_PdsNull___destroy___0 = Module["_emscripten_bind_PdsNull___destroy___0"] = createExportWrapper("emscripten_bind_PdsNull___destroy___0");

var _emscripten_bind_PdsContent_GetNumObjects_0 = Module["_emscripten_bind_PdsContent_GetNumObjects_0"] = createExportWrapper("emscripten_bind_PdsContent_GetNumObjects_0");

var _emscripten_bind_PdsContent_GetObject_1 = Module["_emscripten_bind_PdsContent_GetObject_1"] = createExportWrapper("emscripten_bind_PdsContent_GetObject_1");

var _emscripten_bind_PdsContent_Release_0 = Module["_emscripten_bind_PdsContent_Release_0"] = createExportWrapper("emscripten_bind_PdsContent_Release_0");

var _emscripten_bind_PdsContent___destroy___0 = Module["_emscripten_bind_PdsContent___destroy___0"] = createExportWrapper("emscripten_bind_PdsContent___destroy___0");

var _emscripten_bind_PdsText_GetText_2 = Module["_emscripten_bind_PdsText_GetText_2"] = createExportWrapper("emscripten_bind_PdsText_GetText_2");

var _emscripten_bind_PdsText_GetTextState_2 = Module["_emscripten_bind_PdsText_GetTextState_2"] = createExportWrapper("emscripten_bind_PdsText_GetTextState_2");

var _emscripten_bind_PdsText_GetObjectType_0 = Module["_emscripten_bind_PdsText_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsText_GetObjectType_0");

var _emscripten_bind_PdsText_GetBBox_1 = Module["_emscripten_bind_PdsText_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsText_GetBBox_1");

var _emscripten_bind_PdsText_GetId_0 = Module["_emscripten_bind_PdsText_GetId_0"] = createExportWrapper("emscripten_bind_PdsText_GetId_0");

var _emscripten_bind_PdsText_SetRender_1 = Module["_emscripten_bind_PdsText_SetRender_1"] = createExportWrapper("emscripten_bind_PdsText_SetRender_1");

var _emscripten_bind_PdsText_GetStructObject_1 = Module["_emscripten_bind_PdsText_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsText_GetStructObject_1");

var _emscripten_bind_PdsText_GetContentMark_0 = Module["_emscripten_bind_PdsText_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsText_GetContentMark_0");

var _emscripten_bind_PdsText_GetPage_0 = Module["_emscripten_bind_PdsText_GetPage_0"] = createExportWrapper("emscripten_bind_PdsText_GetPage_0");

var _emscripten_bind_PdsText_GetGState_1 = Module["_emscripten_bind_PdsText_GetGState_1"] = createExportWrapper("emscripten_bind_PdsText_GetGState_1");

var _emscripten_bind_PdsText___destroy___0 = Module["_emscripten_bind_PdsText___destroy___0"] = createExportWrapper("emscripten_bind_PdsText___destroy___0");

var _emscripten_bind_PdsForm_AcquireContent_0 = Module["_emscripten_bind_PdsForm_AcquireContent_0"] = createExportWrapper("emscripten_bind_PdsForm_AcquireContent_0");

var _emscripten_bind_PdsForm_GetObjectType_0 = Module["_emscripten_bind_PdsForm_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsForm_GetObjectType_0");

var _emscripten_bind_PdsForm_GetBBox_1 = Module["_emscripten_bind_PdsForm_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsForm_GetBBox_1");

var _emscripten_bind_PdsForm_GetId_0 = Module["_emscripten_bind_PdsForm_GetId_0"] = createExportWrapper("emscripten_bind_PdsForm_GetId_0");

var _emscripten_bind_PdsForm_SetRender_1 = Module["_emscripten_bind_PdsForm_SetRender_1"] = createExportWrapper("emscripten_bind_PdsForm_SetRender_1");

var _emscripten_bind_PdsForm_GetStructObject_1 = Module["_emscripten_bind_PdsForm_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsForm_GetStructObject_1");

var _emscripten_bind_PdsForm_GetContentMark_0 = Module["_emscripten_bind_PdsForm_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsForm_GetContentMark_0");

var _emscripten_bind_PdsForm_GetPage_0 = Module["_emscripten_bind_PdsForm_GetPage_0"] = createExportWrapper("emscripten_bind_PdsForm_GetPage_0");

var _emscripten_bind_PdsForm_GetGState_1 = Module["_emscripten_bind_PdsForm_GetGState_1"] = createExportWrapper("emscripten_bind_PdsForm_GetGState_1");

var _emscripten_bind_PdsForm___destroy___0 = Module["_emscripten_bind_PdsForm___destroy___0"] = createExportWrapper("emscripten_bind_PdsForm___destroy___0");

var _emscripten_bind_PdsPath_GetNumPathPoints_0 = Module["_emscripten_bind_PdsPath_GetNumPathPoints_0"] = createExportWrapper("emscripten_bind_PdsPath_GetNumPathPoints_0");

var _emscripten_bind_PdsPath_GetPathPoint_1 = Module["_emscripten_bind_PdsPath_GetPathPoint_1"] = createExportWrapper("emscripten_bind_PdsPath_GetPathPoint_1");

var _emscripten_bind_PdsPath_GetObjectType_0 = Module["_emscripten_bind_PdsPath_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsPath_GetObjectType_0");

var _emscripten_bind_PdsPath_GetBBox_1 = Module["_emscripten_bind_PdsPath_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsPath_GetBBox_1");

var _emscripten_bind_PdsPath_GetId_0 = Module["_emscripten_bind_PdsPath_GetId_0"] = createExportWrapper("emscripten_bind_PdsPath_GetId_0");

var _emscripten_bind_PdsPath_SetRender_1 = Module["_emscripten_bind_PdsPath_SetRender_1"] = createExportWrapper("emscripten_bind_PdsPath_SetRender_1");

var _emscripten_bind_PdsPath_GetStructObject_1 = Module["_emscripten_bind_PdsPath_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsPath_GetStructObject_1");

var _emscripten_bind_PdsPath_GetContentMark_0 = Module["_emscripten_bind_PdsPath_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsPath_GetContentMark_0");

var _emscripten_bind_PdsPath_GetPage_0 = Module["_emscripten_bind_PdsPath_GetPage_0"] = createExportWrapper("emscripten_bind_PdsPath_GetPage_0");

var _emscripten_bind_PdsPath_GetGState_1 = Module["_emscripten_bind_PdsPath_GetGState_1"] = createExportWrapper("emscripten_bind_PdsPath_GetGState_1");

var _emscripten_bind_PdsPath___destroy___0 = Module["_emscripten_bind_PdsPath___destroy___0"] = createExportWrapper("emscripten_bind_PdsPath___destroy___0");

var _emscripten_bind_PdsPathPoint_GetType_0 = Module["_emscripten_bind_PdsPathPoint_GetType_0"] = createExportWrapper("emscripten_bind_PdsPathPoint_GetType_0");

var _emscripten_bind_PdsPathPoint_GetPoint_1 = Module["_emscripten_bind_PdsPathPoint_GetPoint_1"] = createExportWrapper("emscripten_bind_PdsPathPoint_GetPoint_1");

var _emscripten_bind_PdsPathPoint_IsClosed_0 = Module["_emscripten_bind_PdsPathPoint_IsClosed_0"] = createExportWrapper("emscripten_bind_PdsPathPoint_IsClosed_0");

var _emscripten_bind_PdsPathPoint___destroy___0 = Module["_emscripten_bind_PdsPathPoint___destroy___0"] = createExportWrapper("emscripten_bind_PdsPathPoint___destroy___0");

var _emscripten_bind_PdsImage_GetDataStm_0 = Module["_emscripten_bind_PdsImage_GetDataStm_0"] = createExportWrapper("emscripten_bind_PdsImage_GetDataStm_0");

var _emscripten_bind_PdsImage_GetObjectType_0 = Module["_emscripten_bind_PdsImage_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsImage_GetObjectType_0");

var _emscripten_bind_PdsImage_GetBBox_1 = Module["_emscripten_bind_PdsImage_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsImage_GetBBox_1");

var _emscripten_bind_PdsImage_GetId_0 = Module["_emscripten_bind_PdsImage_GetId_0"] = createExportWrapper("emscripten_bind_PdsImage_GetId_0");

var _emscripten_bind_PdsImage_SetRender_1 = Module["_emscripten_bind_PdsImage_SetRender_1"] = createExportWrapper("emscripten_bind_PdsImage_SetRender_1");

var _emscripten_bind_PdsImage_GetStructObject_1 = Module["_emscripten_bind_PdsImage_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsImage_GetStructObject_1");

var _emscripten_bind_PdsImage_GetContentMark_0 = Module["_emscripten_bind_PdsImage_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsImage_GetContentMark_0");

var _emscripten_bind_PdsImage_GetPage_0 = Module["_emscripten_bind_PdsImage_GetPage_0"] = createExportWrapper("emscripten_bind_PdsImage_GetPage_0");

var _emscripten_bind_PdsImage_GetGState_1 = Module["_emscripten_bind_PdsImage_GetGState_1"] = createExportWrapper("emscripten_bind_PdsImage_GetGState_1");

var _emscripten_bind_PdsImage___destroy___0 = Module["_emscripten_bind_PdsImage___destroy___0"] = createExportWrapper("emscripten_bind_PdsImage___destroy___0");

var _emscripten_bind_PdsShading_GetObjectType_0 = Module["_emscripten_bind_PdsShading_GetObjectType_0"] = createExportWrapper("emscripten_bind_PdsShading_GetObjectType_0");

var _emscripten_bind_PdsShading_GetBBox_1 = Module["_emscripten_bind_PdsShading_GetBBox_1"] = createExportWrapper("emscripten_bind_PdsShading_GetBBox_1");

var _emscripten_bind_PdsShading_GetId_0 = Module["_emscripten_bind_PdsShading_GetId_0"] = createExportWrapper("emscripten_bind_PdsShading_GetId_0");

var _emscripten_bind_PdsShading_SetRender_1 = Module["_emscripten_bind_PdsShading_SetRender_1"] = createExportWrapper("emscripten_bind_PdsShading_SetRender_1");

var _emscripten_bind_PdsShading_GetStructObject_1 = Module["_emscripten_bind_PdsShading_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdsShading_GetStructObject_1");

var _emscripten_bind_PdsShading_GetContentMark_0 = Module["_emscripten_bind_PdsShading_GetContentMark_0"] = createExportWrapper("emscripten_bind_PdsShading_GetContentMark_0");

var _emscripten_bind_PdsShading_GetPage_0 = Module["_emscripten_bind_PdsShading_GetPage_0"] = createExportWrapper("emscripten_bind_PdsShading_GetPage_0");

var _emscripten_bind_PdsShading_GetGState_1 = Module["_emscripten_bind_PdsShading_GetGState_1"] = createExportWrapper("emscripten_bind_PdsShading_GetGState_1");

var _emscripten_bind_PdsShading___destroy___0 = Module["_emscripten_bind_PdsShading___destroy___0"] = createExportWrapper("emscripten_bind_PdsShading___destroy___0");

var _emscripten_bind_PdsContentMark_GetNumTags_0 = Module["_emscripten_bind_PdsContentMark_GetNumTags_0"] = createExportWrapper("emscripten_bind_PdsContentMark_GetNumTags_0");

var _emscripten_bind_PdsContentMark_GetTagName_3 = Module["_emscripten_bind_PdsContentMark_GetTagName_3"] = createExportWrapper("emscripten_bind_PdsContentMark_GetTagName_3");

var _emscripten_bind_PdsContentMark_GetTagObject_1 = Module["_emscripten_bind_PdsContentMark_GetTagObject_1"] = createExportWrapper("emscripten_bind_PdsContentMark_GetTagObject_1");

var _emscripten_bind_PdsContentMark_GetTagMcid_0 = Module["_emscripten_bind_PdsContentMark_GetTagMcid_0"] = createExportWrapper("emscripten_bind_PdsContentMark_GetTagMcid_0");

var _emscripten_bind_PdsContentMark_GetTagArtifact_0 = Module["_emscripten_bind_PdsContentMark_GetTagArtifact_0"] = createExportWrapper("emscripten_bind_PdsContentMark_GetTagArtifact_0");

var _emscripten_bind_PdsContentMark_AddTag_3 = Module["_emscripten_bind_PdsContentMark_AddTag_3"] = createExportWrapper("emscripten_bind_PdsContentMark_AddTag_3");

var _emscripten_bind_PdsContentMark_RemoveTag_1 = Module["_emscripten_bind_PdsContentMark_RemoveTag_1"] = createExportWrapper("emscripten_bind_PdsContentMark_RemoveTag_1");

var _emscripten_bind_PdsContentMark___destroy___0 = Module["_emscripten_bind_PdsContentMark___destroy___0"] = createExportWrapper("emscripten_bind_PdsContentMark___destroy___0");

var _emscripten_bind_PdeList_GetType_0 = Module["_emscripten_bind_PdeList_GetType_0"] = createExportWrapper("emscripten_bind_PdeList_GetType_0");

var _emscripten_bind_PdeList_GetBBox_1 = Module["_emscripten_bind_PdeList_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeList_GetBBox_1");

var _emscripten_bind_PdeList_SetBBox_1 = Module["_emscripten_bind_PdeList_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeList_SetBBox_1");

var _emscripten_bind_PdeList_GetId_0 = Module["_emscripten_bind_PdeList_GetId_0"] = createExportWrapper("emscripten_bind_PdeList_GetId_0");

var _emscripten_bind_PdeList_GetGraphicState_1 = Module["_emscripten_bind_PdeList_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeList_GetGraphicState_1");

var _emscripten_bind_PdeList_GetNumChildren_0 = Module["_emscripten_bind_PdeList_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeList_GetNumChildren_0");

var _emscripten_bind_PdeList_GetChild_1 = Module["_emscripten_bind_PdeList_GetChild_1"] = createExportWrapper("emscripten_bind_PdeList_GetChild_1");

var _emscripten_bind_PdeList_GetAlignment_0 = Module["_emscripten_bind_PdeList_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeList_GetAlignment_0");

var _emscripten_bind_PdeList_GetAngle_0 = Module["_emscripten_bind_PdeList_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeList_GetAngle_0");

var _emscripten_bind_PdeList_SetRender_1 = Module["_emscripten_bind_PdeList_SetRender_1"] = createExportWrapper("emscripten_bind_PdeList_SetRender_1");

var _emscripten_bind_PdeList_SetData_1 = Module["_emscripten_bind_PdeList_SetData_1"] = createExportWrapper("emscripten_bind_PdeList_SetData_1");

var _emscripten_bind_PdeList_GetData_0 = Module["_emscripten_bind_PdeList_GetData_0"] = createExportWrapper("emscripten_bind_PdeList_GetData_0");

var _emscripten_bind_PdeList_SetAlt_1 = Module["_emscripten_bind_PdeList_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeList_SetAlt_1");

var _emscripten_bind_PdeList_SetActualText_1 = Module["_emscripten_bind_PdeList_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeList_SetActualText_1");

var _emscripten_bind_PdeList_GetFlags_0 = Module["_emscripten_bind_PdeList_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeList_GetFlags_0");

var _emscripten_bind_PdeList_SetFlags_1 = Module["_emscripten_bind_PdeList_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeList_SetFlags_1");

var _emscripten_bind_PdeList_GetNumPageObjects_0 = Module["_emscripten_bind_PdeList_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeList_GetNumPageObjects_0");

var _emscripten_bind_PdeList_GetPageObject_1 = Module["_emscripten_bind_PdeList_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeList_GetPageObject_1");

var _emscripten_bind_PdeList_GetPageMap_0 = Module["_emscripten_bind_PdeList_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeList_GetPageMap_0");

var _emscripten_bind_PdeList___destroy___0 = Module["_emscripten_bind_PdeList___destroy___0"] = createExportWrapper("emscripten_bind_PdeList___destroy___0");

var _emscripten_bind_PdeToc_GetType_0 = Module["_emscripten_bind_PdeToc_GetType_0"] = createExportWrapper("emscripten_bind_PdeToc_GetType_0");

var _emscripten_bind_PdeToc_GetBBox_1 = Module["_emscripten_bind_PdeToc_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeToc_GetBBox_1");

var _emscripten_bind_PdeToc_SetBBox_1 = Module["_emscripten_bind_PdeToc_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeToc_SetBBox_1");

var _emscripten_bind_PdeToc_GetId_0 = Module["_emscripten_bind_PdeToc_GetId_0"] = createExportWrapper("emscripten_bind_PdeToc_GetId_0");

var _emscripten_bind_PdeToc_GetGraphicState_1 = Module["_emscripten_bind_PdeToc_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeToc_GetGraphicState_1");

var _emscripten_bind_PdeToc_GetNumChildren_0 = Module["_emscripten_bind_PdeToc_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeToc_GetNumChildren_0");

var _emscripten_bind_PdeToc_GetChild_1 = Module["_emscripten_bind_PdeToc_GetChild_1"] = createExportWrapper("emscripten_bind_PdeToc_GetChild_1");

var _emscripten_bind_PdeToc_GetAlignment_0 = Module["_emscripten_bind_PdeToc_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeToc_GetAlignment_0");

var _emscripten_bind_PdeToc_GetAngle_0 = Module["_emscripten_bind_PdeToc_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeToc_GetAngle_0");

var _emscripten_bind_PdeToc_SetRender_1 = Module["_emscripten_bind_PdeToc_SetRender_1"] = createExportWrapper("emscripten_bind_PdeToc_SetRender_1");

var _emscripten_bind_PdeToc_SetData_1 = Module["_emscripten_bind_PdeToc_SetData_1"] = createExportWrapper("emscripten_bind_PdeToc_SetData_1");

var _emscripten_bind_PdeToc_GetData_0 = Module["_emscripten_bind_PdeToc_GetData_0"] = createExportWrapper("emscripten_bind_PdeToc_GetData_0");

var _emscripten_bind_PdeToc_SetAlt_1 = Module["_emscripten_bind_PdeToc_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeToc_SetAlt_1");

var _emscripten_bind_PdeToc_SetActualText_1 = Module["_emscripten_bind_PdeToc_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeToc_SetActualText_1");

var _emscripten_bind_PdeToc_GetFlags_0 = Module["_emscripten_bind_PdeToc_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeToc_GetFlags_0");

var _emscripten_bind_PdeToc_SetFlags_1 = Module["_emscripten_bind_PdeToc_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeToc_SetFlags_1");

var _emscripten_bind_PdeToc_GetNumPageObjects_0 = Module["_emscripten_bind_PdeToc_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeToc_GetNumPageObjects_0");

var _emscripten_bind_PdeToc_GetPageObject_1 = Module["_emscripten_bind_PdeToc_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeToc_GetPageObject_1");

var _emscripten_bind_PdeToc_GetPageMap_0 = Module["_emscripten_bind_PdeToc_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeToc_GetPageMap_0");

var _emscripten_bind_PdeToc___destroy___0 = Module["_emscripten_bind_PdeToc___destroy___0"] = createExportWrapper("emscripten_bind_PdeToc___destroy___0");

var _emscripten_bind_PdeFormField_GetAnnot_0 = Module["_emscripten_bind_PdeFormField_GetAnnot_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetAnnot_0");

var _emscripten_bind_PdeFormField_GetType_0 = Module["_emscripten_bind_PdeFormField_GetType_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetType_0");

var _emscripten_bind_PdeFormField_GetBBox_1 = Module["_emscripten_bind_PdeFormField_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeFormField_GetBBox_1");

var _emscripten_bind_PdeFormField_SetBBox_1 = Module["_emscripten_bind_PdeFormField_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetBBox_1");

var _emscripten_bind_PdeFormField_GetId_0 = Module["_emscripten_bind_PdeFormField_GetId_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetId_0");

var _emscripten_bind_PdeFormField_GetGraphicState_1 = Module["_emscripten_bind_PdeFormField_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeFormField_GetGraphicState_1");

var _emscripten_bind_PdeFormField_GetNumChildren_0 = Module["_emscripten_bind_PdeFormField_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetNumChildren_0");

var _emscripten_bind_PdeFormField_GetChild_1 = Module["_emscripten_bind_PdeFormField_GetChild_1"] = createExportWrapper("emscripten_bind_PdeFormField_GetChild_1");

var _emscripten_bind_PdeFormField_GetAlignment_0 = Module["_emscripten_bind_PdeFormField_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetAlignment_0");

var _emscripten_bind_PdeFormField_GetAngle_0 = Module["_emscripten_bind_PdeFormField_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetAngle_0");

var _emscripten_bind_PdeFormField_SetRender_1 = Module["_emscripten_bind_PdeFormField_SetRender_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetRender_1");

var _emscripten_bind_PdeFormField_SetData_1 = Module["_emscripten_bind_PdeFormField_SetData_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetData_1");

var _emscripten_bind_PdeFormField_GetData_0 = Module["_emscripten_bind_PdeFormField_GetData_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetData_0");

var _emscripten_bind_PdeFormField_SetAlt_1 = Module["_emscripten_bind_PdeFormField_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetAlt_1");

var _emscripten_bind_PdeFormField_SetActualText_1 = Module["_emscripten_bind_PdeFormField_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetActualText_1");

var _emscripten_bind_PdeFormField_GetFlags_0 = Module["_emscripten_bind_PdeFormField_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetFlags_0");

var _emscripten_bind_PdeFormField_SetFlags_1 = Module["_emscripten_bind_PdeFormField_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeFormField_SetFlags_1");

var _emscripten_bind_PdeFormField_GetNumPageObjects_0 = Module["_emscripten_bind_PdeFormField_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetNumPageObjects_0");

var _emscripten_bind_PdeFormField_GetPageObject_1 = Module["_emscripten_bind_PdeFormField_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeFormField_GetPageObject_1");

var _emscripten_bind_PdeFormField_GetPageMap_0 = Module["_emscripten_bind_PdeFormField_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeFormField_GetPageMap_0");

var _emscripten_bind_PdeFormField___destroy___0 = Module["_emscripten_bind_PdeFormField___destroy___0"] = createExportWrapper("emscripten_bind_PdeFormField___destroy___0");

var _emscripten_bind_PdeImage_GetImageType_0 = Module["_emscripten_bind_PdeImage_GetImageType_0"] = createExportWrapper("emscripten_bind_PdeImage_GetImageType_0");

var _emscripten_bind_PdeImage_GetCaption_0 = Module["_emscripten_bind_PdeImage_GetCaption_0"] = createExportWrapper("emscripten_bind_PdeImage_GetCaption_0");

var _emscripten_bind_PdeImage_GetType_0 = Module["_emscripten_bind_PdeImage_GetType_0"] = createExportWrapper("emscripten_bind_PdeImage_GetType_0");

var _emscripten_bind_PdeImage_GetBBox_1 = Module["_emscripten_bind_PdeImage_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeImage_GetBBox_1");

var _emscripten_bind_PdeImage_SetBBox_1 = Module["_emscripten_bind_PdeImage_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeImage_SetBBox_1");

var _emscripten_bind_PdeImage_GetId_0 = Module["_emscripten_bind_PdeImage_GetId_0"] = createExportWrapper("emscripten_bind_PdeImage_GetId_0");

var _emscripten_bind_PdeImage_GetGraphicState_1 = Module["_emscripten_bind_PdeImage_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeImage_GetGraphicState_1");

var _emscripten_bind_PdeImage_GetNumChildren_0 = Module["_emscripten_bind_PdeImage_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeImage_GetNumChildren_0");

var _emscripten_bind_PdeImage_GetChild_1 = Module["_emscripten_bind_PdeImage_GetChild_1"] = createExportWrapper("emscripten_bind_PdeImage_GetChild_1");

var _emscripten_bind_PdeImage_GetAlignment_0 = Module["_emscripten_bind_PdeImage_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeImage_GetAlignment_0");

var _emscripten_bind_PdeImage_GetAngle_0 = Module["_emscripten_bind_PdeImage_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeImage_GetAngle_0");

var _emscripten_bind_PdeImage_SetRender_1 = Module["_emscripten_bind_PdeImage_SetRender_1"] = createExportWrapper("emscripten_bind_PdeImage_SetRender_1");

var _emscripten_bind_PdeImage_SetData_1 = Module["_emscripten_bind_PdeImage_SetData_1"] = createExportWrapper("emscripten_bind_PdeImage_SetData_1");

var _emscripten_bind_PdeImage_GetData_0 = Module["_emscripten_bind_PdeImage_GetData_0"] = createExportWrapper("emscripten_bind_PdeImage_GetData_0");

var _emscripten_bind_PdeImage_SetAlt_1 = Module["_emscripten_bind_PdeImage_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeImage_SetAlt_1");

var _emscripten_bind_PdeImage_SetActualText_1 = Module["_emscripten_bind_PdeImage_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeImage_SetActualText_1");

var _emscripten_bind_PdeImage_GetFlags_0 = Module["_emscripten_bind_PdeImage_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeImage_GetFlags_0");

var _emscripten_bind_PdeImage_SetFlags_1 = Module["_emscripten_bind_PdeImage_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeImage_SetFlags_1");

var _emscripten_bind_PdeImage_GetNumPageObjects_0 = Module["_emscripten_bind_PdeImage_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeImage_GetNumPageObjects_0");

var _emscripten_bind_PdeImage_GetPageObject_1 = Module["_emscripten_bind_PdeImage_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeImage_GetPageObject_1");

var _emscripten_bind_PdeImage_GetPageMap_0 = Module["_emscripten_bind_PdeImage_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeImage_GetPageMap_0");

var _emscripten_bind_PdeImage___destroy___0 = Module["_emscripten_bind_PdeImage___destroy___0"] = createExportWrapper("emscripten_bind_PdeImage___destroy___0");

var _emscripten_bind_PdeLine_GetType_0 = Module["_emscripten_bind_PdeLine_GetType_0"] = createExportWrapper("emscripten_bind_PdeLine_GetType_0");

var _emscripten_bind_PdeLine_GetBBox_1 = Module["_emscripten_bind_PdeLine_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeLine_GetBBox_1");

var _emscripten_bind_PdeLine_SetBBox_1 = Module["_emscripten_bind_PdeLine_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeLine_SetBBox_1");

var _emscripten_bind_PdeLine_GetId_0 = Module["_emscripten_bind_PdeLine_GetId_0"] = createExportWrapper("emscripten_bind_PdeLine_GetId_0");

var _emscripten_bind_PdeLine_GetGraphicState_1 = Module["_emscripten_bind_PdeLine_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeLine_GetGraphicState_1");

var _emscripten_bind_PdeLine_GetNumChildren_0 = Module["_emscripten_bind_PdeLine_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeLine_GetNumChildren_0");

var _emscripten_bind_PdeLine_GetChild_1 = Module["_emscripten_bind_PdeLine_GetChild_1"] = createExportWrapper("emscripten_bind_PdeLine_GetChild_1");

var _emscripten_bind_PdeLine_GetAlignment_0 = Module["_emscripten_bind_PdeLine_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeLine_GetAlignment_0");

var _emscripten_bind_PdeLine_GetAngle_0 = Module["_emscripten_bind_PdeLine_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeLine_GetAngle_0");

var _emscripten_bind_PdeLine_SetRender_1 = Module["_emscripten_bind_PdeLine_SetRender_1"] = createExportWrapper("emscripten_bind_PdeLine_SetRender_1");

var _emscripten_bind_PdeLine_SetData_1 = Module["_emscripten_bind_PdeLine_SetData_1"] = createExportWrapper("emscripten_bind_PdeLine_SetData_1");

var _emscripten_bind_PdeLine_GetData_0 = Module["_emscripten_bind_PdeLine_GetData_0"] = createExportWrapper("emscripten_bind_PdeLine_GetData_0");

var _emscripten_bind_PdeLine_SetAlt_1 = Module["_emscripten_bind_PdeLine_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeLine_SetAlt_1");

var _emscripten_bind_PdeLine_SetActualText_1 = Module["_emscripten_bind_PdeLine_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeLine_SetActualText_1");

var _emscripten_bind_PdeLine_GetFlags_0 = Module["_emscripten_bind_PdeLine_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeLine_GetFlags_0");

var _emscripten_bind_PdeLine_SetFlags_1 = Module["_emscripten_bind_PdeLine_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeLine_SetFlags_1");

var _emscripten_bind_PdeLine_GetNumPageObjects_0 = Module["_emscripten_bind_PdeLine_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeLine_GetNumPageObjects_0");

var _emscripten_bind_PdeLine_GetPageObject_1 = Module["_emscripten_bind_PdeLine_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeLine_GetPageObject_1");

var _emscripten_bind_PdeLine_GetPageMap_0 = Module["_emscripten_bind_PdeLine_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeLine_GetPageMap_0");

var _emscripten_bind_PdeLine___destroy___0 = Module["_emscripten_bind_PdeLine___destroy___0"] = createExportWrapper("emscripten_bind_PdeLine___destroy___0");

var _emscripten_bind_PdeRect_GetType_0 = Module["_emscripten_bind_PdeRect_GetType_0"] = createExportWrapper("emscripten_bind_PdeRect_GetType_0");

var _emscripten_bind_PdeRect_GetBBox_1 = Module["_emscripten_bind_PdeRect_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeRect_GetBBox_1");

var _emscripten_bind_PdeRect_SetBBox_1 = Module["_emscripten_bind_PdeRect_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeRect_SetBBox_1");

var _emscripten_bind_PdeRect_GetId_0 = Module["_emscripten_bind_PdeRect_GetId_0"] = createExportWrapper("emscripten_bind_PdeRect_GetId_0");

var _emscripten_bind_PdeRect_GetGraphicState_1 = Module["_emscripten_bind_PdeRect_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeRect_GetGraphicState_1");

var _emscripten_bind_PdeRect_GetNumChildren_0 = Module["_emscripten_bind_PdeRect_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeRect_GetNumChildren_0");

var _emscripten_bind_PdeRect_GetChild_1 = Module["_emscripten_bind_PdeRect_GetChild_1"] = createExportWrapper("emscripten_bind_PdeRect_GetChild_1");

var _emscripten_bind_PdeRect_GetAlignment_0 = Module["_emscripten_bind_PdeRect_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeRect_GetAlignment_0");

var _emscripten_bind_PdeRect_GetAngle_0 = Module["_emscripten_bind_PdeRect_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeRect_GetAngle_0");

var _emscripten_bind_PdeRect_SetRender_1 = Module["_emscripten_bind_PdeRect_SetRender_1"] = createExportWrapper("emscripten_bind_PdeRect_SetRender_1");

var _emscripten_bind_PdeRect_SetData_1 = Module["_emscripten_bind_PdeRect_SetData_1"] = createExportWrapper("emscripten_bind_PdeRect_SetData_1");

var _emscripten_bind_PdeRect_GetData_0 = Module["_emscripten_bind_PdeRect_GetData_0"] = createExportWrapper("emscripten_bind_PdeRect_GetData_0");

var _emscripten_bind_PdeRect_SetAlt_1 = Module["_emscripten_bind_PdeRect_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeRect_SetAlt_1");

var _emscripten_bind_PdeRect_SetActualText_1 = Module["_emscripten_bind_PdeRect_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeRect_SetActualText_1");

var _emscripten_bind_PdeRect_GetFlags_0 = Module["_emscripten_bind_PdeRect_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeRect_GetFlags_0");

var _emscripten_bind_PdeRect_SetFlags_1 = Module["_emscripten_bind_PdeRect_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeRect_SetFlags_1");

var _emscripten_bind_PdeRect_GetNumPageObjects_0 = Module["_emscripten_bind_PdeRect_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeRect_GetNumPageObjects_0");

var _emscripten_bind_PdeRect_GetPageObject_1 = Module["_emscripten_bind_PdeRect_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeRect_GetPageObject_1");

var _emscripten_bind_PdeRect_GetPageMap_0 = Module["_emscripten_bind_PdeRect_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeRect_GetPageMap_0");

var _emscripten_bind_PdeRect___destroy___0 = Module["_emscripten_bind_PdeRect___destroy___0"] = createExportWrapper("emscripten_bind_PdeRect___destroy___0");

var _emscripten_bind_PdeHeader_GetType_0 = Module["_emscripten_bind_PdeHeader_GetType_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetType_0");

var _emscripten_bind_PdeHeader_GetBBox_1 = Module["_emscripten_bind_PdeHeader_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeHeader_GetBBox_1");

var _emscripten_bind_PdeHeader_SetBBox_1 = Module["_emscripten_bind_PdeHeader_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetBBox_1");

var _emscripten_bind_PdeHeader_GetId_0 = Module["_emscripten_bind_PdeHeader_GetId_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetId_0");

var _emscripten_bind_PdeHeader_GetGraphicState_1 = Module["_emscripten_bind_PdeHeader_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeHeader_GetGraphicState_1");

var _emscripten_bind_PdeHeader_GetNumChildren_0 = Module["_emscripten_bind_PdeHeader_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetNumChildren_0");

var _emscripten_bind_PdeHeader_GetChild_1 = Module["_emscripten_bind_PdeHeader_GetChild_1"] = createExportWrapper("emscripten_bind_PdeHeader_GetChild_1");

var _emscripten_bind_PdeHeader_GetAlignment_0 = Module["_emscripten_bind_PdeHeader_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetAlignment_0");

var _emscripten_bind_PdeHeader_GetAngle_0 = Module["_emscripten_bind_PdeHeader_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetAngle_0");

var _emscripten_bind_PdeHeader_SetRender_1 = Module["_emscripten_bind_PdeHeader_SetRender_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetRender_1");

var _emscripten_bind_PdeHeader_SetData_1 = Module["_emscripten_bind_PdeHeader_SetData_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetData_1");

var _emscripten_bind_PdeHeader_GetData_0 = Module["_emscripten_bind_PdeHeader_GetData_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetData_0");

var _emscripten_bind_PdeHeader_SetAlt_1 = Module["_emscripten_bind_PdeHeader_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetAlt_1");

var _emscripten_bind_PdeHeader_SetActualText_1 = Module["_emscripten_bind_PdeHeader_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetActualText_1");

var _emscripten_bind_PdeHeader_GetFlags_0 = Module["_emscripten_bind_PdeHeader_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetFlags_0");

var _emscripten_bind_PdeHeader_SetFlags_1 = Module["_emscripten_bind_PdeHeader_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeHeader_SetFlags_1");

var _emscripten_bind_PdeHeader_GetNumPageObjects_0 = Module["_emscripten_bind_PdeHeader_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetNumPageObjects_0");

var _emscripten_bind_PdeHeader_GetPageObject_1 = Module["_emscripten_bind_PdeHeader_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeHeader_GetPageObject_1");

var _emscripten_bind_PdeHeader_GetPageMap_0 = Module["_emscripten_bind_PdeHeader_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeHeader_GetPageMap_0");

var _emscripten_bind_PdeHeader___destroy___0 = Module["_emscripten_bind_PdeHeader___destroy___0"] = createExportWrapper("emscripten_bind_PdeHeader___destroy___0");

var _emscripten_bind_PdeFooter_GetType_0 = Module["_emscripten_bind_PdeFooter_GetType_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetType_0");

var _emscripten_bind_PdeFooter_GetBBox_1 = Module["_emscripten_bind_PdeFooter_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeFooter_GetBBox_1");

var _emscripten_bind_PdeFooter_SetBBox_1 = Module["_emscripten_bind_PdeFooter_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetBBox_1");

var _emscripten_bind_PdeFooter_GetId_0 = Module["_emscripten_bind_PdeFooter_GetId_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetId_0");

var _emscripten_bind_PdeFooter_GetGraphicState_1 = Module["_emscripten_bind_PdeFooter_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeFooter_GetGraphicState_1");

var _emscripten_bind_PdeFooter_GetNumChildren_0 = Module["_emscripten_bind_PdeFooter_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetNumChildren_0");

var _emscripten_bind_PdeFooter_GetChild_1 = Module["_emscripten_bind_PdeFooter_GetChild_1"] = createExportWrapper("emscripten_bind_PdeFooter_GetChild_1");

var _emscripten_bind_PdeFooter_GetAlignment_0 = Module["_emscripten_bind_PdeFooter_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetAlignment_0");

var _emscripten_bind_PdeFooter_GetAngle_0 = Module["_emscripten_bind_PdeFooter_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetAngle_0");

var _emscripten_bind_PdeFooter_SetRender_1 = Module["_emscripten_bind_PdeFooter_SetRender_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetRender_1");

var _emscripten_bind_PdeFooter_SetData_1 = Module["_emscripten_bind_PdeFooter_SetData_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetData_1");

var _emscripten_bind_PdeFooter_GetData_0 = Module["_emscripten_bind_PdeFooter_GetData_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetData_0");

var _emscripten_bind_PdeFooter_SetAlt_1 = Module["_emscripten_bind_PdeFooter_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetAlt_1");

var _emscripten_bind_PdeFooter_SetActualText_1 = Module["_emscripten_bind_PdeFooter_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetActualText_1");

var _emscripten_bind_PdeFooter_GetFlags_0 = Module["_emscripten_bind_PdeFooter_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetFlags_0");

var _emscripten_bind_PdeFooter_SetFlags_1 = Module["_emscripten_bind_PdeFooter_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeFooter_SetFlags_1");

var _emscripten_bind_PdeFooter_GetNumPageObjects_0 = Module["_emscripten_bind_PdeFooter_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetNumPageObjects_0");

var _emscripten_bind_PdeFooter_GetPageObject_1 = Module["_emscripten_bind_PdeFooter_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeFooter_GetPageObject_1");

var _emscripten_bind_PdeFooter_GetPageMap_0 = Module["_emscripten_bind_PdeFooter_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeFooter_GetPageMap_0");

var _emscripten_bind_PdeFooter___destroy___0 = Module["_emscripten_bind_PdeFooter___destroy___0"] = createExportWrapper("emscripten_bind_PdeFooter___destroy___0");

var _emscripten_bind_PdeCell_GetRowSpan_0 = Module["_emscripten_bind_PdeCell_GetRowSpan_0"] = createExportWrapper("emscripten_bind_PdeCell_GetRowSpan_0");

var _emscripten_bind_PdeCell_GetColSpan_0 = Module["_emscripten_bind_PdeCell_GetColSpan_0"] = createExportWrapper("emscripten_bind_PdeCell_GetColSpan_0");

var _emscripten_bind_PdeCell_HasBorderGraphicState_1 = Module["_emscripten_bind_PdeCell_HasBorderGraphicState_1"] = createExportWrapper("emscripten_bind_PdeCell_HasBorderGraphicState_1");

var _emscripten_bind_PdeCell_GetSpanCell_0 = Module["_emscripten_bind_PdeCell_GetSpanCell_0"] = createExportWrapper("emscripten_bind_PdeCell_GetSpanCell_0");

var _emscripten_bind_PdeCell_GetType_0 = Module["_emscripten_bind_PdeCell_GetType_0"] = createExportWrapper("emscripten_bind_PdeCell_GetType_0");

var _emscripten_bind_PdeCell_GetBBox_1 = Module["_emscripten_bind_PdeCell_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeCell_GetBBox_1");

var _emscripten_bind_PdeCell_SetBBox_1 = Module["_emscripten_bind_PdeCell_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeCell_SetBBox_1");

var _emscripten_bind_PdeCell_GetId_0 = Module["_emscripten_bind_PdeCell_GetId_0"] = createExportWrapper("emscripten_bind_PdeCell_GetId_0");

var _emscripten_bind_PdeCell_GetGraphicState_1 = Module["_emscripten_bind_PdeCell_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeCell_GetGraphicState_1");

var _emscripten_bind_PdeCell_GetNumChildren_0 = Module["_emscripten_bind_PdeCell_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeCell_GetNumChildren_0");

var _emscripten_bind_PdeCell_GetChild_1 = Module["_emscripten_bind_PdeCell_GetChild_1"] = createExportWrapper("emscripten_bind_PdeCell_GetChild_1");

var _emscripten_bind_PdeCell_GetAlignment_0 = Module["_emscripten_bind_PdeCell_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeCell_GetAlignment_0");

var _emscripten_bind_PdeCell_GetAngle_0 = Module["_emscripten_bind_PdeCell_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeCell_GetAngle_0");

var _emscripten_bind_PdeCell_SetRender_1 = Module["_emscripten_bind_PdeCell_SetRender_1"] = createExportWrapper("emscripten_bind_PdeCell_SetRender_1");

var _emscripten_bind_PdeCell_SetData_1 = Module["_emscripten_bind_PdeCell_SetData_1"] = createExportWrapper("emscripten_bind_PdeCell_SetData_1");

var _emscripten_bind_PdeCell_GetData_0 = Module["_emscripten_bind_PdeCell_GetData_0"] = createExportWrapper("emscripten_bind_PdeCell_GetData_0");

var _emscripten_bind_PdeCell_SetAlt_1 = Module["_emscripten_bind_PdeCell_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeCell_SetAlt_1");

var _emscripten_bind_PdeCell_SetActualText_1 = Module["_emscripten_bind_PdeCell_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeCell_SetActualText_1");

var _emscripten_bind_PdeCell_GetFlags_0 = Module["_emscripten_bind_PdeCell_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeCell_GetFlags_0");

var _emscripten_bind_PdeCell_SetFlags_1 = Module["_emscripten_bind_PdeCell_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeCell_SetFlags_1");

var _emscripten_bind_PdeCell_GetNumPageObjects_0 = Module["_emscripten_bind_PdeCell_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeCell_GetNumPageObjects_0");

var _emscripten_bind_PdeCell_GetPageObject_1 = Module["_emscripten_bind_PdeCell_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeCell_GetPageObject_1");

var _emscripten_bind_PdeCell_GetPageMap_0 = Module["_emscripten_bind_PdeCell_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeCell_GetPageMap_0");

var _emscripten_bind_PdeCell___destroy___0 = Module["_emscripten_bind_PdeCell___destroy___0"] = createExportWrapper("emscripten_bind_PdeCell___destroy___0");

var _emscripten_bind_PdeTable_GetNumRows_0 = Module["_emscripten_bind_PdeTable_GetNumRows_0"] = createExportWrapper("emscripten_bind_PdeTable_GetNumRows_0");

var _emscripten_bind_PdeTable_GetNumCols_0 = Module["_emscripten_bind_PdeTable_GetNumCols_0"] = createExportWrapper("emscripten_bind_PdeTable_GetNumCols_0");

var _emscripten_bind_PdeTable_GetCell_2 = Module["_emscripten_bind_PdeTable_GetCell_2"] = createExportWrapper("emscripten_bind_PdeTable_GetCell_2");

var _emscripten_bind_PdeTable_GetRowAlignment_1 = Module["_emscripten_bind_PdeTable_GetRowAlignment_1"] = createExportWrapper("emscripten_bind_PdeTable_GetRowAlignment_1");

var _emscripten_bind_PdeTable_GetColAlignment_1 = Module["_emscripten_bind_PdeTable_GetColAlignment_1"] = createExportWrapper("emscripten_bind_PdeTable_GetColAlignment_1");

var _emscripten_bind_PdeTable_GetCaption_0 = Module["_emscripten_bind_PdeTable_GetCaption_0"] = createExportWrapper("emscripten_bind_PdeTable_GetCaption_0");

var _emscripten_bind_PdeTable_GetTableType_0 = Module["_emscripten_bind_PdeTable_GetTableType_0"] = createExportWrapper("emscripten_bind_PdeTable_GetTableType_0");

var _emscripten_bind_PdeTable_GetType_0 = Module["_emscripten_bind_PdeTable_GetType_0"] = createExportWrapper("emscripten_bind_PdeTable_GetType_0");

var _emscripten_bind_PdeTable_GetBBox_1 = Module["_emscripten_bind_PdeTable_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeTable_GetBBox_1");

var _emscripten_bind_PdeTable_SetBBox_1 = Module["_emscripten_bind_PdeTable_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeTable_SetBBox_1");

var _emscripten_bind_PdeTable_GetId_0 = Module["_emscripten_bind_PdeTable_GetId_0"] = createExportWrapper("emscripten_bind_PdeTable_GetId_0");

var _emscripten_bind_PdeTable_GetGraphicState_1 = Module["_emscripten_bind_PdeTable_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeTable_GetGraphicState_1");

var _emscripten_bind_PdeTable_GetNumChildren_0 = Module["_emscripten_bind_PdeTable_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeTable_GetNumChildren_0");

var _emscripten_bind_PdeTable_GetChild_1 = Module["_emscripten_bind_PdeTable_GetChild_1"] = createExportWrapper("emscripten_bind_PdeTable_GetChild_1");

var _emscripten_bind_PdeTable_GetAlignment_0 = Module["_emscripten_bind_PdeTable_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeTable_GetAlignment_0");

var _emscripten_bind_PdeTable_GetAngle_0 = Module["_emscripten_bind_PdeTable_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeTable_GetAngle_0");

var _emscripten_bind_PdeTable_SetRender_1 = Module["_emscripten_bind_PdeTable_SetRender_1"] = createExportWrapper("emscripten_bind_PdeTable_SetRender_1");

var _emscripten_bind_PdeTable_SetData_1 = Module["_emscripten_bind_PdeTable_SetData_1"] = createExportWrapper("emscripten_bind_PdeTable_SetData_1");

var _emscripten_bind_PdeTable_GetData_0 = Module["_emscripten_bind_PdeTable_GetData_0"] = createExportWrapper("emscripten_bind_PdeTable_GetData_0");

var _emscripten_bind_PdeTable_SetAlt_1 = Module["_emscripten_bind_PdeTable_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeTable_SetAlt_1");

var _emscripten_bind_PdeTable_SetActualText_1 = Module["_emscripten_bind_PdeTable_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeTable_SetActualText_1");

var _emscripten_bind_PdeTable_GetFlags_0 = Module["_emscripten_bind_PdeTable_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeTable_GetFlags_0");

var _emscripten_bind_PdeTable_SetFlags_1 = Module["_emscripten_bind_PdeTable_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeTable_SetFlags_1");

var _emscripten_bind_PdeTable_GetNumPageObjects_0 = Module["_emscripten_bind_PdeTable_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeTable_GetNumPageObjects_0");

var _emscripten_bind_PdeTable_GetPageObject_1 = Module["_emscripten_bind_PdeTable_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeTable_GetPageObject_1");

var _emscripten_bind_PdeTable_GetPageMap_0 = Module["_emscripten_bind_PdeTable_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeTable_GetPageMap_0");

var _emscripten_bind_PdeTable___destroy___0 = Module["_emscripten_bind_PdeTable___destroy___0"] = createExportWrapper("emscripten_bind_PdeTable___destroy___0");

var _emscripten_bind_PdeWord_GetText_2 = Module["_emscripten_bind_PdeWord_GetText_2"] = createExportWrapper("emscripten_bind_PdeWord_GetText_2");

var _emscripten_bind_PdeWord_HasTextState_0 = Module["_emscripten_bind_PdeWord_HasTextState_0"] = createExportWrapper("emscripten_bind_PdeWord_HasTextState_0");

var _emscripten_bind_PdeWord_GetTextState_1 = Module["_emscripten_bind_PdeWord_GetTextState_1"] = createExportWrapper("emscripten_bind_PdeWord_GetTextState_1");

var _emscripten_bind_PdeWord_GetNumChars_0 = Module["_emscripten_bind_PdeWord_GetNumChars_0"] = createExportWrapper("emscripten_bind_PdeWord_GetNumChars_0");

var _emscripten_bind_PdeWord_GetCharCode_1 = Module["_emscripten_bind_PdeWord_GetCharCode_1"] = createExportWrapper("emscripten_bind_PdeWord_GetCharCode_1");

var _emscripten_bind_PdeWord_GetCharText_3 = Module["_emscripten_bind_PdeWord_GetCharText_3"] = createExportWrapper("emscripten_bind_PdeWord_GetCharText_3");

var _emscripten_bind_PdeWord_GetCharTextState_2 = Module["_emscripten_bind_PdeWord_GetCharTextState_2"] = createExportWrapper("emscripten_bind_PdeWord_GetCharTextState_2");

var _emscripten_bind_PdeWord_GetCharBBox_2 = Module["_emscripten_bind_PdeWord_GetCharBBox_2"] = createExportWrapper("emscripten_bind_PdeWord_GetCharBBox_2");

var _emscripten_bind_PdeWord_GetWordFlags_0 = Module["_emscripten_bind_PdeWord_GetWordFlags_0"] = createExportWrapper("emscripten_bind_PdeWord_GetWordFlags_0");

var _emscripten_bind_PdeWord_GetBackground_0 = Module["_emscripten_bind_PdeWord_GetBackground_0"] = createExportWrapper("emscripten_bind_PdeWord_GetBackground_0");

var _emscripten_bind_PdeWord_GetOrigin_1 = Module["_emscripten_bind_PdeWord_GetOrigin_1"] = createExportWrapper("emscripten_bind_PdeWord_GetOrigin_1");

var _emscripten_bind_PdeWord_GetType_0 = Module["_emscripten_bind_PdeWord_GetType_0"] = createExportWrapper("emscripten_bind_PdeWord_GetType_0");

var _emscripten_bind_PdeWord_GetBBox_1 = Module["_emscripten_bind_PdeWord_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeWord_GetBBox_1");

var _emscripten_bind_PdeWord_SetBBox_1 = Module["_emscripten_bind_PdeWord_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeWord_SetBBox_1");

var _emscripten_bind_PdeWord_GetId_0 = Module["_emscripten_bind_PdeWord_GetId_0"] = createExportWrapper("emscripten_bind_PdeWord_GetId_0");

var _emscripten_bind_PdeWord_GetGraphicState_1 = Module["_emscripten_bind_PdeWord_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeWord_GetGraphicState_1");

var _emscripten_bind_PdeWord_GetNumChildren_0 = Module["_emscripten_bind_PdeWord_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeWord_GetNumChildren_0");

var _emscripten_bind_PdeWord_GetChild_1 = Module["_emscripten_bind_PdeWord_GetChild_1"] = createExportWrapper("emscripten_bind_PdeWord_GetChild_1");

var _emscripten_bind_PdeWord_GetAlignment_0 = Module["_emscripten_bind_PdeWord_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeWord_GetAlignment_0");

var _emscripten_bind_PdeWord_GetAngle_0 = Module["_emscripten_bind_PdeWord_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeWord_GetAngle_0");

var _emscripten_bind_PdeWord_SetRender_1 = Module["_emscripten_bind_PdeWord_SetRender_1"] = createExportWrapper("emscripten_bind_PdeWord_SetRender_1");

var _emscripten_bind_PdeWord_SetData_1 = Module["_emscripten_bind_PdeWord_SetData_1"] = createExportWrapper("emscripten_bind_PdeWord_SetData_1");

var _emscripten_bind_PdeWord_GetData_0 = Module["_emscripten_bind_PdeWord_GetData_0"] = createExportWrapper("emscripten_bind_PdeWord_GetData_0");

var _emscripten_bind_PdeWord_SetAlt_1 = Module["_emscripten_bind_PdeWord_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeWord_SetAlt_1");

var _emscripten_bind_PdeWord_SetActualText_1 = Module["_emscripten_bind_PdeWord_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeWord_SetActualText_1");

var _emscripten_bind_PdeWord_GetFlags_0 = Module["_emscripten_bind_PdeWord_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeWord_GetFlags_0");

var _emscripten_bind_PdeWord_SetFlags_1 = Module["_emscripten_bind_PdeWord_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeWord_SetFlags_1");

var _emscripten_bind_PdeWord_GetNumPageObjects_0 = Module["_emscripten_bind_PdeWord_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeWord_GetNumPageObjects_0");

var _emscripten_bind_PdeWord_GetPageObject_1 = Module["_emscripten_bind_PdeWord_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeWord_GetPageObject_1");

var _emscripten_bind_PdeWord_GetPageMap_0 = Module["_emscripten_bind_PdeWord_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeWord_GetPageMap_0");

var _emscripten_bind_PdeWord___destroy___0 = Module["_emscripten_bind_PdeWord___destroy___0"] = createExportWrapper("emscripten_bind_PdeWord___destroy___0");

var _emscripten_bind_PdeTextLine_GetText_2 = Module["_emscripten_bind_PdeTextLine_GetText_2"] = createExportWrapper("emscripten_bind_PdeTextLine_GetText_2");

var _emscripten_bind_PdeTextLine_HasTextState_0 = Module["_emscripten_bind_PdeTextLine_HasTextState_0"] = createExportWrapper("emscripten_bind_PdeTextLine_HasTextState_0");

var _emscripten_bind_PdeTextLine_GetTextState_1 = Module["_emscripten_bind_PdeTextLine_GetTextState_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetTextState_1");

var _emscripten_bind_PdeTextLine_GetNumWords_0 = Module["_emscripten_bind_PdeTextLine_GetNumWords_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetNumWords_0");

var _emscripten_bind_PdeTextLine_GetWord_1 = Module["_emscripten_bind_PdeTextLine_GetWord_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetWord_1");

var _emscripten_bind_PdeTextLine_GetTextLineFlags_0 = Module["_emscripten_bind_PdeTextLine_GetTextLineFlags_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetTextLineFlags_0");

var _emscripten_bind_PdeTextLine_GetType_0 = Module["_emscripten_bind_PdeTextLine_GetType_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetType_0");

var _emscripten_bind_PdeTextLine_GetBBox_1 = Module["_emscripten_bind_PdeTextLine_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetBBox_1");

var _emscripten_bind_PdeTextLine_SetBBox_1 = Module["_emscripten_bind_PdeTextLine_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetBBox_1");

var _emscripten_bind_PdeTextLine_GetId_0 = Module["_emscripten_bind_PdeTextLine_GetId_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetId_0");

var _emscripten_bind_PdeTextLine_GetGraphicState_1 = Module["_emscripten_bind_PdeTextLine_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetGraphicState_1");

var _emscripten_bind_PdeTextLine_GetNumChildren_0 = Module["_emscripten_bind_PdeTextLine_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetNumChildren_0");

var _emscripten_bind_PdeTextLine_GetChild_1 = Module["_emscripten_bind_PdeTextLine_GetChild_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetChild_1");

var _emscripten_bind_PdeTextLine_GetAlignment_0 = Module["_emscripten_bind_PdeTextLine_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetAlignment_0");

var _emscripten_bind_PdeTextLine_GetAngle_0 = Module["_emscripten_bind_PdeTextLine_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetAngle_0");

var _emscripten_bind_PdeTextLine_SetRender_1 = Module["_emscripten_bind_PdeTextLine_SetRender_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetRender_1");

var _emscripten_bind_PdeTextLine_SetData_1 = Module["_emscripten_bind_PdeTextLine_SetData_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetData_1");

var _emscripten_bind_PdeTextLine_GetData_0 = Module["_emscripten_bind_PdeTextLine_GetData_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetData_0");

var _emscripten_bind_PdeTextLine_SetAlt_1 = Module["_emscripten_bind_PdeTextLine_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetAlt_1");

var _emscripten_bind_PdeTextLine_SetActualText_1 = Module["_emscripten_bind_PdeTextLine_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetActualText_1");

var _emscripten_bind_PdeTextLine_GetFlags_0 = Module["_emscripten_bind_PdeTextLine_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetFlags_0");

var _emscripten_bind_PdeTextLine_SetFlags_1 = Module["_emscripten_bind_PdeTextLine_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeTextLine_SetFlags_1");

var _emscripten_bind_PdeTextLine_GetNumPageObjects_0 = Module["_emscripten_bind_PdeTextLine_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetNumPageObjects_0");

var _emscripten_bind_PdeTextLine_GetPageObject_1 = Module["_emscripten_bind_PdeTextLine_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeTextLine_GetPageObject_1");

var _emscripten_bind_PdeTextLine_GetPageMap_0 = Module["_emscripten_bind_PdeTextLine_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeTextLine_GetPageMap_0");

var _emscripten_bind_PdeTextLine___destroy___0 = Module["_emscripten_bind_PdeTextLine___destroy___0"] = createExportWrapper("emscripten_bind_PdeTextLine___destroy___0");

var _emscripten_bind_PdeText_GetText_2 = Module["_emscripten_bind_PdeText_GetText_2"] = createExportWrapper("emscripten_bind_PdeText_GetText_2");

var _emscripten_bind_PdeText_HasTextState_0 = Module["_emscripten_bind_PdeText_HasTextState_0"] = createExportWrapper("emscripten_bind_PdeText_HasTextState_0");

var _emscripten_bind_PdeText_GetTextState_1 = Module["_emscripten_bind_PdeText_GetTextState_1"] = createExportWrapper("emscripten_bind_PdeText_GetTextState_1");

var _emscripten_bind_PdeText_GetNumTextLines_0 = Module["_emscripten_bind_PdeText_GetNumTextLines_0"] = createExportWrapper("emscripten_bind_PdeText_GetNumTextLines_0");

var _emscripten_bind_PdeText_GetTextLine_1 = Module["_emscripten_bind_PdeText_GetTextLine_1"] = createExportWrapper("emscripten_bind_PdeText_GetTextLine_1");

var _emscripten_bind_PdeText_GetNumWords_0 = Module["_emscripten_bind_PdeText_GetNumWords_0"] = createExportWrapper("emscripten_bind_PdeText_GetNumWords_0");

var _emscripten_bind_PdeText_GetWord_1 = Module["_emscripten_bind_PdeText_GetWord_1"] = createExportWrapper("emscripten_bind_PdeText_GetWord_1");

var _emscripten_bind_PdeText_GetLineSpacing_0 = Module["_emscripten_bind_PdeText_GetLineSpacing_0"] = createExportWrapper("emscripten_bind_PdeText_GetLineSpacing_0");

var _emscripten_bind_PdeText_GetIndent_0 = Module["_emscripten_bind_PdeText_GetIndent_0"] = createExportWrapper("emscripten_bind_PdeText_GetIndent_0");

var _emscripten_bind_PdeText_GetTextStyle_0 = Module["_emscripten_bind_PdeText_GetTextStyle_0"] = createExportWrapper("emscripten_bind_PdeText_GetTextStyle_0");

var _emscripten_bind_PdeText_GetTextFlags_0 = Module["_emscripten_bind_PdeText_GetTextFlags_0"] = createExportWrapper("emscripten_bind_PdeText_GetTextFlags_0");

var _emscripten_bind_PdeText_GetLabelLevel_0 = Module["_emscripten_bind_PdeText_GetLabelLevel_0"] = createExportWrapper("emscripten_bind_PdeText_GetLabelLevel_0");

var _emscripten_bind_PdeText_SetLabelLevel_1 = Module["_emscripten_bind_PdeText_SetLabelLevel_1"] = createExportWrapper("emscripten_bind_PdeText_SetLabelLevel_1");

var _emscripten_bind_PdeText_GetType_0 = Module["_emscripten_bind_PdeText_GetType_0"] = createExportWrapper("emscripten_bind_PdeText_GetType_0");

var _emscripten_bind_PdeText_GetBBox_1 = Module["_emscripten_bind_PdeText_GetBBox_1"] = createExportWrapper("emscripten_bind_PdeText_GetBBox_1");

var _emscripten_bind_PdeText_SetBBox_1 = Module["_emscripten_bind_PdeText_SetBBox_1"] = createExportWrapper("emscripten_bind_PdeText_SetBBox_1");

var _emscripten_bind_PdeText_GetId_0 = Module["_emscripten_bind_PdeText_GetId_0"] = createExportWrapper("emscripten_bind_PdeText_GetId_0");

var _emscripten_bind_PdeText_GetGraphicState_1 = Module["_emscripten_bind_PdeText_GetGraphicState_1"] = createExportWrapper("emscripten_bind_PdeText_GetGraphicState_1");

var _emscripten_bind_PdeText_GetNumChildren_0 = Module["_emscripten_bind_PdeText_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdeText_GetNumChildren_0");

var _emscripten_bind_PdeText_GetChild_1 = Module["_emscripten_bind_PdeText_GetChild_1"] = createExportWrapper("emscripten_bind_PdeText_GetChild_1");

var _emscripten_bind_PdeText_GetAlignment_0 = Module["_emscripten_bind_PdeText_GetAlignment_0"] = createExportWrapper("emscripten_bind_PdeText_GetAlignment_0");

var _emscripten_bind_PdeText_GetAngle_0 = Module["_emscripten_bind_PdeText_GetAngle_0"] = createExportWrapper("emscripten_bind_PdeText_GetAngle_0");

var _emscripten_bind_PdeText_SetRender_1 = Module["_emscripten_bind_PdeText_SetRender_1"] = createExportWrapper("emscripten_bind_PdeText_SetRender_1");

var _emscripten_bind_PdeText_SetData_1 = Module["_emscripten_bind_PdeText_SetData_1"] = createExportWrapper("emscripten_bind_PdeText_SetData_1");

var _emscripten_bind_PdeText_GetData_0 = Module["_emscripten_bind_PdeText_GetData_0"] = createExportWrapper("emscripten_bind_PdeText_GetData_0");

var _emscripten_bind_PdeText_SetAlt_1 = Module["_emscripten_bind_PdeText_SetAlt_1"] = createExportWrapper("emscripten_bind_PdeText_SetAlt_1");

var _emscripten_bind_PdeText_SetActualText_1 = Module["_emscripten_bind_PdeText_SetActualText_1"] = createExportWrapper("emscripten_bind_PdeText_SetActualText_1");

var _emscripten_bind_PdeText_GetFlags_0 = Module["_emscripten_bind_PdeText_GetFlags_0"] = createExportWrapper("emscripten_bind_PdeText_GetFlags_0");

var _emscripten_bind_PdeText_SetFlags_1 = Module["_emscripten_bind_PdeText_SetFlags_1"] = createExportWrapper("emscripten_bind_PdeText_SetFlags_1");

var _emscripten_bind_PdeText_GetNumPageObjects_0 = Module["_emscripten_bind_PdeText_GetNumPageObjects_0"] = createExportWrapper("emscripten_bind_PdeText_GetNumPageObjects_0");

var _emscripten_bind_PdeText_GetPageObject_1 = Module["_emscripten_bind_PdeText_GetPageObject_1"] = createExportWrapper("emscripten_bind_PdeText_GetPageObject_1");

var _emscripten_bind_PdeText_GetPageMap_0 = Module["_emscripten_bind_PdeText_GetPageMap_0"] = createExportWrapper("emscripten_bind_PdeText_GetPageMap_0");

var _emscripten_bind_PdeText___destroy___0 = Module["_emscripten_bind_PdeText___destroy___0"] = createExportWrapper("emscripten_bind_PdeText___destroy___0");

var _emscripten_bind_PdfAction_GetSubtype_0 = Module["_emscripten_bind_PdfAction_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfAction_GetSubtype_0");

var _emscripten_bind_PdfAction_GetJavaScript_2 = Module["_emscripten_bind_PdfAction_GetJavaScript_2"] = createExportWrapper("emscripten_bind_PdfAction_GetJavaScript_2");

var _emscripten_bind_PdfAction_GetDestFile_2 = Module["_emscripten_bind_PdfAction_GetDestFile_2"] = createExportWrapper("emscripten_bind_PdfAction_GetDestFile_2");

var _emscripten_bind_PdfAction_GetViewDestination_0 = Module["_emscripten_bind_PdfAction_GetViewDestination_0"] = createExportWrapper("emscripten_bind_PdfAction_GetViewDestination_0");

var _emscripten_bind_PdfAction___destroy___0 = Module["_emscripten_bind_PdfAction___destroy___0"] = createExportWrapper("emscripten_bind_PdfAction___destroy___0");

var _emscripten_bind_PdfLinkAnnot_GetNumQuads_0 = Module["_emscripten_bind_PdfLinkAnnot_GetNumQuads_0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetNumQuads_0");

var _emscripten_bind_PdfLinkAnnot_GetQuad_2 = Module["_emscripten_bind_PdfLinkAnnot_GetQuad_2"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetQuad_2");

var _emscripten_bind_PdfLinkAnnot_AddQuad_1 = Module["_emscripten_bind_PdfLinkAnnot_AddQuad_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_AddQuad_1");

var _emscripten_bind_PdfLinkAnnot_RemoveQuad_1 = Module["_emscripten_bind_PdfLinkAnnot_RemoveQuad_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_RemoveQuad_1");

var _emscripten_bind_PdfLinkAnnot_GetAction_0 = Module["_emscripten_bind_PdfLinkAnnot_GetAction_0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetAction_0");

var _emscripten_bind_PdfLinkAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfLinkAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetSubtype_0");

var _emscripten_bind_PdfLinkAnnot_GetFlags_0 = Module["_emscripten_bind_PdfLinkAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetFlags_0");

var _emscripten_bind_PdfLinkAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfLinkAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetAppearance_1");

var _emscripten_bind_PdfLinkAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfLinkAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfLinkAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfLinkAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfLinkAnnot_GetBBox_1 = Module["_emscripten_bind_PdfLinkAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetBBox_1");

var _emscripten_bind_PdfLinkAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfLinkAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_PointInAnnot_1");

var _emscripten_bind_PdfLinkAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfLinkAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_RectInAnnot_1");

var _emscripten_bind_PdfLinkAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfLinkAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetStructObject_1");

var _emscripten_bind_PdfLinkAnnot_GetObject_0 = Module["_emscripten_bind_PdfLinkAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_GetObject_0");

var _emscripten_bind_PdfLinkAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfLinkAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfLinkAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfLinkAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfLinkAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfLinkAnnot___destroy___0 = Module["_emscripten_bind_PdfLinkAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfLinkAnnot___destroy___0");

var _emscripten_bind_PdfTextAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfTextAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetSubtype_0");

var _emscripten_bind_PdfTextAnnot_GetFlags_0 = Module["_emscripten_bind_PdfTextAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetFlags_0");

var _emscripten_bind_PdfTextAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfTextAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetAppearance_1");

var _emscripten_bind_PdfTextAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfTextAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfTextAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfTextAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfTextAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfTextAnnot_GetBBox_1 = Module["_emscripten_bind_PdfTextAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetBBox_1");

var _emscripten_bind_PdfTextAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfTextAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_PointInAnnot_1");

var _emscripten_bind_PdfTextAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfTextAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_RectInAnnot_1");

var _emscripten_bind_PdfTextAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfTextAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetStructObject_1");

var _emscripten_bind_PdfTextAnnot_GetObject_0 = Module["_emscripten_bind_PdfTextAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetObject_0");

var _emscripten_bind_PdfTextAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfTextAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfTextAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfTextAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfTextAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfTextAnnot_GetContents_2 = Module["_emscripten_bind_PdfTextAnnot_GetContents_2"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetContents_2");

var _emscripten_bind_PdfTextAnnot_SetContents_1 = Module["_emscripten_bind_PdfTextAnnot_SetContents_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_SetContents_1");

var _emscripten_bind_PdfTextAnnot_GetAuthor_2 = Module["_emscripten_bind_PdfTextAnnot_GetAuthor_2"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetAuthor_2");

var _emscripten_bind_PdfTextAnnot_SetAuthor_1 = Module["_emscripten_bind_PdfTextAnnot_SetAuthor_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_SetAuthor_1");

var _emscripten_bind_PdfTextAnnot_GetNumReplies_0 = Module["_emscripten_bind_PdfTextAnnot_GetNumReplies_0"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetNumReplies_0");

var _emscripten_bind_PdfTextAnnot_GetReply_1 = Module["_emscripten_bind_PdfTextAnnot_GetReply_1"] = createExportWrapper("emscripten_bind_PdfTextAnnot_GetReply_1");

var _emscripten_bind_PdfTextAnnot_AddReply_2 = Module["_emscripten_bind_PdfTextAnnot_AddReply_2"] = createExportWrapper("emscripten_bind_PdfTextAnnot_AddReply_2");

var _emscripten_bind_PdfTextAnnot___destroy___0 = Module["_emscripten_bind_PdfTextAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfTextAnnot___destroy___0");

var _emscripten_bind_PdfTextMarkupAnnot_GetNumQuads_0 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetNumQuads_0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetNumQuads_0");

var _emscripten_bind_PdfTextMarkupAnnot_GetQuad_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetQuad_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetQuad_2");

var _emscripten_bind_PdfTextMarkupAnnot_AddQuad_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_AddQuad_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_AddQuad_1");

var _emscripten_bind_PdfTextMarkupAnnot_RemoveQuad_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_RemoveQuad_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_RemoveQuad_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetSubtype_0");

var _emscripten_bind_PdfTextMarkupAnnot_GetFlags_0 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetFlags_0");

var _emscripten_bind_PdfTextMarkupAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetAppearance_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfTextMarkupAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfTextMarkupAnnot_GetBBox_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetBBox_1");

var _emscripten_bind_PdfTextMarkupAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_PointInAnnot_1");

var _emscripten_bind_PdfTextMarkupAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_RectInAnnot_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetStructObject_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetObject_0 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetObject_0");

var _emscripten_bind_PdfTextMarkupAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfTextMarkupAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfTextMarkupAnnot_GetContents_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetContents_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetContents_2");

var _emscripten_bind_PdfTextMarkupAnnot_SetContents_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_SetContents_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_SetContents_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetAuthor_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetAuthor_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetAuthor_2");

var _emscripten_bind_PdfTextMarkupAnnot_SetAuthor_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_SetAuthor_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_SetAuthor_1");

var _emscripten_bind_PdfTextMarkupAnnot_GetNumReplies_0 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetNumReplies_0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetNumReplies_0");

var _emscripten_bind_PdfTextMarkupAnnot_GetReply_1 = Module["_emscripten_bind_PdfTextMarkupAnnot_GetReply_1"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_GetReply_1");

var _emscripten_bind_PdfTextMarkupAnnot_AddReply_2 = Module["_emscripten_bind_PdfTextMarkupAnnot_AddReply_2"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot_AddReply_2");

var _emscripten_bind_PdfTextMarkupAnnot___destroy___0 = Module["_emscripten_bind_PdfTextMarkupAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfTextMarkupAnnot___destroy___0");

var _emscripten_bind_PdfWidgetAnnot_GetCaption_2 = Module["_emscripten_bind_PdfWidgetAnnot_GetCaption_2"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetCaption_2");

var _emscripten_bind_PdfWidgetAnnot_GetFontName_2 = Module["_emscripten_bind_PdfWidgetAnnot_GetFontName_2"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetFontName_2");

var _emscripten_bind_PdfWidgetAnnot_GetAction_0 = Module["_emscripten_bind_PdfWidgetAnnot_GetAction_0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetAction_0");

var _emscripten_bind_PdfWidgetAnnot_GetAAction_1 = Module["_emscripten_bind_PdfWidgetAnnot_GetAAction_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetAAction_1");

var _emscripten_bind_PdfWidgetAnnot_GetFormField_0 = Module["_emscripten_bind_PdfWidgetAnnot_GetFormField_0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetFormField_0");

var _emscripten_bind_PdfWidgetAnnot_GetSubtype_0 = Module["_emscripten_bind_PdfWidgetAnnot_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetSubtype_0");

var _emscripten_bind_PdfWidgetAnnot_GetFlags_0 = Module["_emscripten_bind_PdfWidgetAnnot_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetFlags_0");

var _emscripten_bind_PdfWidgetAnnot_GetAppearance_1 = Module["_emscripten_bind_PdfWidgetAnnot_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetAppearance_1");

var _emscripten_bind_PdfWidgetAnnot_GetAppearanceXObject_1 = Module["_emscripten_bind_PdfWidgetAnnot_GetAppearanceXObject_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetAppearanceXObject_1");

var _emscripten_bind_PdfWidgetAnnot_SetAppearanceFromXObject_2 = Module["_emscripten_bind_PdfWidgetAnnot_SetAppearanceFromXObject_2"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_SetAppearanceFromXObject_2");

var _emscripten_bind_PdfWidgetAnnot_GetBBox_1 = Module["_emscripten_bind_PdfWidgetAnnot_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetBBox_1");

var _emscripten_bind_PdfWidgetAnnot_PointInAnnot_1 = Module["_emscripten_bind_PdfWidgetAnnot_PointInAnnot_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_PointInAnnot_1");

var _emscripten_bind_PdfWidgetAnnot_RectInAnnot_1 = Module["_emscripten_bind_PdfWidgetAnnot_RectInAnnot_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_RectInAnnot_1");

var _emscripten_bind_PdfWidgetAnnot_GetStructObject_1 = Module["_emscripten_bind_PdfWidgetAnnot_GetStructObject_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetStructObject_1");

var _emscripten_bind_PdfWidgetAnnot_GetObject_0 = Module["_emscripten_bind_PdfWidgetAnnot_GetObject_0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_GetObject_0");

var _emscripten_bind_PdfWidgetAnnot_NotifyWillChange_1 = Module["_emscripten_bind_PdfWidgetAnnot_NotifyWillChange_1"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_NotifyWillChange_1");

var _emscripten_bind_PdfWidgetAnnot_NotifyDidChange_2 = Module["_emscripten_bind_PdfWidgetAnnot_NotifyDidChange_2"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot_NotifyDidChange_2");

var _emscripten_bind_PdfWidgetAnnot___destroy___0 = Module["_emscripten_bind_PdfWidgetAnnot___destroy___0"] = createExportWrapper("emscripten_bind_PdfWidgetAnnot___destroy___0");

var _emscripten_bind_PdfViewDestination_GetPageNum_1 = Module["_emscripten_bind_PdfViewDestination_GetPageNum_1"] = createExportWrapper("emscripten_bind_PdfViewDestination_GetPageNum_1");

var _emscripten_bind_PdfViewDestination_GetFitType_0 = Module["_emscripten_bind_PdfViewDestination_GetFitType_0"] = createExportWrapper("emscripten_bind_PdfViewDestination_GetFitType_0");

var _emscripten_bind_PdfViewDestination_GetBBox_1 = Module["_emscripten_bind_PdfViewDestination_GetBBox_1"] = createExportWrapper("emscripten_bind_PdfViewDestination_GetBBox_1");

var _emscripten_bind_PdfViewDestination_GetZoom_0 = Module["_emscripten_bind_PdfViewDestination_GetZoom_0"] = createExportWrapper("emscripten_bind_PdfViewDestination_GetZoom_0");

var _emscripten_bind_PdfViewDestination_GetObject_0 = Module["_emscripten_bind_PdfViewDestination_GetObject_0"] = createExportWrapper("emscripten_bind_PdfViewDestination_GetObject_0");

var _emscripten_bind_PdfViewDestination___destroy___0 = Module["_emscripten_bind_PdfViewDestination___destroy___0"] = createExportWrapper("emscripten_bind_PdfViewDestination___destroy___0");

var _emscripten_bind_PdfDigSig_SetPfxFile_2 = Module["_emscripten_bind_PdfDigSig_SetPfxFile_2"] = createExportWrapper("emscripten_bind_PdfDigSig_SetPfxFile_2");

var _emscripten_bind_PdfDigSig_Destroy_0 = Module["_emscripten_bind_PdfDigSig_Destroy_0"] = createExportWrapper("emscripten_bind_PdfDigSig_Destroy_0");

var _emscripten_bind_PdfDigSig_SetReason_1 = Module["_emscripten_bind_PdfDigSig_SetReason_1"] = createExportWrapper("emscripten_bind_PdfDigSig_SetReason_1");

var _emscripten_bind_PdfDigSig_SetLocation_1 = Module["_emscripten_bind_PdfDigSig_SetLocation_1"] = createExportWrapper("emscripten_bind_PdfDigSig_SetLocation_1");

var _emscripten_bind_PdfDigSig_SetContactInfo_1 = Module["_emscripten_bind_PdfDigSig_SetContactInfo_1"] = createExportWrapper("emscripten_bind_PdfDigSig_SetContactInfo_1");

var _emscripten_bind_PdfDigSig_SetName_1 = Module["_emscripten_bind_PdfDigSig_SetName_1"] = createExportWrapper("emscripten_bind_PdfDigSig_SetName_1");

var _emscripten_bind_PdfDigSig_SetTimeStampServer_3 = Module["_emscripten_bind_PdfDigSig_SetTimeStampServer_3"] = createExportWrapper("emscripten_bind_PdfDigSig_SetTimeStampServer_3");

var _emscripten_bind_PdfDigSig_SignDoc_2 = Module["_emscripten_bind_PdfDigSig_SignDoc_2"] = createExportWrapper("emscripten_bind_PdfDigSig_SignDoc_2");

var _emscripten_bind_PdfDigSig___destroy___0 = Module["_emscripten_bind_PdfDigSig___destroy___0"] = createExportWrapper("emscripten_bind_PdfDigSig___destroy___0");

var _emscripten_bind_PdfCustomDigSig_RegisterDigestDataProc_2 = Module["_emscripten_bind_PdfCustomDigSig_RegisterDigestDataProc_2"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_RegisterDigestDataProc_2");

var _emscripten_bind_PdfCustomDigSig_Destroy_0 = Module["_emscripten_bind_PdfCustomDigSig_Destroy_0"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_Destroy_0");

var _emscripten_bind_PdfCustomDigSig_SetReason_1 = Module["_emscripten_bind_PdfCustomDigSig_SetReason_1"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SetReason_1");

var _emscripten_bind_PdfCustomDigSig_SetLocation_1 = Module["_emscripten_bind_PdfCustomDigSig_SetLocation_1"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SetLocation_1");

var _emscripten_bind_PdfCustomDigSig_SetContactInfo_1 = Module["_emscripten_bind_PdfCustomDigSig_SetContactInfo_1"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SetContactInfo_1");

var _emscripten_bind_PdfCustomDigSig_SetName_1 = Module["_emscripten_bind_PdfCustomDigSig_SetName_1"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SetName_1");

var _emscripten_bind_PdfCustomDigSig_SetTimeStampServer_3 = Module["_emscripten_bind_PdfCustomDigSig_SetTimeStampServer_3"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SetTimeStampServer_3");

var _emscripten_bind_PdfCustomDigSig_SignDoc_2 = Module["_emscripten_bind_PdfCustomDigSig_SignDoc_2"] = createExportWrapper("emscripten_bind_PdfCustomDigSig_SignDoc_2");

var _emscripten_bind_PdfCustomDigSig___destroy___0 = Module["_emscripten_bind_PdfCustomDigSig___destroy___0"] = createExportWrapper("emscripten_bind_PdfCustomDigSig___destroy___0");

var _emscripten_bind_PdfDoc_Save_2 = Module["_emscripten_bind_PdfDoc_Save_2"] = createExportWrapper("emscripten_bind_PdfDoc_Save_2");

var _emscripten_bind_PdfDoc_SaveToStream_2 = Module["_emscripten_bind_PdfDoc_SaveToStream_2"] = createExportWrapper("emscripten_bind_PdfDoc_SaveToStream_2");

var _emscripten_bind_PdfDoc_Close_0 = Module["_emscripten_bind_PdfDoc_Close_0"] = createExportWrapper("emscripten_bind_PdfDoc_Close_0");

var _emscripten_bind_PdfDoc_AddWatermarkFromImage_2 = Module["_emscripten_bind_PdfDoc_AddWatermarkFromImage_2"] = createExportWrapper("emscripten_bind_PdfDoc_AddWatermarkFromImage_2");

var _emscripten_bind_PdfDoc_GetNumPages_0 = Module["_emscripten_bind_PdfDoc_GetNumPages_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetNumPages_0");

var _emscripten_bind_PdfDoc_AcquirePage_1 = Module["_emscripten_bind_PdfDoc_AcquirePage_1"] = createExportWrapper("emscripten_bind_PdfDoc_AcquirePage_1");

var _emscripten_bind_PdfDoc_CreatePage_2 = Module["_emscripten_bind_PdfDoc_CreatePage_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreatePage_2");

var _emscripten_bind_PdfDoc_DeletePages_4 = Module["_emscripten_bind_PdfDoc_DeletePages_4"] = createExportWrapper("emscripten_bind_PdfDoc_DeletePages_4");

var _emscripten_bind_PdfDoc_InsertPages_7 = Module["_emscripten_bind_PdfDoc_InsertPages_7"] = createExportWrapper("emscripten_bind_PdfDoc_InsertPages_7");

var _emscripten_bind_PdfDoc_MovePage_2 = Module["_emscripten_bind_PdfDoc_MovePage_2"] = createExportWrapper("emscripten_bind_PdfDoc_MovePage_2");

var _emscripten_bind_PdfDoc_GetNumDocumentJavaScripts_0 = Module["_emscripten_bind_PdfDoc_GetNumDocumentJavaScripts_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetNumDocumentJavaScripts_0");

var _emscripten_bind_PdfDoc_GetDocumentJavaScript_3 = Module["_emscripten_bind_PdfDoc_GetDocumentJavaScript_3"] = createExportWrapper("emscripten_bind_PdfDoc_GetDocumentJavaScript_3");

var _emscripten_bind_PdfDoc_GetDocumentJavaScriptName_3 = Module["_emscripten_bind_PdfDoc_GetDocumentJavaScriptName_3"] = createExportWrapper("emscripten_bind_PdfDoc_GetDocumentJavaScriptName_3");

var _emscripten_bind_PdfDoc_GetNumCalculatedFormFields_0 = Module["_emscripten_bind_PdfDoc_GetNumCalculatedFormFields_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetNumCalculatedFormFields_0");

var _emscripten_bind_PdfDoc_GetCalculatedFormField_1 = Module["_emscripten_bind_PdfDoc_GetCalculatedFormField_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetCalculatedFormField_1");

var _emscripten_bind_PdfDoc_GetNumFormFields_0 = Module["_emscripten_bind_PdfDoc_GetNumFormFields_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetNumFormFields_0");

var _emscripten_bind_PdfDoc_GetFormField_1 = Module["_emscripten_bind_PdfDoc_GetFormField_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetFormField_1");

var _emscripten_bind_PdfDoc_GetFormFieldByName_1 = Module["_emscripten_bind_PdfDoc_GetFormFieldByName_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetFormFieldByName_1");

var _emscripten_bind_PdfDoc_GetInfo_3 = Module["_emscripten_bind_PdfDoc_GetInfo_3"] = createExportWrapper("emscripten_bind_PdfDoc_GetInfo_3");

var _emscripten_bind_PdfDoc_SetInfo_2 = Module["_emscripten_bind_PdfDoc_SetInfo_2"] = createExportWrapper("emscripten_bind_PdfDoc_SetInfo_2");

var _emscripten_bind_PdfDoc_GetBookmarkRoot_0 = Module["_emscripten_bind_PdfDoc_GetBookmarkRoot_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetBookmarkRoot_0");

var _emscripten_bind_PdfDoc_FlattenAnnots_1 = Module["_emscripten_bind_PdfDoc_FlattenAnnots_1"] = createExportWrapper("emscripten_bind_PdfDoc_FlattenAnnots_1");

var _emscripten_bind_PdfDoc_ApplyRedaction_0 = Module["_emscripten_bind_PdfDoc_ApplyRedaction_0"] = createExportWrapper("emscripten_bind_PdfDoc_ApplyRedaction_0");

var _emscripten_bind_PdfDoc_GetNumAlternates_0 = Module["_emscripten_bind_PdfDoc_GetNumAlternates_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetNumAlternates_0");

var _emscripten_bind_PdfDoc_AcquireAlternate_1 = Module["_emscripten_bind_PdfDoc_AcquireAlternate_1"] = createExportWrapper("emscripten_bind_PdfDoc_AcquireAlternate_1");

var _emscripten_bind_PdfDoc_CreatePdsObject_2 = Module["_emscripten_bind_PdfDoc_CreatePdsObject_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreatePdsObject_2");

var _emscripten_bind_PdfDoc_AddTags_2 = Module["_emscripten_bind_PdfDoc_AddTags_2"] = createExportWrapper("emscripten_bind_PdfDoc_AddTags_2");

var _emscripten_bind_PdfDoc_RemoveTags_2 = Module["_emscripten_bind_PdfDoc_RemoveTags_2"] = createExportWrapper("emscripten_bind_PdfDoc_RemoveTags_2");

var _emscripten_bind_PdfDoc_GetTemplate_0 = Module["_emscripten_bind_PdfDoc_GetTemplate_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetTemplate_0");

var _emscripten_bind_PdfDoc_GetMetadata_0 = Module["_emscripten_bind_PdfDoc_GetMetadata_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetMetadata_0");

var _emscripten_bind_PdfDoc_GetLang_2 = Module["_emscripten_bind_PdfDoc_GetLang_2"] = createExportWrapper("emscripten_bind_PdfDoc_GetLang_2");

var _emscripten_bind_PdfDoc_SetLang_1 = Module["_emscripten_bind_PdfDoc_SetLang_1"] = createExportWrapper("emscripten_bind_PdfDoc_SetLang_1");

var _emscripten_bind_PdfDoc_EmbedFonts_3 = Module["_emscripten_bind_PdfDoc_EmbedFonts_3"] = createExportWrapper("emscripten_bind_PdfDoc_EmbedFonts_3");

var _emscripten_bind_PdfDoc_MakeAccessible_3 = Module["_emscripten_bind_PdfDoc_MakeAccessible_3"] = createExportWrapper("emscripten_bind_PdfDoc_MakeAccessible_3");

var _emscripten_bind_PdfDoc_GetTrailerObject_0 = Module["_emscripten_bind_PdfDoc_GetTrailerObject_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetTrailerObject_0");

var _emscripten_bind_PdfDoc_GetRootObject_0 = Module["_emscripten_bind_PdfDoc_GetRootObject_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetRootObject_0");

var _emscripten_bind_PdfDoc_GetInfoObject_0 = Module["_emscripten_bind_PdfDoc_GetInfoObject_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetInfoObject_0");

var _emscripten_bind_PdfDoc_CreateDictObject_1 = Module["_emscripten_bind_PdfDoc_CreateDictObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_CreateDictObject_1");

var _emscripten_bind_PdfDoc_CreateArrayObject_1 = Module["_emscripten_bind_PdfDoc_CreateArrayObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_CreateArrayObject_1");

var _emscripten_bind_PdfDoc_CreateNameObject_2 = Module["_emscripten_bind_PdfDoc_CreateNameObject_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreateNameObject_2");

var _emscripten_bind_PdfDoc_CreateStringObject_3 = Module["_emscripten_bind_PdfDoc_CreateStringObject_3"] = createExportWrapper("emscripten_bind_PdfDoc_CreateStringObject_3");

var _emscripten_bind_PdfDoc_CreateIntObject_2 = Module["_emscripten_bind_PdfDoc_CreateIntObject_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreateIntObject_2");

var _emscripten_bind_PdfDoc_CreateNumberObject_2 = Module["_emscripten_bind_PdfDoc_CreateNumberObject_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreateNumberObject_2");

var _emscripten_bind_PdfDoc_CreateStreamObject_4 = Module["_emscripten_bind_PdfDoc_CreateStreamObject_4"] = createExportWrapper("emscripten_bind_PdfDoc_CreateStreamObject_4");

var _emscripten_bind_PdfDoc_CreateXObjectFromImage_2 = Module["_emscripten_bind_PdfDoc_CreateXObjectFromImage_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreateXObjectFromImage_2");

var _emscripten_bind_PdfDoc_GetObjectById_1 = Module["_emscripten_bind_PdfDoc_GetObjectById_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetObjectById_1");

var _emscripten_bind_PdfDoc_CreateStructTree_0 = Module["_emscripten_bind_PdfDoc_CreateStructTree_0"] = createExportWrapper("emscripten_bind_PdfDoc_CreateStructTree_0");

var _emscripten_bind_PdfDoc_GetStructTree_0 = Module["_emscripten_bind_PdfDoc_GetStructTree_0"] = createExportWrapper("emscripten_bind_PdfDoc_GetStructTree_0");

var _emscripten_bind_PdfDoc_RemoveStructTree_0 = Module["_emscripten_bind_PdfDoc_RemoveStructTree_0"] = createExportWrapper("emscripten_bind_PdfDoc_RemoveStructTree_0");

var _emscripten_bind_PdfDoc_RemoveBookmarks_0 = Module["_emscripten_bind_PdfDoc_RemoveBookmarks_0"] = createExportWrapper("emscripten_bind_PdfDoc_RemoveBookmarks_0");

var _emscripten_bind_PdfDoc_CreateBookmarks_2 = Module["_emscripten_bind_PdfDoc_CreateBookmarks_2"] = createExportWrapper("emscripten_bind_PdfDoc_CreateBookmarks_2");

var _emscripten_bind_PdfDoc_AddFontMissingUnicode_2 = Module["_emscripten_bind_PdfDoc_AddFontMissingUnicode_2"] = createExportWrapper("emscripten_bind_PdfDoc_AddFontMissingUnicode_2");

var _emscripten_bind_PdfDoc_GetNameTree_2 = Module["_emscripten_bind_PdfDoc_GetNameTree_2"] = createExportWrapper("emscripten_bind_PdfDoc_GetNameTree_2");

var _emscripten_bind_PdfDoc_RemoveNameTree_1 = Module["_emscripten_bind_PdfDoc_RemoveNameTree_1"] = createExportWrapper("emscripten_bind_PdfDoc_RemoveNameTree_1");

var _emscripten_bind_PdfDoc_GetPageNumFromObject_1 = Module["_emscripten_bind_PdfDoc_GetPageNumFromObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetPageNumFromObject_1");

var _emscripten_bind_PdfDoc_GetAnnotFromObject_1 = Module["_emscripten_bind_PdfDoc_GetAnnotFromObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetAnnotFromObject_1");

var _emscripten_bind_PdfDoc_GetActionFromObject_1 = Module["_emscripten_bind_PdfDoc_GetActionFromObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetActionFromObject_1");

var _emscripten_bind_PdfDoc_GetViewDestinationFromObject_1 = Module["_emscripten_bind_PdfDoc_GetViewDestinationFromObject_1"] = createExportWrapper("emscripten_bind_PdfDoc_GetViewDestinationFromObject_1");

var _emscripten_bind_PdfDoc___destroy___0 = Module["_emscripten_bind_PdfDoc___destroy___0"] = createExportWrapper("emscripten_bind_PdfDoc___destroy___0");

var _emscripten_bind_PdfDocTemplate_Update_2 = Module["_emscripten_bind_PdfDocTemplate_Update_2"] = createExportWrapper("emscripten_bind_PdfDocTemplate_Update_2");

var _emscripten_bind_PdfDocTemplate_LoadFromStream_2 = Module["_emscripten_bind_PdfDocTemplate_LoadFromStream_2"] = createExportWrapper("emscripten_bind_PdfDocTemplate_LoadFromStream_2");

var _emscripten_bind_PdfDocTemplate_SaveToStream_2 = Module["_emscripten_bind_PdfDocTemplate_SaveToStream_2"] = createExportWrapper("emscripten_bind_PdfDocTemplate_SaveToStream_2");

var _emscripten_bind_PdfDocTemplate_SetDefaults_0 = Module["_emscripten_bind_PdfDocTemplate_SetDefaults_0"] = createExportWrapper("emscripten_bind_PdfDocTemplate_SetDefaults_0");

var _emscripten_bind_PdfDocTemplate_GetProperty_1 = Module["_emscripten_bind_PdfDocTemplate_GetProperty_1"] = createExportWrapper("emscripten_bind_PdfDocTemplate_GetProperty_1");

var _emscripten_bind_PdfDocTemplate_SetProperty_2 = Module["_emscripten_bind_PdfDocTemplate_SetProperty_2"] = createExportWrapper("emscripten_bind_PdfDocTemplate_SetProperty_2");

var _emscripten_bind_PdfDocTemplate_GetRegex_3 = Module["_emscripten_bind_PdfDocTemplate_GetRegex_3"] = createExportWrapper("emscripten_bind_PdfDocTemplate_GetRegex_3");

var _emscripten_bind_PdfDocTemplate_SetRegex_2 = Module["_emscripten_bind_PdfDocTemplate_SetRegex_2"] = createExportWrapper("emscripten_bind_PdfDocTemplate_SetRegex_2");

var _emscripten_bind_PdfDocTemplate_AddPage_3 = Module["_emscripten_bind_PdfDocTemplate_AddPage_3"] = createExportWrapper("emscripten_bind_PdfDocTemplate_AddPage_3");

var _emscripten_bind_PdfDocTemplate_GetPageTemplate_1 = Module["_emscripten_bind_PdfDocTemplate_GetPageTemplate_1"] = createExportWrapper("emscripten_bind_PdfDocTemplate_GetPageTemplate_1");

var _emscripten_bind_PdfDocTemplate___destroy___0 = Module["_emscripten_bind_PdfDocTemplate___destroy___0"] = createExportWrapper("emscripten_bind_PdfDocTemplate___destroy___0");

var _emscripten_bind_PdfPageTemplate_GetPageNum_0 = Module["_emscripten_bind_PdfPageTemplate_GetPageNum_0"] = createExportWrapper("emscripten_bind_PdfPageTemplate_GetPageNum_0");

var _emscripten_bind_PdfPageTemplate_GetLogicalRotate_0 = Module["_emscripten_bind_PdfPageTemplate_GetLogicalRotate_0"] = createExportWrapper("emscripten_bind_PdfPageTemplate_GetLogicalRotate_0");

var _emscripten_bind_PdfPageTemplate_GetNumColumns_0 = Module["_emscripten_bind_PdfPageTemplate_GetNumColumns_0"] = createExportWrapper("emscripten_bind_PdfPageTemplate_GetNumColumns_0");

var _emscripten_bind_PdfPageTemplate_GetHeaderBBox_1 = Module["_emscripten_bind_PdfPageTemplate_GetHeaderBBox_1"] = createExportWrapper("emscripten_bind_PdfPageTemplate_GetHeaderBBox_1");

var _emscripten_bind_PdfPageTemplate_GetFooterBBox_1 = Module["_emscripten_bind_PdfPageTemplate_GetFooterBBox_1"] = createExportWrapper("emscripten_bind_PdfPageTemplate_GetFooterBBox_1");

var _emscripten_bind_PdfPageTemplate___destroy___0 = Module["_emscripten_bind_PdfPageTemplate___destroy___0"] = createExportWrapper("emscripten_bind_PdfPageTemplate___destroy___0");

var _emscripten_bind_PdfHtmlAlternate_SaveResource_2 = Module["_emscripten_bind_PdfHtmlAlternate_SaveResource_2"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_SaveResource_2");

var _emscripten_bind_PdfHtmlAlternate_GetSubtype_0 = Module["_emscripten_bind_PdfHtmlAlternate_GetSubtype_0"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_GetSubtype_0");

var _emscripten_bind_PdfHtmlAlternate_GetName_2 = Module["_emscripten_bind_PdfHtmlAlternate_GetName_2"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_GetName_2");

var _emscripten_bind_PdfHtmlAlternate_GetDescription_2 = Module["_emscripten_bind_PdfHtmlAlternate_GetDescription_2"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_GetDescription_2");

var _emscripten_bind_PdfHtmlAlternate_GetFileName_2 = Module["_emscripten_bind_PdfHtmlAlternate_GetFileName_2"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_GetFileName_2");

var _emscripten_bind_PdfHtmlAlternate_SaveContent_1 = Module["_emscripten_bind_PdfHtmlAlternate_SaveContent_1"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_SaveContent_1");

var _emscripten_bind_PdfHtmlAlternate_Release_0 = Module["_emscripten_bind_PdfHtmlAlternate_Release_0"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate_Release_0");

var _emscripten_bind_PdfHtmlAlternate___destroy___0 = Module["_emscripten_bind_PdfHtmlAlternate___destroy___0"] = createExportWrapper("emscripten_bind_PdfHtmlAlternate___destroy___0");

var _emscripten_bind_PdfFont_GetFontName_2 = Module["_emscripten_bind_PdfFont_GetFontName_2"] = createExportWrapper("emscripten_bind_PdfFont_GetFontName_2");

var _emscripten_bind_PdfFont_GetFaceName_2 = Module["_emscripten_bind_PdfFont_GetFaceName_2"] = createExportWrapper("emscripten_bind_PdfFont_GetFaceName_2");

var _emscripten_bind_PdfFont_GetFontState_1 = Module["_emscripten_bind_PdfFont_GetFontState_1"] = createExportWrapper("emscripten_bind_PdfFont_GetFontState_1");

var _emscripten_bind_PdfFont_GetSystemFontName_2 = Module["_emscripten_bind_PdfFont_GetSystemFontName_2"] = createExportWrapper("emscripten_bind_PdfFont_GetSystemFontName_2");

var _emscripten_bind_PdfFont_GetSystemFontCharset_0 = Module["_emscripten_bind_PdfFont_GetSystemFontCharset_0"] = createExportWrapper("emscripten_bind_PdfFont_GetSystemFontCharset_0");

var _emscripten_bind_PdfFont_GetSystemFontBold_0 = Module["_emscripten_bind_PdfFont_GetSystemFontBold_0"] = createExportWrapper("emscripten_bind_PdfFont_GetSystemFontBold_0");

var _emscripten_bind_PdfFont_GetSystemFontItalic_0 = Module["_emscripten_bind_PdfFont_GetSystemFontItalic_0"] = createExportWrapper("emscripten_bind_PdfFont_GetSystemFontItalic_0");

var _emscripten_bind_PdfFont___destroy___0 = Module["_emscripten_bind_PdfFont___destroy___0"] = createExportWrapper("emscripten_bind_PdfFont___destroy___0");

var _emscripten_bind_PdfFormField_GetType_0 = Module["_emscripten_bind_PdfFormField_GetType_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetType_0");

var _emscripten_bind_PdfFormField_GetFlags_0 = Module["_emscripten_bind_PdfFormField_GetFlags_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetFlags_0");

var _emscripten_bind_PdfFormField_SetFlags_1 = Module["_emscripten_bind_PdfFormField_SetFlags_1"] = createExportWrapper("emscripten_bind_PdfFormField_SetFlags_1");

var _emscripten_bind_PdfFormField_GetValue_2 = Module["_emscripten_bind_PdfFormField_GetValue_2"] = createExportWrapper("emscripten_bind_PdfFormField_GetValue_2");

var _emscripten_bind_PdfFormField_SetValue_1 = Module["_emscripten_bind_PdfFormField_SetValue_1"] = createExportWrapper("emscripten_bind_PdfFormField_SetValue_1");

var _emscripten_bind_PdfFormField_GetDefaultValue_2 = Module["_emscripten_bind_PdfFormField_GetDefaultValue_2"] = createExportWrapper("emscripten_bind_PdfFormField_GetDefaultValue_2");

var _emscripten_bind_PdfFormField_GetFullName_2 = Module["_emscripten_bind_PdfFormField_GetFullName_2"] = createExportWrapper("emscripten_bind_PdfFormField_GetFullName_2");

var _emscripten_bind_PdfFormField_GetTooltip_2 = Module["_emscripten_bind_PdfFormField_GetTooltip_2"] = createExportWrapper("emscripten_bind_PdfFormField_GetTooltip_2");

var _emscripten_bind_PdfFormField_GetNumOptions_0 = Module["_emscripten_bind_PdfFormField_GetNumOptions_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetNumOptions_0");

var _emscripten_bind_PdfFormField_GetOptionValue_3 = Module["_emscripten_bind_PdfFormField_GetOptionValue_3"] = createExportWrapper("emscripten_bind_PdfFormField_GetOptionValue_3");

var _emscripten_bind_PdfFormField_GetOptionCaption_3 = Module["_emscripten_bind_PdfFormField_GetOptionCaption_3"] = createExportWrapper("emscripten_bind_PdfFormField_GetOptionCaption_3");

var _emscripten_bind_PdfFormField_GetAction_0 = Module["_emscripten_bind_PdfFormField_GetAction_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetAction_0");

var _emscripten_bind_PdfFormField_GetAAction_1 = Module["_emscripten_bind_PdfFormField_GetAAction_1"] = createExportWrapper("emscripten_bind_PdfFormField_GetAAction_1");

var _emscripten_bind_PdfFormField_GetMaxLength_0 = Module["_emscripten_bind_PdfFormField_GetMaxLength_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetMaxLength_0");

var _emscripten_bind_PdfFormField_GetWidgetExportValue_3 = Module["_emscripten_bind_PdfFormField_GetWidgetExportValue_3"] = createExportWrapper("emscripten_bind_PdfFormField_GetWidgetExportValue_3");

var _emscripten_bind_PdfFormField_GetObject_0 = Module["_emscripten_bind_PdfFormField_GetObject_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetObject_0");

var _emscripten_bind_PdfFormField_GetNumExportValues_0 = Module["_emscripten_bind_PdfFormField_GetNumExportValues_0"] = createExportWrapper("emscripten_bind_PdfFormField_GetNumExportValues_0");

var _emscripten_bind_PdfFormField_GetExportValue_3 = Module["_emscripten_bind_PdfFormField_GetExportValue_3"] = createExportWrapper("emscripten_bind_PdfFormField_GetExportValue_3");

var _emscripten_bind_PdfFormField___destroy___0 = Module["_emscripten_bind_PdfFormField___destroy___0"] = createExportWrapper("emscripten_bind_PdfFormField___destroy___0");

var _emscripten_bind_PdfPage_Release_0 = Module["_emscripten_bind_PdfPage_Release_0"] = createExportWrapper("emscripten_bind_PdfPage_Release_0");

var _emscripten_bind_PdfPage_GetCropBox_1 = Module["_emscripten_bind_PdfPage_GetCropBox_1"] = createExportWrapper("emscripten_bind_PdfPage_GetCropBox_1");

var _emscripten_bind_PdfPage_GetMediaBox_1 = Module["_emscripten_bind_PdfPage_GetMediaBox_1"] = createExportWrapper("emscripten_bind_PdfPage_GetMediaBox_1");

var _emscripten_bind_PdfPage_GetRotate_0 = Module["_emscripten_bind_PdfPage_GetRotate_0"] = createExportWrapper("emscripten_bind_PdfPage_GetRotate_0");

var _emscripten_bind_PdfPage_SetRotate_1 = Module["_emscripten_bind_PdfPage_SetRotate_1"] = createExportWrapper("emscripten_bind_PdfPage_SetRotate_1");

var _emscripten_bind_PdfPage_GetLogicalRotate_0 = Module["_emscripten_bind_PdfPage_GetLogicalRotate_0"] = createExportWrapper("emscripten_bind_PdfPage_GetLogicalRotate_0");

var _emscripten_bind_PdfPage_GetDefaultMatrix_1 = Module["_emscripten_bind_PdfPage_GetDefaultMatrix_1"] = createExportWrapper("emscripten_bind_PdfPage_GetDefaultMatrix_1");

var _emscripten_bind_PdfPage_GetNumber_0 = Module["_emscripten_bind_PdfPage_GetNumber_0"] = createExportWrapper("emscripten_bind_PdfPage_GetNumber_0");

var _emscripten_bind_PdfPage_CreatePageMap_0 = Module["_emscripten_bind_PdfPage_CreatePageMap_0"] = createExportWrapper("emscripten_bind_PdfPage_CreatePageMap_0");

var _emscripten_bind_PdfPage_AcquirePageMap_2 = Module["_emscripten_bind_PdfPage_AcquirePageMap_2"] = createExportWrapper("emscripten_bind_PdfPage_AcquirePageMap_2");

var _emscripten_bind_PdfPage_AcquirePageView_2 = Module["_emscripten_bind_PdfPage_AcquirePageView_2"] = createExportWrapper("emscripten_bind_PdfPage_AcquirePageView_2");

var _emscripten_bind_PdfPage_GetNumAnnots_0 = Module["_emscripten_bind_PdfPage_GetNumAnnots_0"] = createExportWrapper("emscripten_bind_PdfPage_GetNumAnnots_0");

var _emscripten_bind_PdfPage_GetAnnot_1 = Module["_emscripten_bind_PdfPage_GetAnnot_1"] = createExportWrapper("emscripten_bind_PdfPage_GetAnnot_1");

var _emscripten_bind_PdfPage_RemoveAnnot_2 = Module["_emscripten_bind_PdfPage_RemoveAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_RemoveAnnot_2");

var _emscripten_bind_PdfPage_AddAnnot_2 = Module["_emscripten_bind_PdfPage_AddAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_AddAnnot_2");

var _emscripten_bind_PdfPage_CreateAnnot_2 = Module["_emscripten_bind_PdfPage_CreateAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_CreateAnnot_2");

var _emscripten_bind_PdfPage_CreateTextAnnot_1 = Module["_emscripten_bind_PdfPage_CreateTextAnnot_1"] = createExportWrapper("emscripten_bind_PdfPage_CreateTextAnnot_1");

var _emscripten_bind_PdfPage_CreateTextMarkupAnnot_2 = Module["_emscripten_bind_PdfPage_CreateTextMarkupAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_CreateTextMarkupAnnot_2");

var _emscripten_bind_PdfPage_AddNewTextAnnot_2 = Module["_emscripten_bind_PdfPage_AddNewTextAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_AddNewTextAnnot_2");

var _emscripten_bind_PdfPage_AddNewLinkAnnot_2 = Module["_emscripten_bind_PdfPage_AddNewLinkAnnot_2"] = createExportWrapper("emscripten_bind_PdfPage_AddNewLinkAnnot_2");

var _emscripten_bind_PdfPage_AddNewTextMarkupAnnot_3 = Module["_emscripten_bind_PdfPage_AddNewTextMarkupAnnot_3"] = createExportWrapper("emscripten_bind_PdfPage_AddNewTextMarkupAnnot_3");

var _emscripten_bind_PdfPage_AddNewAnnot_3 = Module["_emscripten_bind_PdfPage_AddNewAnnot_3"] = createExportWrapper("emscripten_bind_PdfPage_AddNewAnnot_3");

var _emscripten_bind_PdfPage_GetNumAnnotsAtPoint_1 = Module["_emscripten_bind_PdfPage_GetNumAnnotsAtPoint_1"] = createExportWrapper("emscripten_bind_PdfPage_GetNumAnnotsAtPoint_1");

var _emscripten_bind_PdfPage_GetAnnotAtPoint_2 = Module["_emscripten_bind_PdfPage_GetAnnotAtPoint_2"] = createExportWrapper("emscripten_bind_PdfPage_GetAnnotAtPoint_2");

var _emscripten_bind_PdfPage_GetNumAnnotsAtRect_1 = Module["_emscripten_bind_PdfPage_GetNumAnnotsAtRect_1"] = createExportWrapper("emscripten_bind_PdfPage_GetNumAnnotsAtRect_1");

var _emscripten_bind_PdfPage_GetAnnotAtRect_2 = Module["_emscripten_bind_PdfPage_GetAnnotAtRect_2"] = createExportWrapper("emscripten_bind_PdfPage_GetAnnotAtRect_2");

var _emscripten_bind_PdfPage_DrawContent_3 = Module["_emscripten_bind_PdfPage_DrawContent_3"] = createExportWrapper("emscripten_bind_PdfPage_DrawContent_3");

var _emscripten_bind_PdfPage_GetContent_0 = Module["_emscripten_bind_PdfPage_GetContent_0"] = createExportWrapper("emscripten_bind_PdfPage_GetContent_0");

var _emscripten_bind_PdfPage_GetResources_2 = Module["_emscripten_bind_PdfPage_GetResources_2"] = createExportWrapper("emscripten_bind_PdfPage_GetResources_2");

var _emscripten_bind_PdfPage_GetObject_0 = Module["_emscripten_bind_PdfPage_GetObject_0"] = createExportWrapper("emscripten_bind_PdfPage_GetObject_0");

var _emscripten_bind_PdfPage_FlattenFormXObjects_0 = Module["_emscripten_bind_PdfPage_FlattenFormXObjects_0"] = createExportWrapper("emscripten_bind_PdfPage_FlattenFormXObjects_0");

var _emscripten_bind_PdfPage_GetContentFlags_0 = Module["_emscripten_bind_PdfPage_GetContentFlags_0"] = createExportWrapper("emscripten_bind_PdfPage_GetContentFlags_0");

var _emscripten_bind_PdfPage_SetContent_0 = Module["_emscripten_bind_PdfPage_SetContent_0"] = createExportWrapper("emscripten_bind_PdfPage_SetContent_0");

var _emscripten_bind_PdfPage_GetDoc_0 = Module["_emscripten_bind_PdfPage_GetDoc_0"] = createExportWrapper("emscripten_bind_PdfPage_GetDoc_0");

var _emscripten_bind_PdfPage___destroy___0 = Module["_emscripten_bind_PdfPage___destroy___0"] = createExportWrapper("emscripten_bind_PdfPage___destroy___0");

var _emscripten_bind_PdePageMap_Release_0 = Module["_emscripten_bind_PdePageMap_Release_0"] = createExportWrapper("emscripten_bind_PdePageMap_Release_0");

var _emscripten_bind_PdePageMap_GetElement_0 = Module["_emscripten_bind_PdePageMap_GetElement_0"] = createExportWrapper("emscripten_bind_PdePageMap_GetElement_0");

var _emscripten_bind_PdePageMap_GetWhitespace_3 = Module["_emscripten_bind_PdePageMap_GetWhitespace_3"] = createExportWrapper("emscripten_bind_PdePageMap_GetWhitespace_3");

var _emscripten_bind_PdePageMap_GetBBox_1 = Module["_emscripten_bind_PdePageMap_GetBBox_1"] = createExportWrapper("emscripten_bind_PdePageMap_GetBBox_1");

var _emscripten_bind_PdePageMap_AcquireElements_2 = Module["_emscripten_bind_PdePageMap_AcquireElements_2"] = createExportWrapper("emscripten_bind_PdePageMap_AcquireElements_2");

var _emscripten_bind_PdePageMap_CreateElement_2 = Module["_emscripten_bind_PdePageMap_CreateElement_2"] = createExportWrapper("emscripten_bind_PdePageMap_CreateElement_2");

var _emscripten_bind_PdePageMap_AddTags_3 = Module["_emscripten_bind_PdePageMap_AddTags_3"] = createExportWrapper("emscripten_bind_PdePageMap_AddTags_3");

var _emscripten_bind_PdePageMap_GetPage_0 = Module["_emscripten_bind_PdePageMap_GetPage_0"] = createExportWrapper("emscripten_bind_PdePageMap_GetPage_0");

var _emscripten_bind_PdePageMap___destroy___0 = Module["_emscripten_bind_PdePageMap___destroy___0"] = createExportWrapper("emscripten_bind_PdePageMap___destroy___0");

var _emscripten_bind_PdfPageView_Release_0 = Module["_emscripten_bind_PdfPageView_Release_0"] = createExportWrapper("emscripten_bind_PdfPageView_Release_0");

var _emscripten_bind_PdfPageView_GetDeviceWidth_0 = Module["_emscripten_bind_PdfPageView_GetDeviceWidth_0"] = createExportWrapper("emscripten_bind_PdfPageView_GetDeviceWidth_0");

var _emscripten_bind_PdfPageView_GetDeviceHeight_0 = Module["_emscripten_bind_PdfPageView_GetDeviceHeight_0"] = createExportWrapper("emscripten_bind_PdfPageView_GetDeviceHeight_0");

var _emscripten_bind_PdfPageView_GetDeviceMatrix_1 = Module["_emscripten_bind_PdfPageView_GetDeviceMatrix_1"] = createExportWrapper("emscripten_bind_PdfPageView_GetDeviceMatrix_1");

var _emscripten_bind_PdfPageView_RectToDevice_2 = Module["_emscripten_bind_PdfPageView_RectToDevice_2"] = createExportWrapper("emscripten_bind_PdfPageView_RectToDevice_2");

var _emscripten_bind_PdfPageView_PointToDevice_2 = Module["_emscripten_bind_PdfPageView_PointToDevice_2"] = createExportWrapper("emscripten_bind_PdfPageView_PointToDevice_2");

var _emscripten_bind_PdfPageView_RectToPage_2 = Module["_emscripten_bind_PdfPageView_RectToPage_2"] = createExportWrapper("emscripten_bind_PdfPageView_RectToPage_2");

var _emscripten_bind_PdfPageView_PointToPage_2 = Module["_emscripten_bind_PdfPageView_PointToPage_2"] = createExportWrapper("emscripten_bind_PdfPageView_PointToPage_2");

var _emscripten_bind_PdfPageView___destroy___0 = Module["_emscripten_bind_PdfPageView___destroy___0"] = createExportWrapper("emscripten_bind_PdfPageView___destroy___0");

var _emscripten_bind_PdfBookmark_GetTitle_2 = Module["_emscripten_bind_PdfBookmark_GetTitle_2"] = createExportWrapper("emscripten_bind_PdfBookmark_GetTitle_2");

var _emscripten_bind_PdfBookmark_GetAppearance_1 = Module["_emscripten_bind_PdfBookmark_GetAppearance_1"] = createExportWrapper("emscripten_bind_PdfBookmark_GetAppearance_1");

var _emscripten_bind_PdfBookmark_GetAction_0 = Module["_emscripten_bind_PdfBookmark_GetAction_0"] = createExportWrapper("emscripten_bind_PdfBookmark_GetAction_0");

var _emscripten_bind_PdfBookmark_GetNumChildren_0 = Module["_emscripten_bind_PdfBookmark_GetNumChildren_0"] = createExportWrapper("emscripten_bind_PdfBookmark_GetNumChildren_0");

var _emscripten_bind_PdfBookmark_GetChild_1 = Module["_emscripten_bind_PdfBookmark_GetChild_1"] = createExportWrapper("emscripten_bind_PdfBookmark_GetChild_1");

var _emscripten_bind_PdfBookmark_GetParent_0 = Module["_emscripten_bind_PdfBookmark_GetParent_0"] = createExportWrapper("emscripten_bind_PdfBookmark_GetParent_0");

var _emscripten_bind_PdfBookmark___destroy___0 = Module["_emscripten_bind_PdfBookmark___destroy___0"] = createExportWrapper("emscripten_bind_PdfBookmark___destroy___0");

var _emscripten_bind_PdfNameTree_GetObject_0 = Module["_emscripten_bind_PdfNameTree_GetObject_0"] = createExportWrapper("emscripten_bind_PdfNameTree_GetObject_0");

var _emscripten_bind_PdfNameTree_Lookup_1 = Module["_emscripten_bind_PdfNameTree_Lookup_1"] = createExportWrapper("emscripten_bind_PdfNameTree_Lookup_1");

var _emscripten_bind_PdfNameTree___destroy___0 = Module["_emscripten_bind_PdfNameTree___destroy___0"] = createExportWrapper("emscripten_bind_PdfNameTree___destroy___0");

var _emscripten_bind_PsRegex_Destroy_0 = Module["_emscripten_bind_PsRegex_Destroy_0"] = createExportWrapper("emscripten_bind_PsRegex_Destroy_0");

var _emscripten_bind_PsRegex_SetPattern_1 = Module["_emscripten_bind_PsRegex_SetPattern_1"] = createExportWrapper("emscripten_bind_PsRegex_SetPattern_1");

var _emscripten_bind_PsRegex_Search_2 = Module["_emscripten_bind_PsRegex_Search_2"] = createExportWrapper("emscripten_bind_PsRegex_Search_2");

var _emscripten_bind_PsRegex_GetText_2 = Module["_emscripten_bind_PsRegex_GetText_2"] = createExportWrapper("emscripten_bind_PsRegex_GetText_2");

var _emscripten_bind_PsRegex_GetPosition_0 = Module["_emscripten_bind_PsRegex_GetPosition_0"] = createExportWrapper("emscripten_bind_PsRegex_GetPosition_0");

var _emscripten_bind_PsRegex_GetLength_0 = Module["_emscripten_bind_PsRegex_GetLength_0"] = createExportWrapper("emscripten_bind_PsRegex_GetLength_0");

var _emscripten_bind_PsRegex_GetNumMatches_0 = Module["_emscripten_bind_PsRegex_GetNumMatches_0"] = createExportWrapper("emscripten_bind_PsRegex_GetNumMatches_0");

var _emscripten_bind_PsRegex_GetMatchText_3 = Module["_emscripten_bind_PsRegex_GetMatchText_3"] = createExportWrapper("emscripten_bind_PsRegex_GetMatchText_3");

var _emscripten_bind_PsRegex___destroy___0 = Module["_emscripten_bind_PsRegex___destroy___0"] = createExportWrapper("emscripten_bind_PsRegex___destroy___0");

var _emscripten_bind_PsFileStream_Destroy_0 = Module["_emscripten_bind_PsFileStream_Destroy_0"] = createExportWrapper("emscripten_bind_PsFileStream_Destroy_0");

var _emscripten_bind_PsFileStream_IsEof_0 = Module["_emscripten_bind_PsFileStream_IsEof_0"] = createExportWrapper("emscripten_bind_PsFileStream_IsEof_0");

var _emscripten_bind_PsFileStream_GetSize_0 = Module["_emscripten_bind_PsFileStream_GetSize_0"] = createExportWrapper("emscripten_bind_PsFileStream_GetSize_0");

var _emscripten_bind_PsFileStream_Read_3 = Module["_emscripten_bind_PsFileStream_Read_3"] = createExportWrapper("emscripten_bind_PsFileStream_Read_3");

var _emscripten_bind_PsFileStream_Write_3 = Module["_emscripten_bind_PsFileStream_Write_3"] = createExportWrapper("emscripten_bind_PsFileStream_Write_3");

var _emscripten_bind_PsFileStream_GetPos_0 = Module["_emscripten_bind_PsFileStream_GetPos_0"] = createExportWrapper("emscripten_bind_PsFileStream_GetPos_0");

var _emscripten_bind_PsFileStream_Flush_0 = Module["_emscripten_bind_PsFileStream_Flush_0"] = createExportWrapper("emscripten_bind_PsFileStream_Flush_0");

var _emscripten_bind_PsFileStream_GetStream_0 = Module["_emscripten_bind_PsFileStream_GetStream_0"] = createExportWrapper("emscripten_bind_PsFileStream_GetStream_0");

var _emscripten_bind_PsFileStream_GetType_0 = Module["_emscripten_bind_PsFileStream_GetType_0"] = createExportWrapper("emscripten_bind_PsFileStream_GetType_0");

var _emscripten_bind_PsFileStream___destroy___0 = Module["_emscripten_bind_PsFileStream___destroy___0"] = createExportWrapper("emscripten_bind_PsFileStream___destroy___0");

var _emscripten_bind_PsMemoryStream_Resize_1 = Module["_emscripten_bind_PsMemoryStream_Resize_1"] = createExportWrapper("emscripten_bind_PsMemoryStream_Resize_1");

var _emscripten_bind_PsMemoryStream_Destroy_0 = Module["_emscripten_bind_PsMemoryStream_Destroy_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_Destroy_0");

var _emscripten_bind_PsMemoryStream_IsEof_0 = Module["_emscripten_bind_PsMemoryStream_IsEof_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_IsEof_0");

var _emscripten_bind_PsMemoryStream_GetSize_0 = Module["_emscripten_bind_PsMemoryStream_GetSize_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_GetSize_0");

var _emscripten_bind_PsMemoryStream_Read_3 = Module["_emscripten_bind_PsMemoryStream_Read_3"] = createExportWrapper("emscripten_bind_PsMemoryStream_Read_3");

var _emscripten_bind_PsMemoryStream_Write_3 = Module["_emscripten_bind_PsMemoryStream_Write_3"] = createExportWrapper("emscripten_bind_PsMemoryStream_Write_3");

var _emscripten_bind_PsMemoryStream_GetPos_0 = Module["_emscripten_bind_PsMemoryStream_GetPos_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_GetPos_0");

var _emscripten_bind_PsMemoryStream_Flush_0 = Module["_emscripten_bind_PsMemoryStream_Flush_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_Flush_0");

var _emscripten_bind_PsMemoryStream_GetStream_0 = Module["_emscripten_bind_PsMemoryStream_GetStream_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_GetStream_0");

var _emscripten_bind_PsMemoryStream_GetType_0 = Module["_emscripten_bind_PsMemoryStream_GetType_0"] = createExportWrapper("emscripten_bind_PsMemoryStream_GetType_0");

var _emscripten_bind_PsMemoryStream___destroy___0 = Module["_emscripten_bind_PsMemoryStream___destroy___0"] = createExportWrapper("emscripten_bind_PsMemoryStream___destroy___0");

var _emscripten_bind_PsCustomStream_SetReadProc_1 = Module["_emscripten_bind_PsCustomStream_SetReadProc_1"] = createExportWrapper("emscripten_bind_PsCustomStream_SetReadProc_1");

var _emscripten_bind_PsCustomStream_SetWriteProc_1 = Module["_emscripten_bind_PsCustomStream_SetWriteProc_1"] = createExportWrapper("emscripten_bind_PsCustomStream_SetWriteProc_1");

var _emscripten_bind_PsCustomStream_SetDestroyProc_1 = Module["_emscripten_bind_PsCustomStream_SetDestroyProc_1"] = createExportWrapper("emscripten_bind_PsCustomStream_SetDestroyProc_1");

var _emscripten_bind_PsCustomStream_SetGetSizeProc_1 = Module["_emscripten_bind_PsCustomStream_SetGetSizeProc_1"] = createExportWrapper("emscripten_bind_PsCustomStream_SetGetSizeProc_1");

var _emscripten_bind_PsCustomStream_Destroy_0 = Module["_emscripten_bind_PsCustomStream_Destroy_0"] = createExportWrapper("emscripten_bind_PsCustomStream_Destroy_0");

var _emscripten_bind_PsCustomStream_IsEof_0 = Module["_emscripten_bind_PsCustomStream_IsEof_0"] = createExportWrapper("emscripten_bind_PsCustomStream_IsEof_0");

var _emscripten_bind_PsCustomStream_GetSize_0 = Module["_emscripten_bind_PsCustomStream_GetSize_0"] = createExportWrapper("emscripten_bind_PsCustomStream_GetSize_0");

var _emscripten_bind_PsCustomStream_Read_3 = Module["_emscripten_bind_PsCustomStream_Read_3"] = createExportWrapper("emscripten_bind_PsCustomStream_Read_3");

var _emscripten_bind_PsCustomStream_Write_3 = Module["_emscripten_bind_PsCustomStream_Write_3"] = createExportWrapper("emscripten_bind_PsCustomStream_Write_3");

var _emscripten_bind_PsCustomStream_GetPos_0 = Module["_emscripten_bind_PsCustomStream_GetPos_0"] = createExportWrapper("emscripten_bind_PsCustomStream_GetPos_0");

var _emscripten_bind_PsCustomStream_Flush_0 = Module["_emscripten_bind_PsCustomStream_Flush_0"] = createExportWrapper("emscripten_bind_PsCustomStream_Flush_0");

var _emscripten_bind_PsCustomStream_GetStream_0 = Module["_emscripten_bind_PsCustomStream_GetStream_0"] = createExportWrapper("emscripten_bind_PsCustomStream_GetStream_0");

var _emscripten_bind_PsCustomStream_GetType_0 = Module["_emscripten_bind_PsCustomStream_GetType_0"] = createExportWrapper("emscripten_bind_PsCustomStream_GetType_0");

var _emscripten_bind_PsCustomStream___destroy___0 = Module["_emscripten_bind_PsCustomStream___destroy___0"] = createExportWrapper("emscripten_bind_PsCustomStream___destroy___0");

var _emscripten_bind_PdsStructElement_Release_0 = Module["_emscripten_bind_PdsStructElement_Release_0"] = createExportWrapper("emscripten_bind_PdsStructElement_Release_0");

var _emscripten_bind_PdsStructElement_GetType_3 = Module["_emscripten_bind_PdsStructElement_GetType_3"] = createExportWrapper("emscripten_bind_PdsStructElement_GetType_3");

var _emscripten_bind_PdsStructElement_GetActualText_2 = Module["_emscripten_bind_PdsStructElement_GetActualText_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetActualText_2");

var _emscripten_bind_PdsStructElement_SetActualText_1 = Module["_emscripten_bind_PdsStructElement_SetActualText_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetActualText_1");

var _emscripten_bind_PdsStructElement_GetAlt_2 = Module["_emscripten_bind_PdsStructElement_GetAlt_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetAlt_2");

var _emscripten_bind_PdsStructElement_SetAlt_1 = Module["_emscripten_bind_PdsStructElement_SetAlt_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetAlt_1");

var _emscripten_bind_PdsStructElement_GetTitle_2 = Module["_emscripten_bind_PdsStructElement_GetTitle_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetTitle_2");

var _emscripten_bind_PdsStructElement_SetTitle_1 = Module["_emscripten_bind_PdsStructElement_SetTitle_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetTitle_1");

var _emscripten_bind_PdsStructElement_GetAbbreviation_2 = Module["_emscripten_bind_PdsStructElement_GetAbbreviation_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetAbbreviation_2");

var _emscripten_bind_PdsStructElement_GetPageNumber_0 = Module["_emscripten_bind_PdsStructElement_GetPageNumber_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetPageNumber_0");

var _emscripten_bind_PdsStructElement_GetAttrObject_1 = Module["_emscripten_bind_PdsStructElement_GetAttrObject_1"] = createExportWrapper("emscripten_bind_PdsStructElement_GetAttrObject_1");

var _emscripten_bind_PdsStructElement_AddAttrObj_1 = Module["_emscripten_bind_PdsStructElement_AddAttrObj_1"] = createExportWrapper("emscripten_bind_PdsStructElement_AddAttrObj_1");

var _emscripten_bind_PdsStructElement_RemoveAttrObj_0 = Module["_emscripten_bind_PdsStructElement_RemoveAttrObj_0"] = createExportWrapper("emscripten_bind_PdsStructElement_RemoveAttrObj_0");

var _emscripten_bind_PdsStructElement_GetElementObject_0 = Module["_emscripten_bind_PdsStructElement_GetElementObject_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetElementObject_0");

var _emscripten_bind_PdsStructElement_GetKidObject_1 = Module["_emscripten_bind_PdsStructElement_GetKidObject_1"] = createExportWrapper("emscripten_bind_PdsStructElement_GetKidObject_1");

var _emscripten_bind_PdsStructElement_GetKidType_1 = Module["_emscripten_bind_PdsStructElement_GetKidType_1"] = createExportWrapper("emscripten_bind_PdsStructElement_GetKidType_1");

var _emscripten_bind_PdsStructElement_GetKidPageNumber_1 = Module["_emscripten_bind_PdsStructElement_GetKidPageNumber_1"] = createExportWrapper("emscripten_bind_PdsStructElement_GetKidPageNumber_1");

var _emscripten_bind_PdsStructElement_GetKidMcid_1 = Module["_emscripten_bind_PdsStructElement_GetKidMcid_1"] = createExportWrapper("emscripten_bind_PdsStructElement_GetKidMcid_1");

var _emscripten_bind_PdsStructElement_GetNumAttrObjects_0 = Module["_emscripten_bind_PdsStructElement_GetNumAttrObjects_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetNumAttrObjects_0");

var _emscripten_bind_PdsStructElement_GetNumKids_0 = Module["_emscripten_bind_PdsStructElement_GetNumKids_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetNumKids_0");

var _emscripten_bind_PdsStructElement_GetParentObject_0 = Module["_emscripten_bind_PdsStructElement_GetParentObject_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetParentObject_0");

var _emscripten_bind_PdsStructElement_GetId_2 = Module["_emscripten_bind_PdsStructElement_GetId_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetId_2");

var _emscripten_bind_PdsStructElement_SetId_1 = Module["_emscripten_bind_PdsStructElement_SetId_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetId_1");

var _emscripten_bind_PdsStructElement_GetLang_2 = Module["_emscripten_bind_PdsStructElement_GetLang_2"] = createExportWrapper("emscripten_bind_PdsStructElement_GetLang_2");

var _emscripten_bind_PdsStructElement_SetLang_1 = Module["_emscripten_bind_PdsStructElement_SetLang_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetLang_1");

var _emscripten_bind_PdsStructElement_RemoveKid_1 = Module["_emscripten_bind_PdsStructElement_RemoveKid_1"] = createExportWrapper("emscripten_bind_PdsStructElement_RemoveKid_1");

var _emscripten_bind_PdsStructElement_CreateStructElement_3 = Module["_emscripten_bind_PdsStructElement_CreateStructElement_3"] = createExportWrapper("emscripten_bind_PdsStructElement_CreateStructElement_3");

var _emscripten_bind_PdsStructElement_SetParent_2 = Module["_emscripten_bind_PdsStructElement_SetParent_2"] = createExportWrapper("emscripten_bind_PdsStructElement_SetParent_2");

var _emscripten_bind_PdsStructElement_AddPageObject_2 = Module["_emscripten_bind_PdsStructElement_AddPageObject_2"] = createExportWrapper("emscripten_bind_PdsStructElement_AddPageObject_2");

var _emscripten_bind_PdsStructElement_AddAnnot_2 = Module["_emscripten_bind_PdsStructElement_AddAnnot_2"] = createExportWrapper("emscripten_bind_PdsStructElement_AddAnnot_2");

var _emscripten_bind_PdsStructElement_GetStructTree_0 = Module["_emscripten_bind_PdsStructElement_GetStructTree_0"] = createExportWrapper("emscripten_bind_PdsStructElement_GetStructTree_0");

var _emscripten_bind_PdsStructElement_SetType_1 = Module["_emscripten_bind_PdsStructElement_SetType_1"] = createExportWrapper("emscripten_bind_PdsStructElement_SetType_1");

var _emscripten_bind_PdsStructElement___destroy___0 = Module["_emscripten_bind_PdsStructElement___destroy___0"] = createExportWrapper("emscripten_bind_PdsStructElement___destroy___0");

var _emscripten_bind_PdsClassMap_GetAttrObject_2 = Module["_emscripten_bind_PdsClassMap_GetAttrObject_2"] = createExportWrapper("emscripten_bind_PdsClassMap_GetAttrObject_2");

var _emscripten_bind_PdsClassMap_GetNumAttrObjects_1 = Module["_emscripten_bind_PdsClassMap_GetNumAttrObjects_1"] = createExportWrapper("emscripten_bind_PdsClassMap_GetNumAttrObjects_1");

var _emscripten_bind_PdsClassMap___destroy___0 = Module["_emscripten_bind_PdsClassMap___destroy___0"] = createExportWrapper("emscripten_bind_PdsClassMap___destroy___0");

var _emscripten_bind_PdsRoleMap_DoesMap_2 = Module["_emscripten_bind_PdsRoleMap_DoesMap_2"] = createExportWrapper("emscripten_bind_PdsRoleMap_DoesMap_2");

var _emscripten_bind_PdsRoleMap_GetDirectMap_3 = Module["_emscripten_bind_PdsRoleMap_GetDirectMap_3"] = createExportWrapper("emscripten_bind_PdsRoleMap_GetDirectMap_3");

var _emscripten_bind_PdsRoleMap___destroy___0 = Module["_emscripten_bind_PdsRoleMap___destroy___0"] = createExportWrapper("emscripten_bind_PdsRoleMap___destroy___0");

var _emscripten_bind_PdsStructTree_GetObject_0 = Module["_emscripten_bind_PdsStructTree_GetObject_0"] = createExportWrapper("emscripten_bind_PdsStructTree_GetObject_0");

var _emscripten_bind_PdsStructTree_GetClassMap_0 = Module["_emscripten_bind_PdsStructTree_GetClassMap_0"] = createExportWrapper("emscripten_bind_PdsStructTree_GetClassMap_0");

var _emscripten_bind_PdsStructTree_GetKidObject_1 = Module["_emscripten_bind_PdsStructTree_GetKidObject_1"] = createExportWrapper("emscripten_bind_PdsStructTree_GetKidObject_1");

var _emscripten_bind_PdsStructTree_GetNumKids_0 = Module["_emscripten_bind_PdsStructTree_GetNumKids_0"] = createExportWrapper("emscripten_bind_PdsStructTree_GetNumKids_0");

var _emscripten_bind_PdsStructTree_GetRoleMap_0 = Module["_emscripten_bind_PdsStructTree_GetRoleMap_0"] = createExportWrapper("emscripten_bind_PdsStructTree_GetRoleMap_0");

var _emscripten_bind_PdsStructTree_AcquireStructElement_1 = Module["_emscripten_bind_PdsStructTree_AcquireStructElement_1"] = createExportWrapper("emscripten_bind_PdsStructTree_AcquireStructElement_1");

var _emscripten_bind_PdsStructTree_RemoveKid_1 = Module["_emscripten_bind_PdsStructTree_RemoveKid_1"] = createExportWrapper("emscripten_bind_PdsStructTree_RemoveKid_1");

var _emscripten_bind_PdsStructTree_CreateStructElement_2 = Module["_emscripten_bind_PdsStructTree_CreateStructElement_2"] = createExportWrapper("emscripten_bind_PdsStructTree_CreateStructElement_2");

var _emscripten_bind_PdsStructTree_GetDoc_0 = Module["_emscripten_bind_PdsStructTree_GetDoc_0"] = createExportWrapper("emscripten_bind_PdsStructTree_GetDoc_0");

var _emscripten_bind_PdsStructTree_UpdateParentTree_0 = Module["_emscripten_bind_PdsStructTree_UpdateParentTree_0"] = createExportWrapper("emscripten_bind_PdsStructTree_UpdateParentTree_0");

var _emscripten_bind_PdsStructTree___destroy___0 = Module["_emscripten_bind_PdsStructTree___destroy___0"] = createExportWrapper("emscripten_bind_PdsStructTree___destroy___0");

var _emscripten_bind_PsMetadata_LoadFromStream_1 = Module["_emscripten_bind_PsMetadata_LoadFromStream_1"] = createExportWrapper("emscripten_bind_PsMetadata_LoadFromStream_1");

var _emscripten_bind_PsMetadata_SaveToStream_1 = Module["_emscripten_bind_PsMetadata_SaveToStream_1"] = createExportWrapper("emscripten_bind_PsMetadata_SaveToStream_1");

var _emscripten_bind_PsMetadata___destroy___0 = Module["_emscripten_bind_PsMetadata___destroy___0"] = createExportWrapper("emscripten_bind_PsMetadata___destroy___0");

var _emscripten_bind_PsEvent_GetType_0 = Module["_emscripten_bind_PsEvent_GetType_0"] = createExportWrapper("emscripten_bind_PsEvent_GetType_0");

var _emscripten_bind_PsEvent_GetDoc_0 = Module["_emscripten_bind_PsEvent_GetDoc_0"] = createExportWrapper("emscripten_bind_PsEvent_GetDoc_0");

var _emscripten_bind_PsEvent_GetPage_0 = Module["_emscripten_bind_PsEvent_GetPage_0"] = createExportWrapper("emscripten_bind_PsEvent_GetPage_0");

var _emscripten_bind_PsEvent_GetAnnot_0 = Module["_emscripten_bind_PsEvent_GetAnnot_0"] = createExportWrapper("emscripten_bind_PsEvent_GetAnnot_0");

var _emscripten_bind_PsEvent___destroy___0 = Module["_emscripten_bind_PsEvent___destroy___0"] = createExportWrapper("emscripten_bind_PsEvent___destroy___0");

var _emscripten_bind_PsAccountAuthorization_Authorize_2 = Module["_emscripten_bind_PsAccountAuthorization_Authorize_2"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_Authorize_2");

var _emscripten_bind_PsAccountAuthorization_SaveToStream_2 = Module["_emscripten_bind_PsAccountAuthorization_SaveToStream_2"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_SaveToStream_2");

var _emscripten_bind_PsAccountAuthorization_IsAuthorized_0 = Module["_emscripten_bind_PsAccountAuthorization_IsAuthorized_0"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_IsAuthorized_0");

var _emscripten_bind_PsAccountAuthorization_IsAuthorizedPlatform_1 = Module["_emscripten_bind_PsAccountAuthorization_IsAuthorizedPlatform_1"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_IsAuthorizedPlatform_1");

var _emscripten_bind_PsAccountAuthorization_IsAuthorizedOption_1 = Module["_emscripten_bind_PsAccountAuthorization_IsAuthorizedOption_1"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_IsAuthorizedOption_1");

var _emscripten_bind_PsAccountAuthorization_GetType_0 = Module["_emscripten_bind_PsAccountAuthorization_GetType_0"] = createExportWrapper("emscripten_bind_PsAccountAuthorization_GetType_0");

var _emscripten_bind_PsAccountAuthorization___destroy___0 = Module["_emscripten_bind_PsAccountAuthorization___destroy___0"] = createExportWrapper("emscripten_bind_PsAccountAuthorization___destroy___0");

var _emscripten_bind_PsStandardAuthorization_Activate_1 = Module["_emscripten_bind_PsStandardAuthorization_Activate_1"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_Activate_1");

var _emscripten_bind_PsStandardAuthorization_Deactivate_0 = Module["_emscripten_bind_PsStandardAuthorization_Deactivate_0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_Deactivate_0");

var _emscripten_bind_PsStandardAuthorization_Update_0 = Module["_emscripten_bind_PsStandardAuthorization_Update_0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_Update_0");

var _emscripten_bind_PsStandardAuthorization_Reset_0 = Module["_emscripten_bind_PsStandardAuthorization_Reset_0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_Reset_0");

var _emscripten_bind_PsStandardAuthorization_SaveToStream_2 = Module["_emscripten_bind_PsStandardAuthorization_SaveToStream_2"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_SaveToStream_2");

var _emscripten_bind_PsStandardAuthorization_IsAuthorized_0 = Module["_emscripten_bind_PsStandardAuthorization_IsAuthorized_0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_IsAuthorized_0");

var _emscripten_bind_PsStandardAuthorization_IsAuthorizedPlatform_1 = Module["_emscripten_bind_PsStandardAuthorization_IsAuthorizedPlatform_1"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_IsAuthorizedPlatform_1");

var _emscripten_bind_PsStandardAuthorization_IsAuthorizedOption_1 = Module["_emscripten_bind_PsStandardAuthorization_IsAuthorizedOption_1"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_IsAuthorizedOption_1");

var _emscripten_bind_PsStandardAuthorization_GetType_0 = Module["_emscripten_bind_PsStandardAuthorization_GetType_0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization_GetType_0");

var _emscripten_bind_PsStandardAuthorization___destroy___0 = Module["_emscripten_bind_PsStandardAuthorization___destroy___0"] = createExportWrapper("emscripten_bind_PsStandardAuthorization___destroy___0");

var _emscripten_bind_PsCommand_Destroy_0 = Module["_emscripten_bind_PsCommand_Destroy_0"] = createExportWrapper("emscripten_bind_PsCommand_Destroy_0");

var _emscripten_bind_PsCommand_Execute_2 = Module["_emscripten_bind_PsCommand_Execute_2"] = createExportWrapper("emscripten_bind_PsCommand_Execute_2");

var _emscripten_bind_PsCommand_LoadFromStream_2 = Module["_emscripten_bind_PsCommand_LoadFromStream_2"] = createExportWrapper("emscripten_bind_PsCommand_LoadFromStream_2");

var _emscripten_bind_PsCommand_SaveToStream_2 = Module["_emscripten_bind_PsCommand_SaveToStream_2"] = createExportWrapper("emscripten_bind_PsCommand_SaveToStream_2");

var _emscripten_bind_PsCommand___destroy___0 = Module["_emscripten_bind_PsCommand___destroy___0"] = createExportWrapper("emscripten_bind_PsCommand___destroy___0");

var _emscripten_bind_PsImage_Destroy_0 = Module["_emscripten_bind_PsImage_Destroy_0"] = createExportWrapper("emscripten_bind_PsImage_Destroy_0");

var _emscripten_bind_PsImage_Save_2 = Module["_emscripten_bind_PsImage_Save_2"] = createExportWrapper("emscripten_bind_PsImage_Save_2");

var _emscripten_bind_PsImage_SaveRect_3 = Module["_emscripten_bind_PsImage_SaveRect_3"] = createExportWrapper("emscripten_bind_PsImage_SaveRect_3");

var _emscripten_bind_PsImage_SaveToStream_2 = Module["_emscripten_bind_PsImage_SaveToStream_2"] = createExportWrapper("emscripten_bind_PsImage_SaveToStream_2");

var _emscripten_bind_PsImage_SaveRectToStream_3 = Module["_emscripten_bind_PsImage_SaveRectToStream_3"] = createExportWrapper("emscripten_bind_PsImage_SaveRectToStream_3");

var _emscripten_bind_PsImage_GetPointColor_2 = Module["_emscripten_bind_PsImage_GetPointColor_2"] = createExportWrapper("emscripten_bind_PsImage_GetPointColor_2");

var _emscripten_bind_PsImage_SaveDataToStream_1 = Module["_emscripten_bind_PsImage_SaveDataToStream_1"] = createExportWrapper("emscripten_bind_PsImage_SaveDataToStream_1");

var _emscripten_bind_PsImage___destroy___0 = Module["_emscripten_bind_PsImage___destroy___0"] = createExportWrapper("emscripten_bind_PsImage___destroy___0");

var _emscripten_bind_Pdfix_Destroy_0 = Module["_emscripten_bind_Pdfix_Destroy_0"] = createExportWrapper("emscripten_bind_Pdfix_Destroy_0");

var _emscripten_bind_Pdfix_GetAuthorization_0 = Module["_emscripten_bind_Pdfix_GetAuthorization_0"] = createExportWrapper("emscripten_bind_Pdfix_GetAuthorization_0");

var _emscripten_bind_Pdfix_GetStandardAuthorization_0 = Module["_emscripten_bind_Pdfix_GetStandardAuthorization_0"] = createExportWrapper("emscripten_bind_Pdfix_GetStandardAuthorization_0");

var _emscripten_bind_Pdfix_GetAccountAuthorization_0 = Module["_emscripten_bind_Pdfix_GetAccountAuthorization_0"] = createExportWrapper("emscripten_bind_Pdfix_GetAccountAuthorization_0");

var _emscripten_bind_Pdfix_GetErrorType_0 = Module["_emscripten_bind_Pdfix_GetErrorType_0"] = createExportWrapper("emscripten_bind_Pdfix_GetErrorType_0");

var _emscripten_bind_Pdfix_GetError_0 = Module["_emscripten_bind_Pdfix_GetError_0"] = createExportWrapper("emscripten_bind_Pdfix_GetError_0");

var _emscripten_bind_Pdfix_SetError_2 = Module["_emscripten_bind_Pdfix_SetError_2"] = createExportWrapper("emscripten_bind_Pdfix_SetError_2");

var _emscripten_bind_Pdfix_GetVersionMajor_0 = Module["_emscripten_bind_Pdfix_GetVersionMajor_0"] = createExportWrapper("emscripten_bind_Pdfix_GetVersionMajor_0");

var _emscripten_bind_Pdfix_GetVersionMinor_0 = Module["_emscripten_bind_Pdfix_GetVersionMinor_0"] = createExportWrapper("emscripten_bind_Pdfix_GetVersionMinor_0");

var _emscripten_bind_Pdfix_GetVersionPatch_0 = Module["_emscripten_bind_Pdfix_GetVersionPatch_0"] = createExportWrapper("emscripten_bind_Pdfix_GetVersionPatch_0");

var _emscripten_bind_Pdfix_CreateDoc_0 = Module["_emscripten_bind_Pdfix_CreateDoc_0"] = createExportWrapper("emscripten_bind_Pdfix_CreateDoc_0");

var _emscripten_bind_Pdfix_OpenDoc_2 = Module["_emscripten_bind_Pdfix_OpenDoc_2"] = createExportWrapper("emscripten_bind_Pdfix_OpenDoc_2");

var _emscripten_bind_Pdfix_OpenDocFromStream_2 = Module["_emscripten_bind_Pdfix_OpenDocFromStream_2"] = createExportWrapper("emscripten_bind_Pdfix_OpenDocFromStream_2");

var _emscripten_bind_Pdfix_CreateDigSig_0 = Module["_emscripten_bind_Pdfix_CreateDigSig_0"] = createExportWrapper("emscripten_bind_Pdfix_CreateDigSig_0");

var _emscripten_bind_Pdfix_CreateCustomDigSig_0 = Module["_emscripten_bind_Pdfix_CreateCustomDigSig_0"] = createExportWrapper("emscripten_bind_Pdfix_CreateCustomDigSig_0");

var _emscripten_bind_Pdfix_CreateRegex_0 = Module["_emscripten_bind_Pdfix_CreateRegex_0"] = createExportWrapper("emscripten_bind_Pdfix_CreateRegex_0");

var _emscripten_bind_Pdfix_CreateFileStream_2 = Module["_emscripten_bind_Pdfix_CreateFileStream_2"] = createExportWrapper("emscripten_bind_Pdfix_CreateFileStream_2");

var _emscripten_bind_Pdfix_CreateMemStream_0 = Module["_emscripten_bind_Pdfix_CreateMemStream_0"] = createExportWrapper("emscripten_bind_Pdfix_CreateMemStream_0");

var _emscripten_bind_Pdfix_CreateCustomStream_2 = Module["_emscripten_bind_Pdfix_CreateCustomStream_2"] = createExportWrapper("emscripten_bind_Pdfix_CreateCustomStream_2");

var _emscripten_bind_Pdfix_RegisterEvent_3 = Module["_emscripten_bind_Pdfix_RegisterEvent_3"] = createExportWrapper("emscripten_bind_Pdfix_RegisterEvent_3");

var _emscripten_bind_Pdfix_UnregisterEvent_3 = Module["_emscripten_bind_Pdfix_UnregisterEvent_3"] = createExportWrapper("emscripten_bind_Pdfix_UnregisterEvent_3");

var _emscripten_bind_Pdfix_CreateImage_3 = Module["_emscripten_bind_Pdfix_CreateImage_3"] = createExportWrapper("emscripten_bind_Pdfix_CreateImage_3");

var _emscripten_bind_Pdfix_RegisterPlugin_2 = Module["_emscripten_bind_Pdfix_RegisterPlugin_2"] = createExportWrapper("emscripten_bind_Pdfix_RegisterPlugin_2");

var _emscripten_bind_Pdfix_GetPluginByName_1 = Module["_emscripten_bind_Pdfix_GetPluginByName_1"] = createExportWrapper("emscripten_bind_Pdfix_GetPluginByName_1");

var _emscripten_bind_Pdfix_GetEvent_0 = Module["_emscripten_bind_Pdfix_GetEvent_0"] = createExportWrapper("emscripten_bind_Pdfix_GetEvent_0");

var _emscripten_bind_Pdfix_CreateCommand_1 = Module["_emscripten_bind_Pdfix_CreateCommand_1"] = createExportWrapper("emscripten_bind_Pdfix_CreateCommand_1");

var _emscripten_bind_Pdfix___destroy___0 = Module["_emscripten_bind_Pdfix___destroy___0"] = createExportWrapper("emscripten_bind_Pdfix___destroy___0");

var _emscripten_bind_Util_base64_enc_2 = Module["_emscripten_bind_Util_base64_enc_2"] = createExportWrapper("emscripten_bind_Util_base64_enc_2");

var _emscripten_bind_Util___destroy___0 = Module["_emscripten_bind_Util___destroy___0"] = createExportWrapper("emscripten_bind_Util___destroy___0");

var _emscripten_bind_PdfHtmlParams_PdfHtmlParams_0 = Module["_emscripten_bind_PdfHtmlParams_PdfHtmlParams_0"] = createExportWrapper("emscripten_bind_PdfHtmlParams_PdfHtmlParams_0");

var _emscripten_bind_PdfHtmlParams_get_flags_0 = Module["_emscripten_bind_PdfHtmlParams_get_flags_0"] = createExportWrapper("emscripten_bind_PdfHtmlParams_get_flags_0");

var _emscripten_bind_PdfHtmlParams_set_flags_1 = Module["_emscripten_bind_PdfHtmlParams_set_flags_1"] = createExportWrapper("emscripten_bind_PdfHtmlParams_set_flags_1");

var _emscripten_bind_PdfHtmlParams_get_width_0 = Module["_emscripten_bind_PdfHtmlParams_get_width_0"] = createExportWrapper("emscripten_bind_PdfHtmlParams_get_width_0");

var _emscripten_bind_PdfHtmlParams_set_width_1 = Module["_emscripten_bind_PdfHtmlParams_set_width_1"] = createExportWrapper("emscripten_bind_PdfHtmlParams_set_width_1");

var _emscripten_bind_PdfHtmlParams_get_type_0 = Module["_emscripten_bind_PdfHtmlParams_get_type_0"] = createExportWrapper("emscripten_bind_PdfHtmlParams_get_type_0");

var _emscripten_bind_PdfHtmlParams_set_type_1 = Module["_emscripten_bind_PdfHtmlParams_set_type_1"] = createExportWrapper("emscripten_bind_PdfHtmlParams_set_type_1");

var _emscripten_bind_PdfHtmlParams_get_image_params_0 = Module["_emscripten_bind_PdfHtmlParams_get_image_params_0"] = createExportWrapper("emscripten_bind_PdfHtmlParams_get_image_params_0");

var _emscripten_bind_PdfHtmlParams_set_image_params_1 = Module["_emscripten_bind_PdfHtmlParams_set_image_params_1"] = createExportWrapper("emscripten_bind_PdfHtmlParams_set_image_params_1");

var _emscripten_bind_PdfHtmlParams___destroy___0 = Module["_emscripten_bind_PdfHtmlParams___destroy___0"] = createExportWrapper("emscripten_bind_PdfHtmlParams___destroy___0");

var _emscripten_bind_PdfToHtml_OpenHtmlDoc_1 = Module["_emscripten_bind_PdfToHtml_OpenHtmlDoc_1"] = createExportWrapper("emscripten_bind_PdfToHtml_OpenHtmlDoc_1");

var _emscripten_bind_PdfToHtml_SaveCSS_1 = Module["_emscripten_bind_PdfToHtml_SaveCSS_1"] = createExportWrapper("emscripten_bind_PdfToHtml_SaveCSS_1");

var _emscripten_bind_PdfToHtml_SaveJavaScript_1 = Module["_emscripten_bind_PdfToHtml_SaveJavaScript_1"] = createExportWrapper("emscripten_bind_PdfToHtml_SaveJavaScript_1");

var _emscripten_bind_PdfToHtml_Destroy_0 = Module["_emscripten_bind_PdfToHtml_Destroy_0"] = createExportWrapper("emscripten_bind_PdfToHtml_Destroy_0");

var _emscripten_bind_PdfToHtml_Initialize_1 = Module["_emscripten_bind_PdfToHtml_Initialize_1"] = createExportWrapper("emscripten_bind_PdfToHtml_Initialize_1");

var _emscripten_bind_PdfToHtml_GetVersionMajor_0 = Module["_emscripten_bind_PdfToHtml_GetVersionMajor_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetVersionMajor_0");

var _emscripten_bind_PdfToHtml_GetVersionMinor_0 = Module["_emscripten_bind_PdfToHtml_GetVersionMinor_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetVersionMinor_0");

var _emscripten_bind_PdfToHtml_GetVersionPatch_0 = Module["_emscripten_bind_PdfToHtml_GetVersionPatch_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetVersionPatch_0");

var _emscripten_bind_PdfToHtml_GetPdfixVersionMajor_0 = Module["_emscripten_bind_PdfToHtml_GetPdfixVersionMajor_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetPdfixVersionMajor_0");

var _emscripten_bind_PdfToHtml_GetPdfixVersionMinor_0 = Module["_emscripten_bind_PdfToHtml_GetPdfixVersionMinor_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetPdfixVersionMinor_0");

var _emscripten_bind_PdfToHtml_GetPdfixVersionPatch_0 = Module["_emscripten_bind_PdfToHtml_GetPdfixVersionPatch_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetPdfixVersionPatch_0");

var _emscripten_bind_PdfToHtml_GetPdfix_0 = Module["_emscripten_bind_PdfToHtml_GetPdfix_0"] = createExportWrapper("emscripten_bind_PdfToHtml_GetPdfix_0");

var _emscripten_bind_PdfToHtml___destroy___0 = Module["_emscripten_bind_PdfToHtml___destroy___0"] = createExportWrapper("emscripten_bind_PdfToHtml___destroy___0");

var _emscripten_bind_PdfHtmlDoc_Close_0 = Module["_emscripten_bind_PdfHtmlDoc_Close_0"] = createExportWrapper("emscripten_bind_PdfHtmlDoc_Close_0");

var _emscripten_bind_PdfHtmlDoc_Save_4 = Module["_emscripten_bind_PdfHtmlDoc_Save_4"] = createExportWrapper("emscripten_bind_PdfHtmlDoc_Save_4");

var _emscripten_bind_PdfHtmlDoc_SaveDocHtml_4 = Module["_emscripten_bind_PdfHtmlDoc_SaveDocHtml_4"] = createExportWrapper("emscripten_bind_PdfHtmlDoc_SaveDocHtml_4");

var _emscripten_bind_PdfHtmlDoc_SavePageHtml_5 = Module["_emscripten_bind_PdfHtmlDoc_SavePageHtml_5"] = createExportWrapper("emscripten_bind_PdfHtmlDoc_SavePageHtml_5");

var _emscripten_bind_PdfHtmlDoc___destroy___0 = Module["_emscripten_bind_PdfHtmlDoc___destroy___0"] = createExportWrapper("emscripten_bind_PdfHtmlDoc___destroy___0");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformWin = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformWin"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformWin");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformMac = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformMac"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformMac");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformLinux = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformLinux"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformLinux");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformAndroid = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformAndroid"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformAndroid");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformiOS = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformiOS"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformiOS");

var _emscripten_enum_PdfAuthPlatform_kAuthPlatformServer = Module["_emscripten_enum_PdfAuthPlatform_kAuthPlatformServer"] = createExportWrapper("emscripten_enum_PdfAuthPlatform_kAuthPlatformServer");

var _emscripten_enum_PdfAuthOption_kAuthOptionBasic = Module["_emscripten_enum_PdfAuthOption_kAuthOptionBasic"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionBasic");

var _emscripten_enum_PdfAuthOption_kAuthOptionProfessional = Module["_emscripten_enum_PdfAuthOption_kAuthOptionProfessional"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionProfessional");

var _emscripten_enum_PdfAuthOption_kAuthOptionEnterprise = Module["_emscripten_enum_PdfAuthOption_kAuthOptionEnterprise"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionEnterprise");

var _emscripten_enum_PdfAuthOption_kAuthOptionDeveloper = Module["_emscripten_enum_PdfAuthOption_kAuthOptionDeveloper"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionDeveloper");

var _emscripten_enum_PdfAuthOption_kAuthOptionTrial = Module["_emscripten_enum_PdfAuthOption_kAuthOptionTrial"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionTrial");

var _emscripten_enum_PdfAuthOption_kAuthOptionLite = Module["_emscripten_enum_PdfAuthOption_kAuthOptionLite"] = createExportWrapper("emscripten_enum_PdfAuthOption_kAuthOptionLite");

var _emscripten_enum_PdfEventType_kEventUnknown = Module["_emscripten_enum_PdfEventType_kEventUnknown"] = createExportWrapper("emscripten_enum_PdfEventType_kEventUnknown");

var _emscripten_enum_PdfEventType_kEventDocWillSave = Module["_emscripten_enum_PdfEventType_kEventDocWillSave"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillSave");

var _emscripten_enum_PdfEventType_kEventDocWillClose = Module["_emscripten_enum_PdfEventType_kEventDocWillClose"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillClose");

var _emscripten_enum_PdfEventType_kEventDocDidOpen = Module["_emscripten_enum_PdfEventType_kEventDocDidOpen"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidOpen");

var _emscripten_enum_PdfEventType_kEventDocDidSave = Module["_emscripten_enum_PdfEventType_kEventDocDidSave"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidSave");

var _emscripten_enum_PdfEventType_kEventDocWillChangePages = Module["_emscripten_enum_PdfEventType_kEventDocWillChangePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillChangePages");

var _emscripten_enum_PdfEventType_kEventDocDidChangePages = Module["_emscripten_enum_PdfEventType_kEventDocDidChangePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidChangePages");

var _emscripten_enum_PdfEventType_kEventDocWillDeletePages = Module["_emscripten_enum_PdfEventType_kEventDocWillDeletePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillDeletePages");

var _emscripten_enum_PdfEventType_kEventDocDidDeletePages = Module["_emscripten_enum_PdfEventType_kEventDocDidDeletePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidDeletePages");

var _emscripten_enum_PdfEventType_kEventDocWillInsertPages = Module["_emscripten_enum_PdfEventType_kEventDocWillInsertPages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillInsertPages");

var _emscripten_enum_PdfEventType_kEventDocDidInsertPages = Module["_emscripten_enum_PdfEventType_kEventDocDidInsertPages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidInsertPages");

var _emscripten_enum_PdfEventType_kEventDocWillMovePages = Module["_emscripten_enum_PdfEventType_kEventDocWillMovePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillMovePages");

var _emscripten_enum_PdfEventType_kEventDocDidMovePages = Module["_emscripten_enum_PdfEventType_kEventDocDidMovePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidMovePages");

var _emscripten_enum_PdfEventType_kEventDocWillReplacePages = Module["_emscripten_enum_PdfEventType_kEventDocWillReplacePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocWillReplacePages");

var _emscripten_enum_PdfEventType_kEventDocDidReplacePages = Module["_emscripten_enum_PdfEventType_kEventDocDidReplacePages"] = createExportWrapper("emscripten_enum_PdfEventType_kEventDocDidReplacePages");

var _emscripten_enum_PdfEventType_kEventAnnotWillChange = Module["_emscripten_enum_PdfEventType_kEventAnnotWillChange"] = createExportWrapper("emscripten_enum_PdfEventType_kEventAnnotWillChange");

var _emscripten_enum_PdfEventType_kEventAnnotDidChange = Module["_emscripten_enum_PdfEventType_kEventAnnotDidChange"] = createExportWrapper("emscripten_enum_PdfEventType_kEventAnnotDidChange");

var _emscripten_enum_PdfEventType_kEventPageWillAddAnnot = Module["_emscripten_enum_PdfEventType_kEventPageWillAddAnnot"] = createExportWrapper("emscripten_enum_PdfEventType_kEventPageWillAddAnnot");

var _emscripten_enum_PdfEventType_kEventPageWillRemoveAnnot = Module["_emscripten_enum_PdfEventType_kEventPageWillRemoveAnnot"] = createExportWrapper("emscripten_enum_PdfEventType_kEventPageWillRemoveAnnot");

var _emscripten_enum_PdfEventType_kEventPageDidAddAnnot = Module["_emscripten_enum_PdfEventType_kEventPageDidAddAnnot"] = createExportWrapper("emscripten_enum_PdfEventType_kEventPageDidAddAnnot");

var _emscripten_enum_PdfEventType_kEventPageDidRemoveAnnot = Module["_emscripten_enum_PdfEventType_kEventPageDidRemoveAnnot"] = createExportWrapper("emscripten_enum_PdfEventType_kEventPageDidRemoveAnnot");

var _emscripten_enum_PdfEventType_kEventPageContentsDidChange = Module["_emscripten_enum_PdfEventType_kEventPageContentsDidChange"] = createExportWrapper("emscripten_enum_PdfEventType_kEventPageContentsDidChange");

var _emscripten_enum_PdfDigSigValidState_kDigSigBlank = Module["_emscripten_enum_PdfDigSigValidState_kDigSigBlank"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigBlank");

var _emscripten_enum_PdfDigSigValidState_kDigSigUnknown = Module["_emscripten_enum_PdfDigSigValidState_kDigSigUnknown"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigUnknown");

var _emscripten_enum_PdfDigSigValidState_kDigSigInvalid = Module["_emscripten_enum_PdfDigSigValidState_kDigSigInvalid"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigInvalid");

var _emscripten_enum_PdfDigSigValidState_kDigSigValid = Module["_emscripten_enum_PdfDigSigValidState_kDigSigValid"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigValid");

var _emscripten_enum_PdfDigSigValidState_kDigSigDoubleChecked = Module["_emscripten_enum_PdfDigSigValidState_kDigSigDoubleChecked"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigDoubleChecked");

var _emscripten_enum_PdfDigSigValidState_kDigSigValidStateEnumSize = Module["_emscripten_enum_PdfDigSigValidState_kDigSigValidStateEnumSize"] = createExportWrapper("emscripten_enum_PdfDigSigValidState_kDigSigValidStateEnumSize");

var _emscripten_enum_PdfAlignment_kAlignmentNone = Module["_emscripten_enum_PdfAlignment_kAlignmentNone"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentNone");

var _emscripten_enum_PdfAlignment_kAlignmentLeft = Module["_emscripten_enum_PdfAlignment_kAlignmentLeft"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentLeft");

var _emscripten_enum_PdfAlignment_kAlignmentRight = Module["_emscripten_enum_PdfAlignment_kAlignmentRight"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentRight");

var _emscripten_enum_PdfAlignment_kAlignmentJustify = Module["_emscripten_enum_PdfAlignment_kAlignmentJustify"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentJustify");

var _emscripten_enum_PdfAlignment_kAlignmentTop = Module["_emscripten_enum_PdfAlignment_kAlignmentTop"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentTop");

var _emscripten_enum_PdfAlignment_kAlignmentBottom = Module["_emscripten_enum_PdfAlignment_kAlignmentBottom"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentBottom");

var _emscripten_enum_PdfAlignment_kAlignmentCenter = Module["_emscripten_enum_PdfAlignment_kAlignmentCenter"] = createExportWrapper("emscripten_enum_PdfAlignment_kAlignmentCenter");

var _emscripten_enum_PdfRotate_kRotate0 = Module["_emscripten_enum_PdfRotate_kRotate0"] = createExportWrapper("emscripten_enum_PdfRotate_kRotate0");

var _emscripten_enum_PdfRotate_kRotate90 = Module["_emscripten_enum_PdfRotate_kRotate90"] = createExportWrapper("emscripten_enum_PdfRotate_kRotate90");

var _emscripten_enum_PdfRotate_kRotate180 = Module["_emscripten_enum_PdfRotate_kRotate180"] = createExportWrapper("emscripten_enum_PdfRotate_kRotate180");

var _emscripten_enum_PdfRotate_kRotate270 = Module["_emscripten_enum_PdfRotate_kRotate270"] = createExportWrapper("emscripten_enum_PdfRotate_kRotate270");

var _emscripten_enum_PdfObjectType_kPdsUnknown = Module["_emscripten_enum_PdfObjectType_kPdsUnknown"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsUnknown");

var _emscripten_enum_PdfObjectType_kPdsBoolean = Module["_emscripten_enum_PdfObjectType_kPdsBoolean"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsBoolean");

var _emscripten_enum_PdfObjectType_kPdsNumber = Module["_emscripten_enum_PdfObjectType_kPdsNumber"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsNumber");

var _emscripten_enum_PdfObjectType_kPdsString = Module["_emscripten_enum_PdfObjectType_kPdsString"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsString");

var _emscripten_enum_PdfObjectType_kPdsName = Module["_emscripten_enum_PdfObjectType_kPdsName"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsName");

var _emscripten_enum_PdfObjectType_kPdsArray = Module["_emscripten_enum_PdfObjectType_kPdsArray"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsArray");

var _emscripten_enum_PdfObjectType_kPdsDictionary = Module["_emscripten_enum_PdfObjectType_kPdsDictionary"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsDictionary");

var _emscripten_enum_PdfObjectType_kPdsStream = Module["_emscripten_enum_PdfObjectType_kPdsStream"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsStream");

var _emscripten_enum_PdfObjectType_kPdsNull = Module["_emscripten_enum_PdfObjectType_kPdsNull"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsNull");

var _emscripten_enum_PdfObjectType_kPdsReference = Module["_emscripten_enum_PdfObjectType_kPdsReference"] = createExportWrapper("emscripten_enum_PdfObjectType_kPdsReference");

var _emscripten_enum_PdfPageObjectType_kPdsPageUnknown = Module["_emscripten_enum_PdfPageObjectType_kPdsPageUnknown"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPageUnknown");

var _emscripten_enum_PdfPageObjectType_kPdsPageText = Module["_emscripten_enum_PdfPageObjectType_kPdsPageText"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPageText");

var _emscripten_enum_PdfPageObjectType_kPdsPagePath = Module["_emscripten_enum_PdfPageObjectType_kPdsPagePath"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPagePath");

var _emscripten_enum_PdfPageObjectType_kPdsPageImage = Module["_emscripten_enum_PdfPageObjectType_kPdsPageImage"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPageImage");

var _emscripten_enum_PdfPageObjectType_kPdsPageShading = Module["_emscripten_enum_PdfPageObjectType_kPdsPageShading"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPageShading");

var _emscripten_enum_PdfPageObjectType_kPdsPageForm = Module["_emscripten_enum_PdfPageObjectType_kPdsPageForm"] = createExportWrapper("emscripten_enum_PdfPageObjectType_kPdsPageForm");

var _emscripten_enum_PdfElementType_kPdeUnknown = Module["_emscripten_enum_PdfElementType_kPdeUnknown"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeUnknown");

var _emscripten_enum_PdfElementType_kPdeText = Module["_emscripten_enum_PdfElementType_kPdeText"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeText");

var _emscripten_enum_PdfElementType_kPdeTextLine = Module["_emscripten_enum_PdfElementType_kPdeTextLine"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeTextLine");

var _emscripten_enum_PdfElementType_kPdeWord = Module["_emscripten_enum_PdfElementType_kPdeWord"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeWord");

var _emscripten_enum_PdfElementType_kPdeTextRun = Module["_emscripten_enum_PdfElementType_kPdeTextRun"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeTextRun");

var _emscripten_enum_PdfElementType_kPdeImage = Module["_emscripten_enum_PdfElementType_kPdeImage"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeImage");

var _emscripten_enum_PdfElementType_kPdeContainer = Module["_emscripten_enum_PdfElementType_kPdeContainer"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeContainer");

var _emscripten_enum_PdfElementType_kPdeList = Module["_emscripten_enum_PdfElementType_kPdeList"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeList");

var _emscripten_enum_PdfElementType_kPdeLine = Module["_emscripten_enum_PdfElementType_kPdeLine"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeLine");

var _emscripten_enum_PdfElementType_kPdeRect = Module["_emscripten_enum_PdfElementType_kPdeRect"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeRect");

var _emscripten_enum_PdfElementType_kPdeTable = Module["_emscripten_enum_PdfElementType_kPdeTable"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeTable");

var _emscripten_enum_PdfElementType_kPdeCell = Module["_emscripten_enum_PdfElementType_kPdeCell"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeCell");

var _emscripten_enum_PdfElementType_kPdeToc = Module["_emscripten_enum_PdfElementType_kPdeToc"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeToc");

var _emscripten_enum_PdfElementType_kPdeFormField = Module["_emscripten_enum_PdfElementType_kPdeFormField"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeFormField");

var _emscripten_enum_PdfElementType_kPdeHeader = Module["_emscripten_enum_PdfElementType_kPdeHeader"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeHeader");

var _emscripten_enum_PdfElementType_kPdeFooter = Module["_emscripten_enum_PdfElementType_kPdeFooter"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeFooter");

var _emscripten_enum_PdfElementType_kPdeAnnot = Module["_emscripten_enum_PdfElementType_kPdeAnnot"] = createExportWrapper("emscripten_enum_PdfElementType_kPdeAnnot");

var _emscripten_enum_PdfContainerType_kPdeContainerUnknown = Module["_emscripten_enum_PdfContainerType_kPdeContainerUnknown"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerUnknown");

var _emscripten_enum_PdfContainerType_kPdeContainerPage = Module["_emscripten_enum_PdfContainerType_kPdeContainerPage"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerPage");

var _emscripten_enum_PdfContainerType_kPdeContainerArt = Module["_emscripten_enum_PdfContainerType_kPdeContainerArt"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerArt");

var _emscripten_enum_PdfContainerType_kPdeContainerCol = Module["_emscripten_enum_PdfContainerType_kPdeContainerCol"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerCol");

var _emscripten_enum_PdfContainerType_kPdeContainerRow = Module["_emscripten_enum_PdfContainerType_kPdeContainerRow"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerRow");

var _emscripten_enum_PdfContainerType_kPdeContainerSplitter = Module["_emscripten_enum_PdfContainerType_kPdeContainerSplitter"] = createExportWrapper("emscripten_enum_PdfContainerType_kPdeContainerSplitter");

var _emscripten_enum_PdfTagType_kTagUnknown = Module["_emscripten_enum_PdfTagType_kTagUnknown"] = createExportWrapper("emscripten_enum_PdfTagType_kTagUnknown");

var _emscripten_enum_PdfTagType_kTagSect = Module["_emscripten_enum_PdfTagType_kTagSect"] = createExportWrapper("emscripten_enum_PdfTagType_kTagSect");

var _emscripten_enum_PdfTagType_kTagArt = Module["_emscripten_enum_PdfTagType_kTagArt"] = createExportWrapper("emscripten_enum_PdfTagType_kTagArt");

var _emscripten_enum_PdfLineCap_kPdfLineCapButt = Module["_emscripten_enum_PdfLineCap_kPdfLineCapButt"] = createExportWrapper("emscripten_enum_PdfLineCap_kPdfLineCapButt");

var _emscripten_enum_PdfLineCap_kPdfLineCapRound = Module["_emscripten_enum_PdfLineCap_kPdfLineCapRound"] = createExportWrapper("emscripten_enum_PdfLineCap_kPdfLineCapRound");

var _emscripten_enum_PdfLineCap_kPdfLineCapSquare = Module["_emscripten_enum_PdfLineCap_kPdfLineCapSquare"] = createExportWrapper("emscripten_enum_PdfLineCap_kPdfLineCapSquare");

var _emscripten_enum_PdfLineJoin_kPdfLineJoinMiter = Module["_emscripten_enum_PdfLineJoin_kPdfLineJoinMiter"] = createExportWrapper("emscripten_enum_PdfLineJoin_kPdfLineJoinMiter");

var _emscripten_enum_PdfLineJoin_kPdfLineJoinRound = Module["_emscripten_enum_PdfLineJoin_kPdfLineJoinRound"] = createExportWrapper("emscripten_enum_PdfLineJoin_kPdfLineJoinRound");

var _emscripten_enum_PdfLineJoin_kPdfLineJoinBevel = Module["_emscripten_enum_PdfLineJoin_kPdfLineJoinBevel"] = createExportWrapper("emscripten_enum_PdfLineJoin_kPdfLineJoinBevel");

var _emscripten_enum_PdfFillType_kFillTypeNone = Module["_emscripten_enum_PdfFillType_kFillTypeNone"] = createExportWrapper("emscripten_enum_PdfFillType_kFillTypeNone");

var _emscripten_enum_PdfFillType_kFillTypeSolid = Module["_emscripten_enum_PdfFillType_kFillTypeSolid"] = createExportWrapper("emscripten_enum_PdfFillType_kFillTypeSolid");

var _emscripten_enum_PdfFillType_kFillTypePattern = Module["_emscripten_enum_PdfFillType_kFillTypePattern"] = createExportWrapper("emscripten_enum_PdfFillType_kFillTypePattern");

var _emscripten_enum_PdfTextAlignment_kTextAlignmentNone = Module["_emscripten_enum_PdfTextAlignment_kTextAlignmentNone"] = createExportWrapper("emscripten_enum_PdfTextAlignment_kTextAlignmentNone");

var _emscripten_enum_PdfTextAlignment_kTextAlignmentLeft = Module["_emscripten_enum_PdfTextAlignment_kTextAlignmentLeft"] = createExportWrapper("emscripten_enum_PdfTextAlignment_kTextAlignmentLeft");

var _emscripten_enum_PdfTextAlignment_kTextAlignmentRight = Module["_emscripten_enum_PdfTextAlignment_kTextAlignmentRight"] = createExportWrapper("emscripten_enum_PdfTextAlignment_kTextAlignmentRight");

var _emscripten_enum_PdfTextAlignment_kTextAlignmentCenter = Module["_emscripten_enum_PdfTextAlignment_kTextAlignmentCenter"] = createExportWrapper("emscripten_enum_PdfTextAlignment_kTextAlignmentCenter");

var _emscripten_enum_PdfTextAlignment_kTextAlignmentJustify = Module["_emscripten_enum_PdfTextAlignment_kTextAlignmentJustify"] = createExportWrapper("emscripten_enum_PdfTextAlignment_kTextAlignmentJustify");

var _emscripten_enum_PdfAnnotSubtype_kAnnotUnknown = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotUnknown"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotUnknown");

var _emscripten_enum_PdfAnnotSubtype_kAnnotText = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotText"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotText");

var _emscripten_enum_PdfAnnotSubtype_kAnnotLink = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotLink"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotLink");

var _emscripten_enum_PdfAnnotSubtype_kAnnotFreeText = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotFreeText"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotFreeText");

var _emscripten_enum_PdfAnnotSubtype_kAnnotLine = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotLine"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotLine");

var _emscripten_enum_PdfAnnotSubtype_kAnnotSquare = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotSquare"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotSquare");

var _emscripten_enum_PdfAnnotSubtype_kAnnotCircle = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotCircle"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotCircle");

var _emscripten_enum_PdfAnnotSubtype_kAnnotPolygon = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotPolygon"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotPolygon");

var _emscripten_enum_PdfAnnotSubtype_kAnnotPolyLine = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotPolyLine"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotPolyLine");

var _emscripten_enum_PdfAnnotSubtype_kAnnotHighlight = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotHighlight"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotHighlight");

var _emscripten_enum_PdfAnnotSubtype_kAnnotUnderline = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotUnderline"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotUnderline");

var _emscripten_enum_PdfAnnotSubtype_kAnnotSquiggly = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotSquiggly"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotSquiggly");

var _emscripten_enum_PdfAnnotSubtype_kAnnotStrikeOut = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotStrikeOut"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotStrikeOut");

var _emscripten_enum_PdfAnnotSubtype_kAnnotStamp = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotStamp"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotStamp");

var _emscripten_enum_PdfAnnotSubtype_kAnnotCaret = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotCaret"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotCaret");

var _emscripten_enum_PdfAnnotSubtype_kAnnotInk = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotInk"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotInk");

var _emscripten_enum_PdfAnnotSubtype_kAnnotPopup = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotPopup"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotPopup");

var _emscripten_enum_PdfAnnotSubtype_kAnnotFileAttachment = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotFileAttachment"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotFileAttachment");

var _emscripten_enum_PdfAnnotSubtype_kAnnotSound = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotSound"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotSound");

var _emscripten_enum_PdfAnnotSubtype_kAnnotMovie = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotMovie"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotMovie");

var _emscripten_enum_PdfAnnotSubtype_kAnnotWidget = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotWidget"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotWidget");

var _emscripten_enum_PdfAnnotSubtype_kAnnotScreen = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotScreen"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotScreen");

var _emscripten_enum_PdfAnnotSubtype_kAnnotPrinterMark = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotPrinterMark"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotPrinterMark");

var _emscripten_enum_PdfAnnotSubtype_kAnnotTrapNet = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotTrapNet"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotTrapNet");

var _emscripten_enum_PdfAnnotSubtype_kAnnotWatermark = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotWatermark"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotWatermark");

var _emscripten_enum_PdfAnnotSubtype_kAnnot3D = Module["_emscripten_enum_PdfAnnotSubtype_kAnnot3D"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnot3D");

var _emscripten_enum_PdfAnnotSubtype_kAnnotRedact = Module["_emscripten_enum_PdfAnnotSubtype_kAnnotRedact"] = createExportWrapper("emscripten_enum_PdfAnnotSubtype_kAnnotRedact");

var _emscripten_enum_PdfBorderStyle_kBorderSolid = Module["_emscripten_enum_PdfBorderStyle_kBorderSolid"] = createExportWrapper("emscripten_enum_PdfBorderStyle_kBorderSolid");

var _emscripten_enum_PdfBorderStyle_kBorderDashed = Module["_emscripten_enum_PdfBorderStyle_kBorderDashed"] = createExportWrapper("emscripten_enum_PdfBorderStyle_kBorderDashed");

var _emscripten_enum_PdfBorderStyle_kBorderBeveled = Module["_emscripten_enum_PdfBorderStyle_kBorderBeveled"] = createExportWrapper("emscripten_enum_PdfBorderStyle_kBorderBeveled");

var _emscripten_enum_PdfBorderStyle_kBorderInset = Module["_emscripten_enum_PdfBorderStyle_kBorderInset"] = createExportWrapper("emscripten_enum_PdfBorderStyle_kBorderInset");

var _emscripten_enum_PdfBorderStyle_kBorderUnderline = Module["_emscripten_enum_PdfBorderStyle_kBorderUnderline"] = createExportWrapper("emscripten_enum_PdfBorderStyle_kBorderUnderline");

var _emscripten_enum_PdfFieldType_kFieldUnknown = Module["_emscripten_enum_PdfFieldType_kFieldUnknown"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldUnknown");

var _emscripten_enum_PdfFieldType_kFieldButton = Module["_emscripten_enum_PdfFieldType_kFieldButton"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldButton");

var _emscripten_enum_PdfFieldType_kFieldRadio = Module["_emscripten_enum_PdfFieldType_kFieldRadio"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldRadio");

var _emscripten_enum_PdfFieldType_kFieldCheck = Module["_emscripten_enum_PdfFieldType_kFieldCheck"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldCheck");

var _emscripten_enum_PdfFieldType_kFieldText = Module["_emscripten_enum_PdfFieldType_kFieldText"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldText");

var _emscripten_enum_PdfFieldType_kFieldCombo = Module["_emscripten_enum_PdfFieldType_kFieldCombo"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldCombo");

var _emscripten_enum_PdfFieldType_kFieldList = Module["_emscripten_enum_PdfFieldType_kFieldList"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldList");

var _emscripten_enum_PdfFieldType_kFieldSignature = Module["_emscripten_enum_PdfFieldType_kFieldSignature"] = createExportWrapper("emscripten_enum_PdfFieldType_kFieldSignature");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotEnter = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotEnter"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotEnter");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotExit = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotExit"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotExit");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotMouseDown = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotMouseDown"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotMouseDown");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotMouseUp = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotMouseUp"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotMouseUp");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotFocus = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotFocus"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotFocus");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotBlur = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotBlur"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotBlur");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotPageOpen = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotPageOpen"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotPageOpen");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotPageClose = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotPageClose"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotPageClose");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotPageVisible = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotPageVisible"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotPageVisible");

var _emscripten_enum_PdfActionEventType_kActionEventAnnotPageInvisible = Module["_emscripten_enum_PdfActionEventType_kActionEventAnnotPageInvisible"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventAnnotPageInvisible");

var _emscripten_enum_PdfActionEventType_kActionEventPageOpen = Module["_emscripten_enum_PdfActionEventType_kActionEventPageOpen"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventPageOpen");

var _emscripten_enum_PdfActionEventType_kActionEventPageClose = Module["_emscripten_enum_PdfActionEventType_kActionEventPageClose"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventPageClose");

var _emscripten_enum_PdfActionEventType_kActionEventFieldKeystroke = Module["_emscripten_enum_PdfActionEventType_kActionEventFieldKeystroke"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventFieldKeystroke");

var _emscripten_enum_PdfActionEventType_kActionEventFieldFormat = Module["_emscripten_enum_PdfActionEventType_kActionEventFieldFormat"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventFieldFormat");

var _emscripten_enum_PdfActionEventType_kActionEventFieldValidate = Module["_emscripten_enum_PdfActionEventType_kActionEventFieldValidate"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventFieldValidate");

var _emscripten_enum_PdfActionEventType_kActionEventFieldCalculate = Module["_emscripten_enum_PdfActionEventType_kActionEventFieldCalculate"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventFieldCalculate");

var _emscripten_enum_PdfActionEventType_kActionEventDocWillClose = Module["_emscripten_enum_PdfActionEventType_kActionEventDocWillClose"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventDocWillClose");

var _emscripten_enum_PdfActionEventType_kActionEventDocWillSave = Module["_emscripten_enum_PdfActionEventType_kActionEventDocWillSave"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventDocWillSave");

var _emscripten_enum_PdfActionEventType_kActionEventDocDidSave = Module["_emscripten_enum_PdfActionEventType_kActionEventDocDidSave"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventDocDidSave");

var _emscripten_enum_PdfActionEventType_kActionEventDocWillPrint = Module["_emscripten_enum_PdfActionEventType_kActionEventDocWillPrint"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventDocWillPrint");

var _emscripten_enum_PdfActionEventType_kActionEventDocDidPrint = Module["_emscripten_enum_PdfActionEventType_kActionEventDocDidPrint"] = createExportWrapper("emscripten_enum_PdfActionEventType_kActionEventDocDidPrint");

var _emscripten_enum_PdfActionType_kActionUnknown = Module["_emscripten_enum_PdfActionType_kActionUnknown"] = createExportWrapper("emscripten_enum_PdfActionType_kActionUnknown");

var _emscripten_enum_PdfActionType_kActionGoTo = Module["_emscripten_enum_PdfActionType_kActionGoTo"] = createExportWrapper("emscripten_enum_PdfActionType_kActionGoTo");

var _emscripten_enum_PdfActionType_kActionGoToR = Module["_emscripten_enum_PdfActionType_kActionGoToR"] = createExportWrapper("emscripten_enum_PdfActionType_kActionGoToR");

var _emscripten_enum_PdfActionType_kActionGoToE = Module["_emscripten_enum_PdfActionType_kActionGoToE"] = createExportWrapper("emscripten_enum_PdfActionType_kActionGoToE");

var _emscripten_enum_PdfActionType_kActionLaunch = Module["_emscripten_enum_PdfActionType_kActionLaunch"] = createExportWrapper("emscripten_enum_PdfActionType_kActionLaunch");

var _emscripten_enum_PdfActionType_kActionThread = Module["_emscripten_enum_PdfActionType_kActionThread"] = createExportWrapper("emscripten_enum_PdfActionType_kActionThread");

var _emscripten_enum_PdfActionType_kActionURI = Module["_emscripten_enum_PdfActionType_kActionURI"] = createExportWrapper("emscripten_enum_PdfActionType_kActionURI");

var _emscripten_enum_PdfActionType_kActionSound = Module["_emscripten_enum_PdfActionType_kActionSound"] = createExportWrapper("emscripten_enum_PdfActionType_kActionSound");

var _emscripten_enum_PdfActionType_kActionMovie = Module["_emscripten_enum_PdfActionType_kActionMovie"] = createExportWrapper("emscripten_enum_PdfActionType_kActionMovie");

var _emscripten_enum_PdfActionType_kActionHide = Module["_emscripten_enum_PdfActionType_kActionHide"] = createExportWrapper("emscripten_enum_PdfActionType_kActionHide");

var _emscripten_enum_PdfActionType_kActionNamed = Module["_emscripten_enum_PdfActionType_kActionNamed"] = createExportWrapper("emscripten_enum_PdfActionType_kActionNamed");

var _emscripten_enum_PdfActionType_kActionSubmitForm = Module["_emscripten_enum_PdfActionType_kActionSubmitForm"] = createExportWrapper("emscripten_enum_PdfActionType_kActionSubmitForm");

var _emscripten_enum_PdfActionType_kActionResetForm = Module["_emscripten_enum_PdfActionType_kActionResetForm"] = createExportWrapper("emscripten_enum_PdfActionType_kActionResetForm");

var _emscripten_enum_PdfActionType_kActionImportData = Module["_emscripten_enum_PdfActionType_kActionImportData"] = createExportWrapper("emscripten_enum_PdfActionType_kActionImportData");

var _emscripten_enum_PdfActionType_kActionJavaScript = Module["_emscripten_enum_PdfActionType_kActionJavaScript"] = createExportWrapper("emscripten_enum_PdfActionType_kActionJavaScript");

var _emscripten_enum_PdfActionType_kActionSetOCGState = Module["_emscripten_enum_PdfActionType_kActionSetOCGState"] = createExportWrapper("emscripten_enum_PdfActionType_kActionSetOCGState");

var _emscripten_enum_PdfActionType_kActionRendition = Module["_emscripten_enum_PdfActionType_kActionRendition"] = createExportWrapper("emscripten_enum_PdfActionType_kActionRendition");

var _emscripten_enum_PdfActionType_kActionTrans = Module["_emscripten_enum_PdfActionType_kActionTrans"] = createExportWrapper("emscripten_enum_PdfActionType_kActionTrans");

var _emscripten_enum_PdfActionType_kActionGoTo3DView = Module["_emscripten_enum_PdfActionType_kActionGoTo3DView"] = createExportWrapper("emscripten_enum_PdfActionType_kActionGoTo3DView");

var _emscripten_enum_PdfImageFormat_kImageFormatPng = Module["_emscripten_enum_PdfImageFormat_kImageFormatPng"] = createExportWrapper("emscripten_enum_PdfImageFormat_kImageFormatPng");

var _emscripten_enum_PdfImageFormat_kImageFormatJpg = Module["_emscripten_enum_PdfImageFormat_kImageFormatJpg"] = createExportWrapper("emscripten_enum_PdfImageFormat_kImageFormatJpg");

var _emscripten_enum_PdfImageFormat_kImageFormatBmp = Module["_emscripten_enum_PdfImageFormat_kImageFormatBmp"] = createExportWrapper("emscripten_enum_PdfImageFormat_kImageFormatBmp");

var _emscripten_enum_PdfImageFormat_kImageFormatEmf = Module["_emscripten_enum_PdfImageFormat_kImageFormatEmf"] = createExportWrapper("emscripten_enum_PdfImageFormat_kImageFormatEmf");

var _emscripten_enum_PdfFontCharset_kFontAnsiCharset = Module["_emscripten_enum_PdfFontCharset_kFontAnsiCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontAnsiCharset");

var _emscripten_enum_PdfFontCharset_kFontDefaultCharset = Module["_emscripten_enum_PdfFontCharset_kFontDefaultCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontDefaultCharset");

var _emscripten_enum_PdfFontCharset_kFontSymbolCharset = Module["_emscripten_enum_PdfFontCharset_kFontSymbolCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontSymbolCharset");

var _emscripten_enum_PdfFontCharset_kFontUnknownCharset = Module["_emscripten_enum_PdfFontCharset_kFontUnknownCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontUnknownCharset");

var _emscripten_enum_PdfFontCharset_kFontMacintoshCharset = Module["_emscripten_enum_PdfFontCharset_kFontMacintoshCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontMacintoshCharset");

var _emscripten_enum_PdfFontCharset_kFontShiftJISCharset = Module["_emscripten_enum_PdfFontCharset_kFontShiftJISCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontShiftJISCharset");

var _emscripten_enum_PdfFontCharset_kFontHangeulCharset = Module["_emscripten_enum_PdfFontCharset_kFontHangeulCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontHangeulCharset");

var _emscripten_enum_PdfFontCharset_kFontKoreanCharset = Module["_emscripten_enum_PdfFontCharset_kFontKoreanCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontKoreanCharset");

var _emscripten_enum_PdfFontCharset_kFontGB2312Charset = Module["_emscripten_enum_PdfFontCharset_kFontGB2312Charset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontGB2312Charset");

var _emscripten_enum_PdfFontCharset_kFontCHineseBig5Charset = Module["_emscripten_enum_PdfFontCharset_kFontCHineseBig5Charset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontCHineseBig5Charset");

var _emscripten_enum_PdfFontCharset_kFontGreekCharset = Module["_emscripten_enum_PdfFontCharset_kFontGreekCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontGreekCharset");

var _emscripten_enum_PdfFontCharset_kFontTurkishCharset = Module["_emscripten_enum_PdfFontCharset_kFontTurkishCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontTurkishCharset");

var _emscripten_enum_PdfFontCharset_kFontVietnameseCharset = Module["_emscripten_enum_PdfFontCharset_kFontVietnameseCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontVietnameseCharset");

var _emscripten_enum_PdfFontCharset_kFontHebrewCharset = Module["_emscripten_enum_PdfFontCharset_kFontHebrewCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontHebrewCharset");

var _emscripten_enum_PdfFontCharset_kFontArabicCharset = Module["_emscripten_enum_PdfFontCharset_kFontArabicCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontArabicCharset");

var _emscripten_enum_PdfFontCharset_kFontArabicTCharset = Module["_emscripten_enum_PdfFontCharset_kFontArabicTCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontArabicTCharset");

var _emscripten_enum_PdfFontCharset_kFontArabicUCharset = Module["_emscripten_enum_PdfFontCharset_kFontArabicUCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontArabicUCharset");

var _emscripten_enum_PdfFontCharset_kFontHebrewUCharset = Module["_emscripten_enum_PdfFontCharset_kFontHebrewUCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontHebrewUCharset");

var _emscripten_enum_PdfFontCharset_kFontBalticCharset = Module["_emscripten_enum_PdfFontCharset_kFontBalticCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontBalticCharset");

var _emscripten_enum_PdfFontCharset_kFontRussianCharset = Module["_emscripten_enum_PdfFontCharset_kFontRussianCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontRussianCharset");

var _emscripten_enum_PdfFontCharset_kFontThaiCharset = Module["_emscripten_enum_PdfFontCharset_kFontThaiCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontThaiCharset");

var _emscripten_enum_PdfFontCharset_kFontEastEuropeCharset = Module["_emscripten_enum_PdfFontCharset_kFontEastEuropeCharset"] = createExportWrapper("emscripten_enum_PdfFontCharset_kFontEastEuropeCharset");

var _emscripten_enum_PdfPageRangeType_kAllPages = Module["_emscripten_enum_PdfPageRangeType_kAllPages"] = createExportWrapper("emscripten_enum_PdfPageRangeType_kAllPages");

var _emscripten_enum_PdfPageRangeType_kEvenPagesOnly = Module["_emscripten_enum_PdfPageRangeType_kEvenPagesOnly"] = createExportWrapper("emscripten_enum_PdfPageRangeType_kEvenPagesOnly");

var _emscripten_enum_PdfPageRangeType_kOddPagesOnly = Module["_emscripten_enum_PdfPageRangeType_kOddPagesOnly"] = createExportWrapper("emscripten_enum_PdfPageRangeType_kOddPagesOnly");

var _emscripten_enum_PdfFontType_kFontUnknownType = Module["_emscripten_enum_PdfFontType_kFontUnknownType"] = createExportWrapper("emscripten_enum_PdfFontType_kFontUnknownType");

var _emscripten_enum_PdfFontType_kFontType1 = Module["_emscripten_enum_PdfFontType_kFontType1"] = createExportWrapper("emscripten_enum_PdfFontType_kFontType1");

var _emscripten_enum_PdfFontType_kFontTrueType = Module["_emscripten_enum_PdfFontType_kFontTrueType"] = createExportWrapper("emscripten_enum_PdfFontType_kFontTrueType");

var _emscripten_enum_PdfFontType_kFontType3 = Module["_emscripten_enum_PdfFontType_kFontType3"] = createExportWrapper("emscripten_enum_PdfFontType_kFontType3");

var _emscripten_enum_PdfFontType_kFontCIDFont = Module["_emscripten_enum_PdfFontType_kFontCIDFont"] = createExportWrapper("emscripten_enum_PdfFontType_kFontCIDFont");

var _emscripten_enum_PdfFontFormat_kFontFormatTtf = Module["_emscripten_enum_PdfFontFormat_kFontFormatTtf"] = createExportWrapper("emscripten_enum_PdfFontFormat_kFontFormatTtf");

var _emscripten_enum_PdfFontFormat_kFontFormatWoff = Module["_emscripten_enum_PdfFontFormat_kFontFormatWoff"] = createExportWrapper("emscripten_enum_PdfFontFormat_kFontFormatWoff");

var _emscripten_enum_PdfDestZoomType_kPdfZoomXYZ = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomXYZ"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomXYZ");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitPage = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitPage"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitPage");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitHorz = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitHorz"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitHorz");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitVert = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitVert"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitVert");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitRect = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitRect"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitRect");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitBbox = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitBbox"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitBbox");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitBHorz = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitBHorz"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitBHorz");

var _emscripten_enum_PdfDestZoomType_kPdfZoomFitBVert = Module["_emscripten_enum_PdfDestZoomType_kPdfZoomFitBVert"] = createExportWrapper("emscripten_enum_PdfDestZoomType_kPdfZoomFitBVert");

var _emscripten_enum_PdfDigSigType_kDigSigOpenSSL = Module["_emscripten_enum_PdfDigSigType_kDigSigOpenSSL"] = createExportWrapper("emscripten_enum_PdfDigSigType_kDigSigOpenSSL");

var _emscripten_enum_PdfDigSigType_kDigSigCert = Module["_emscripten_enum_PdfDigSigType_kDigSigCert"] = createExportWrapper("emscripten_enum_PdfDigSigType_kDigSigCert");

var _emscripten_enum_PdfDigSigType_kDigSigCustom = Module["_emscripten_enum_PdfDigSigType_kDigSigCustom"] = createExportWrapper("emscripten_enum_PdfDigSigType_kDigSigCustom");

var _emscripten_enum_PdfImageType_kImageFigure = Module["_emscripten_enum_PdfImageType_kImageFigure"] = createExportWrapper("emscripten_enum_PdfImageType_kImageFigure");

var _emscripten_enum_PdfImageType_kImageImage = Module["_emscripten_enum_PdfImageType_kImageImage"] = createExportWrapper("emscripten_enum_PdfImageType_kImageImage");

var _emscripten_enum_PdfImageType_kImagePath = Module["_emscripten_enum_PdfImageType_kImagePath"] = createExportWrapper("emscripten_enum_PdfImageType_kImagePath");

var _emscripten_enum_PdfImageType_kImageRect = Module["_emscripten_enum_PdfImageType_kImageRect"] = createExportWrapper("emscripten_enum_PdfImageType_kImageRect");

var _emscripten_enum_PdfImageType_kImageShading = Module["_emscripten_enum_PdfImageType_kImageShading"] = createExportWrapper("emscripten_enum_PdfImageType_kImageShading");

var _emscripten_enum_PdfImageType_kImageForm = Module["_emscripten_enum_PdfImageType_kImageForm"] = createExportWrapper("emscripten_enum_PdfImageType_kImageForm");

var _emscripten_enum_PdfListType_kListNone = Module["_emscripten_enum_PdfListType_kListNone"] = createExportWrapper("emscripten_enum_PdfListType_kListNone");

var _emscripten_enum_PdfListType_kListUnordered = Module["_emscripten_enum_PdfListType_kListUnordered"] = createExportWrapper("emscripten_enum_PdfListType_kListUnordered");

var _emscripten_enum_PdfListType_kListOrdered = Module["_emscripten_enum_PdfListType_kListOrdered"] = createExportWrapper("emscripten_enum_PdfListType_kListOrdered");

var _emscripten_enum_PdfListType_kListDecimal = Module["_emscripten_enum_PdfListType_kListDecimal"] = createExportWrapper("emscripten_enum_PdfListType_kListDecimal");

var _emscripten_enum_PdfListType_kListRomanUpper = Module["_emscripten_enum_PdfListType_kListRomanUpper"] = createExportWrapper("emscripten_enum_PdfListType_kListRomanUpper");

var _emscripten_enum_PdfListType_kListRomanLower = Module["_emscripten_enum_PdfListType_kListRomanLower"] = createExportWrapper("emscripten_enum_PdfListType_kListRomanLower");

var _emscripten_enum_PdfListType_kListLetterUpper = Module["_emscripten_enum_PdfListType_kListLetterUpper"] = createExportWrapper("emscripten_enum_PdfListType_kListLetterUpper");

var _emscripten_enum_PdfListType_kListLetterLower = Module["_emscripten_enum_PdfListType_kListLetterLower"] = createExportWrapper("emscripten_enum_PdfListType_kListLetterLower");

var _emscripten_enum_PdfTextStyle_kTextNormal = Module["_emscripten_enum_PdfTextStyle_kTextNormal"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextNormal");

var _emscripten_enum_PdfTextStyle_kTextH1 = Module["_emscripten_enum_PdfTextStyle_kTextH1"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH1");

var _emscripten_enum_PdfTextStyle_kTextH2 = Module["_emscripten_enum_PdfTextStyle_kTextH2"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH2");

var _emscripten_enum_PdfTextStyle_kTextH3 = Module["_emscripten_enum_PdfTextStyle_kTextH3"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH3");

var _emscripten_enum_PdfTextStyle_kTextH4 = Module["_emscripten_enum_PdfTextStyle_kTextH4"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH4");

var _emscripten_enum_PdfTextStyle_kTextH5 = Module["_emscripten_enum_PdfTextStyle_kTextH5"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH5");

var _emscripten_enum_PdfTextStyle_kTextH6 = Module["_emscripten_enum_PdfTextStyle_kTextH6"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH6");

var _emscripten_enum_PdfTextStyle_kTextH7 = Module["_emscripten_enum_PdfTextStyle_kTextH7"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH7");

var _emscripten_enum_PdfTextStyle_kTextH8 = Module["_emscripten_enum_PdfTextStyle_kTextH8"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextH8");

var _emscripten_enum_PdfTextStyle_kTextNote = Module["_emscripten_enum_PdfTextStyle_kTextNote"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextNote");

var _emscripten_enum_PdfTextStyle_kTextTitle = Module["_emscripten_enum_PdfTextStyle_kTextTitle"] = createExportWrapper("emscripten_enum_PdfTextStyle_kTextTitle");

var _emscripten_enum_PsFileMode_kPsWrite = Module["_emscripten_enum_PsFileMode_kPsWrite"] = createExportWrapper("emscripten_enum_PsFileMode_kPsWrite");

var _emscripten_enum_PsFileMode_kPsReadOnly = Module["_emscripten_enum_PsFileMode_kPsReadOnly"] = createExportWrapper("emscripten_enum_PsFileMode_kPsReadOnly");

var _emscripten_enum_PsFileMode_kPsTruncate = Module["_emscripten_enum_PsFileMode_kPsTruncate"] = createExportWrapper("emscripten_enum_PsFileMode_kPsTruncate");

var _emscripten_enum_PdfAlternateType_kAlternatePdf = Module["_emscripten_enum_PdfAlternateType_kAlternatePdf"] = createExportWrapper("emscripten_enum_PdfAlternateType_kAlternatePdf");

var _emscripten_enum_PdfAlternateType_kAlternateHtml = Module["_emscripten_enum_PdfAlternateType_kAlternateHtml"] = createExportWrapper("emscripten_enum_PdfAlternateType_kAlternateHtml");

var _emscripten_enum_PdfMediaType_kCSSMediaTypeAll = Module["_emscripten_enum_PdfMediaType_kCSSMediaTypeAll"] = createExportWrapper("emscripten_enum_PdfMediaType_kCSSMediaTypeAll");

var _emscripten_enum_PdfMediaType_kCSSMediaTypePrint = Module["_emscripten_enum_PdfMediaType_kCSSMediaTypePrint"] = createExportWrapper("emscripten_enum_PdfMediaType_kCSSMediaTypePrint");

var _emscripten_enum_PdfMediaType_kCSSMediaTypeScreen = Module["_emscripten_enum_PdfMediaType_kCSSMediaTypeScreen"] = createExportWrapper("emscripten_enum_PdfMediaType_kCSSMediaTypeScreen");

var _emscripten_enum_PdfMediaType_kCSSMediaTypeSpeech = Module["_emscripten_enum_PdfMediaType_kCSSMediaTypeSpeech"] = createExportWrapper("emscripten_enum_PdfMediaType_kCSSMediaTypeSpeech");

var _emscripten_enum_PsImageDIBFormat_kImageDIBFormatArgb = Module["_emscripten_enum_PsImageDIBFormat_kImageDIBFormatArgb"] = createExportWrapper("emscripten_enum_PsImageDIBFormat_kImageDIBFormatArgb");

var _emscripten_enum_PsDataFormat_kDataFormatJson = Module["_emscripten_enum_PsDataFormat_kDataFormatJson"] = createExportWrapper("emscripten_enum_PsDataFormat_kDataFormatJson");

var _emscripten_enum_PsDataFormat_kDataFormatXml = Module["_emscripten_enum_PsDataFormat_kDataFormatXml"] = createExportWrapper("emscripten_enum_PsDataFormat_kDataFormatXml");

var _emscripten_enum_PsDataFormat_kDataFormatTxt = Module["_emscripten_enum_PsDataFormat_kDataFormatTxt"] = createExportWrapper("emscripten_enum_PsDataFormat_kDataFormatTxt");

var _emscripten_enum_PdfStreamType_kFileStream = Module["_emscripten_enum_PdfStreamType_kFileStream"] = createExportWrapper("emscripten_enum_PdfStreamType_kFileStream");

var _emscripten_enum_PdfStreamType_kMemoryStream = Module["_emscripten_enum_PdfStreamType_kMemoryStream"] = createExportWrapper("emscripten_enum_PdfStreamType_kMemoryStream");

var _emscripten_enum_PdfStreamType_kProcStream = Module["_emscripten_enum_PdfStreamType_kProcStream"] = createExportWrapper("emscripten_enum_PdfStreamType_kProcStream");

var _emscripten_enum_PdfStructElementType_kPdsStructKidInvalid = Module["_emscripten_enum_PdfStructElementType_kPdsStructKidInvalid"] = createExportWrapper("emscripten_enum_PdfStructElementType_kPdsStructKidInvalid");

var _emscripten_enum_PdfStructElementType_kPdsStructKidElement = Module["_emscripten_enum_PdfStructElementType_kPdsStructKidElement"] = createExportWrapper("emscripten_enum_PdfStructElementType_kPdsStructKidElement");

var _emscripten_enum_PdfStructElementType_kPdsStructKidPageContent = Module["_emscripten_enum_PdfStructElementType_kPdsStructKidPageContent"] = createExportWrapper("emscripten_enum_PdfStructElementType_kPdsStructKidPageContent");

var _emscripten_enum_PdfStructElementType_kPdsStructKidStreamContent = Module["_emscripten_enum_PdfStructElementType_kPdsStructKidStreamContent"] = createExportWrapper("emscripten_enum_PdfStructElementType_kPdsStructKidStreamContent");

var _emscripten_enum_PdfStructElementType_kPdsStructKidObject = Module["_emscripten_enum_PdfStructElementType_kPdsStructKidObject"] = createExportWrapper("emscripten_enum_PdfStructElementType_kPdsStructKidObject");

var _emscripten_enum_PdfAuthorizationType_kAuthorizationStandard = Module["_emscripten_enum_PdfAuthorizationType_kAuthorizationStandard"] = createExportWrapper("emscripten_enum_PdfAuthorizationType_kAuthorizationStandard");

var _emscripten_enum_PdfAuthorizationType_kAuthorizationAccount = Module["_emscripten_enum_PdfAuthorizationType_kAuthorizationAccount"] = createExportWrapper("emscripten_enum_PdfAuthorizationType_kAuthorizationAccount");

var _emscripten_enum_PdfDestFitType_kDestFitUnknown = Module["_emscripten_enum_PdfDestFitType_kDestFitUnknown"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitUnknown");

var _emscripten_enum_PdfDestFitType_kDestFitXYZ = Module["_emscripten_enum_PdfDestFitType_kDestFitXYZ"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitXYZ");

var _emscripten_enum_PdfDestFitType_kDestFit = Module["_emscripten_enum_PdfDestFitType_kDestFit"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFit");

var _emscripten_enum_PdfDestFitType_kDestFitH = Module["_emscripten_enum_PdfDestFitType_kDestFitH"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitH");

var _emscripten_enum_PdfDestFitType_kDestFitV = Module["_emscripten_enum_PdfDestFitType_kDestFitV"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitV");

var _emscripten_enum_PdfDestFitType_kDestFitR = Module["_emscripten_enum_PdfDestFitType_kDestFitR"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitR");

var _emscripten_enum_PdfDestFitType_kDestFitB = Module["_emscripten_enum_PdfDestFitType_kDestFitB"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitB");

var _emscripten_enum_PdfDestFitType_kDestFitBH = Module["_emscripten_enum_PdfDestFitType_kDestFitBH"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitBH");

var _emscripten_enum_PdfDestFitType_kDestFitBV = Module["_emscripten_enum_PdfDestFitType_kDestFitBV"] = createExportWrapper("emscripten_enum_PdfDestFitType_kDestFitBV");

var _emscripten_enum_PdfLabelType_kLabelNo = Module["_emscripten_enum_PdfLabelType_kLabelNo"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelNo");

var _emscripten_enum_PdfLabelType_kLabelNone = Module["_emscripten_enum_PdfLabelType_kLabelNone"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelNone");

var _emscripten_enum_PdfLabelType_kLabel = Module["_emscripten_enum_PdfLabelType_kLabel"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabel");

var _emscripten_enum_PdfLabelType_kLabelLevel1 = Module["_emscripten_enum_PdfLabelType_kLabelLevel1"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelLevel1");

var _emscripten_enum_PdfLabelType_kLabelLevel2 = Module["_emscripten_enum_PdfLabelType_kLabelLevel2"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelLevel2");

var _emscripten_enum_PdfLabelType_kLabelLevel3 = Module["_emscripten_enum_PdfLabelType_kLabelLevel3"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelLevel3");

var _emscripten_enum_PdfLabelType_kLabelLevel4 = Module["_emscripten_enum_PdfLabelType_kLabelLevel4"] = createExportWrapper("emscripten_enum_PdfLabelType_kLabelLevel4");

var _emscripten_enum_PsCommandStatus_kAVCommandReady = Module["_emscripten_enum_PsCommandStatus_kAVCommandReady"] = createExportWrapper("emscripten_enum_PsCommandStatus_kAVCommandReady");

var _emscripten_enum_PsCommandStatus_kAVCommandWorking = Module["_emscripten_enum_PsCommandStatus_kAVCommandWorking"] = createExportWrapper("emscripten_enum_PsCommandStatus_kAVCommandWorking");

var _emscripten_enum_PsCommandStatus_kAVCommandDone = Module["_emscripten_enum_PsCommandStatus_kAVCommandDone"] = createExportWrapper("emscripten_enum_PsCommandStatus_kAVCommandDone");

var _emscripten_enum_PsCommandStatus_kAVCommandCanceled = Module["_emscripten_enum_PsCommandStatus_kAVCommandCanceled"] = createExportWrapper("emscripten_enum_PsCommandStatus_kAVCommandCanceled");

var _emscripten_enum_PsCommandStatus_kAVCommandInError = Module["_emscripten_enum_PsCommandStatus_kAVCommandInError"] = createExportWrapper("emscripten_enum_PsCommandStatus_kAVCommandInError");

var _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceNormal = Module["_emscripten_enum_PdfAnnotAppearanceMode_kAppearanceNormal"] = createExportWrapper("emscripten_enum_PdfAnnotAppearanceMode_kAppearanceNormal");

var _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceRollover = Module["_emscripten_enum_PdfAnnotAppearanceMode_kAppearanceRollover"] = createExportWrapper("emscripten_enum_PdfAnnotAppearanceMode_kAppearanceRollover");

var _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceDown = Module["_emscripten_enum_PdfAnnotAppearanceMode_kAppearanceDown"] = createExportWrapper("emscripten_enum_PdfAnnotAppearanceMode_kAppearanceDown");

var _emscripten_enum_PdsPathPointType_kPathLineTo = Module["_emscripten_enum_PdsPathPointType_kPathLineTo"] = createExportWrapper("emscripten_enum_PdsPathPointType_kPathLineTo");

var _emscripten_enum_PdsPathPointType_kPathBezierTo = Module["_emscripten_enum_PdsPathPointType_kPathBezierTo"] = createExportWrapper("emscripten_enum_PdsPathPointType_kPathBezierTo");

var _emscripten_enum_PdsPathPointType_kPathMoveTo = Module["_emscripten_enum_PdsPathPointType_kPathMoveTo"] = createExportWrapper("emscripten_enum_PdsPathPointType_kPathMoveTo");

var _emscripten_enum_PdfBlendMode_kBlendModeNormal = Module["_emscripten_enum_PdfBlendMode_kBlendModeNormal"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeNormal");

var _emscripten_enum_PdfBlendMode_kBlendModeMultiply = Module["_emscripten_enum_PdfBlendMode_kBlendModeMultiply"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeMultiply");

var _emscripten_enum_PdfBlendMode_kBlendModeScreen = Module["_emscripten_enum_PdfBlendMode_kBlendModeScreen"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeScreen");

var _emscripten_enum_PdfBlendMode_kBlendModeOverlay = Module["_emscripten_enum_PdfBlendMode_kBlendModeOverlay"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeOverlay");

var _emscripten_enum_PdfBlendMode_kBlendModeDarken = Module["_emscripten_enum_PdfBlendMode_kBlendModeDarken"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeDarken");

var _emscripten_enum_PdfBlendMode_kBlendModeLighten = Module["_emscripten_enum_PdfBlendMode_kBlendModeLighten"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeLighten");

var _emscripten_enum_PdfBlendMode_kBlendModeColorDodge = Module["_emscripten_enum_PdfBlendMode_kBlendModeColorDodge"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeColorDodge");

var _emscripten_enum_PdfBlendMode_kBlendModeColorBurn = Module["_emscripten_enum_PdfBlendMode_kBlendModeColorBurn"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeColorBurn");

var _emscripten_enum_PdfBlendMode_kBlendModeHardLight = Module["_emscripten_enum_PdfBlendMode_kBlendModeHardLight"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeHardLight");

var _emscripten_enum_PdfBlendMode_kBlendModeSoftLight = Module["_emscripten_enum_PdfBlendMode_kBlendModeSoftLight"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeSoftLight");

var _emscripten_enum_PdfBlendMode_kBlendModeDifference = Module["_emscripten_enum_PdfBlendMode_kBlendModeDifference"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeDifference");

var _emscripten_enum_PdfBlendMode_kBlendModeExclusion = Module["_emscripten_enum_PdfBlendMode_kBlendModeExclusion"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeExclusion");

var _emscripten_enum_PdfBlendMode_kBlendModeHue = Module["_emscripten_enum_PdfBlendMode_kBlendModeHue"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeHue");

var _emscripten_enum_PdfBlendMode_kBlendModeSaturation = Module["_emscripten_enum_PdfBlendMode_kBlendModeSaturation"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeSaturation");

var _emscripten_enum_PdfBlendMode_kBlendModeColor = Module["_emscripten_enum_PdfBlendMode_kBlendModeColor"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeColor");

var _emscripten_enum_PdfBlendMode_kBlendModeLuminosity = Module["_emscripten_enum_PdfBlendMode_kBlendModeLuminosity"] = createExportWrapper("emscripten_enum_PdfBlendMode_kBlendModeLuminosity");

var _emscripten_enum_PdfFillRule_kFillRuleNone = Module["_emscripten_enum_PdfFillRule_kFillRuleNone"] = createExportWrapper("emscripten_enum_PdfFillRule_kFillRuleNone");

var _emscripten_enum_PdfFillRule_kFillRuleEvenOdd = Module["_emscripten_enum_PdfFillRule_kFillRuleEvenOdd"] = createExportWrapper("emscripten_enum_PdfFillRule_kFillRuleEvenOdd");

var _emscripten_enum_PdfFillRule_kFillRuleWinding = Module["_emscripten_enum_PdfFillRule_kFillRuleWinding"] = createExportWrapper("emscripten_enum_PdfFillRule_kFillRuleWinding");

var _emscripten_enum_PdfixEnum_kSaveIncremental = Module["_emscripten_enum_PdfixEnum_kSaveIncremental"] = createExportWrapper("emscripten_enum_PdfixEnum_kSaveIncremental");

var _emscripten_enum_PdfixEnum_kSaveFull = Module["_emscripten_enum_PdfixEnum_kSaveFull"] = createExportWrapper("emscripten_enum_PdfixEnum_kSaveFull");

var _emscripten_enum_PdfixEnum_kSaveUncompressed = Module["_emscripten_enum_PdfixEnum_kSaveUncompressed"] = createExportWrapper("emscripten_enum_PdfixEnum_kSaveUncompressed");

var _emscripten_enum_PdfixEnum_kSaveCompressedStructureOnly = Module["_emscripten_enum_PdfixEnum_kSaveCompressedStructureOnly"] = createExportWrapper("emscripten_enum_PdfixEnum_kSaveCompressedStructureOnly");

var _emscripten_enum_PdfixEnum_kAnnotFlagNone = Module["_emscripten_enum_PdfixEnum_kAnnotFlagNone"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagNone");

var _emscripten_enum_PdfixEnum_kAnnotFlagInvisible = Module["_emscripten_enum_PdfixEnum_kAnnotFlagInvisible"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagInvisible");

var _emscripten_enum_PdfixEnum_kAnnotFlagHidden = Module["_emscripten_enum_PdfixEnum_kAnnotFlagHidden"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagHidden");

var _emscripten_enum_PdfixEnum_kAnnotFlagPrint = Module["_emscripten_enum_PdfixEnum_kAnnotFlagPrint"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagPrint");

var _emscripten_enum_PdfixEnum_kAnnotFlagNoZoom = Module["_emscripten_enum_PdfixEnum_kAnnotFlagNoZoom"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagNoZoom");

var _emscripten_enum_PdfixEnum_kAnnotFlagNoRotate = Module["_emscripten_enum_PdfixEnum_kAnnotFlagNoRotate"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagNoRotate");

var _emscripten_enum_PdfixEnum_kAnnotFlagNoView = Module["_emscripten_enum_PdfixEnum_kAnnotFlagNoView"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagNoView");

var _emscripten_enum_PdfixEnum_kAnnotFlagReadOnly = Module["_emscripten_enum_PdfixEnum_kAnnotFlagReadOnly"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagReadOnly");

var _emscripten_enum_PdfixEnum_kAnnotFlagLocked = Module["_emscripten_enum_PdfixEnum_kAnnotFlagLocked"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagLocked");

var _emscripten_enum_PdfixEnum_kAnnotFlagToggleNoView = Module["_emscripten_enum_PdfixEnum_kAnnotFlagToggleNoView"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagToggleNoView");

var _emscripten_enum_PdfixEnum_kAnnotFlagLockedContents = Module["_emscripten_enum_PdfixEnum_kAnnotFlagLockedContents"] = createExportWrapper("emscripten_enum_PdfixEnum_kAnnotFlagLockedContents");

var _emscripten_enum_PdfixEnum_kRemoveAnnotSingle = Module["_emscripten_enum_PdfixEnum_kRemoveAnnotSingle"] = createExportWrapper("emscripten_enum_PdfixEnum_kRemoveAnnotSingle");

var _emscripten_enum_PdfixEnum_kRemoveAnnotPopup = Module["_emscripten_enum_PdfixEnum_kRemoveAnnotPopup"] = createExportWrapper("emscripten_enum_PdfixEnum_kRemoveAnnotPopup");

var _emscripten_enum_PdfixEnum_kRemoveAnnotReply = Module["_emscripten_enum_PdfixEnum_kRemoveAnnotReply"] = createExportWrapper("emscripten_enum_PdfixEnum_kRemoveAnnotReply");

var _emscripten_enum_PdfixEnum_kTextFlagNone = Module["_emscripten_enum_PdfixEnum_kTextFlagNone"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagNone");

var _emscripten_enum_PdfixEnum_kTextFlagUnderline = Module["_emscripten_enum_PdfixEnum_kTextFlagUnderline"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagUnderline");

var _emscripten_enum_PdfixEnum_kTextFlagStrikeout = Module["_emscripten_enum_PdfixEnum_kTextFlagStrikeout"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagStrikeout");

var _emscripten_enum_PdfixEnum_kTextFlagHighlight = Module["_emscripten_enum_PdfixEnum_kTextFlagHighlight"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagHighlight");

var _emscripten_enum_PdfixEnum_kTextFlagSubscript = Module["_emscripten_enum_PdfixEnum_kTextFlagSubscript"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagSubscript");

var _emscripten_enum_PdfixEnum_kTextFlagSuperscript = Module["_emscripten_enum_PdfixEnum_kTextFlagSuperscript"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagSuperscript");

var _emscripten_enum_PdfixEnum_kTextFlagNoUnicode = Module["_emscripten_enum_PdfixEnum_kTextFlagNoUnicode"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagNoUnicode");

var _emscripten_enum_PdfixEnum_kTextFlagPatternFill = Module["_emscripten_enum_PdfixEnum_kTextFlagPatternFill"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagPatternFill");

var _emscripten_enum_PdfixEnum_kTextFlagPatternStroke = Module["_emscripten_enum_PdfixEnum_kTextFlagPatternStroke"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagPatternStroke");

var _emscripten_enum_PdfixEnum_kTextFlagWhiteSpace = Module["_emscripten_enum_PdfixEnum_kTextFlagWhiteSpace"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagWhiteSpace");

var _emscripten_enum_PdfixEnum_kTextFlagUnicode = Module["_emscripten_enum_PdfixEnum_kTextFlagUnicode"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagUnicode");

var _emscripten_enum_PdfixEnum_kFieldFlagNone = Module["_emscripten_enum_PdfixEnum_kFieldFlagNone"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagNone");

var _emscripten_enum_PdfixEnum_kFieldFlagReadOnly = Module["_emscripten_enum_PdfixEnum_kFieldFlagReadOnly"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagReadOnly");

var _emscripten_enum_PdfixEnum_kFieldFlagRequired = Module["_emscripten_enum_PdfixEnum_kFieldFlagRequired"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagRequired");

var _emscripten_enum_PdfixEnum_kFieldFlagNoExport = Module["_emscripten_enum_PdfixEnum_kFieldFlagNoExport"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagNoExport");

var _emscripten_enum_PdfixEnum_kFieldFlagMultiline = Module["_emscripten_enum_PdfixEnum_kFieldFlagMultiline"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagMultiline");

var _emscripten_enum_PdfixEnum_kFieldFlagPassword = Module["_emscripten_enum_PdfixEnum_kFieldFlagPassword"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagPassword");

var _emscripten_enum_PdfixEnum_kFieldFlagNoToggleToOff = Module["_emscripten_enum_PdfixEnum_kFieldFlagNoToggleToOff"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagNoToggleToOff");

var _emscripten_enum_PdfixEnum_kFieldFlagRadio = Module["_emscripten_enum_PdfixEnum_kFieldFlagRadio"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagRadio");

var _emscripten_enum_PdfixEnum_kFieldFlagPushButton = Module["_emscripten_enum_PdfixEnum_kFieldFlagPushButton"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagPushButton");

var _emscripten_enum_PdfixEnum_kFieldFlagCombo = Module["_emscripten_enum_PdfixEnum_kFieldFlagCombo"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagCombo");

var _emscripten_enum_PdfixEnum_kFieldFlagEdit = Module["_emscripten_enum_PdfixEnum_kFieldFlagEdit"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagEdit");

var _emscripten_enum_PdfixEnum_kFieldFlagSort = Module["_emscripten_enum_PdfixEnum_kFieldFlagSort"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagSort");

var _emscripten_enum_PdfixEnum_kFieldFlagMultiSelect = Module["_emscripten_enum_PdfixEnum_kFieldFlagMultiSelect"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagMultiSelect");

var _emscripten_enum_PdfixEnum_kFieldFlagDoNotSpellCheck = Module["_emscripten_enum_PdfixEnum_kFieldFlagDoNotSpellCheck"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagDoNotSpellCheck");

var _emscripten_enum_PdfixEnum_kFieldFlagDCommitOnSelChange = Module["_emscripten_enum_PdfixEnum_kFieldFlagDCommitOnSelChange"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagDCommitOnSelChange");

var _emscripten_enum_PdfixEnum_kFieldFlagFileSelect = Module["_emscripten_enum_PdfixEnum_kFieldFlagFileSelect"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagFileSelect");

var _emscripten_enum_PdfixEnum_kFieldFlagDoNotScroll = Module["_emscripten_enum_PdfixEnum_kFieldFlagDoNotScroll"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagDoNotScroll");

var _emscripten_enum_PdfixEnum_kFieldFlagComb = Module["_emscripten_enum_PdfixEnum_kFieldFlagComb"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagComb");

var _emscripten_enum_PdfixEnum_kFieldFlagRichText = Module["_emscripten_enum_PdfixEnum_kFieldFlagRichText"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagRichText");

var _emscripten_enum_PdfixEnum_kFieldFlagRadiosInUnison = Module["_emscripten_enum_PdfixEnum_kFieldFlagRadiosInUnison"] = createExportWrapper("emscripten_enum_PdfixEnum_kFieldFlagRadiosInUnison");

var _emscripten_enum_PdfixEnum_kRenderAnnot = Module["_emscripten_enum_PdfixEnum_kRenderAnnot"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderAnnot");

var _emscripten_enum_PdfixEnum_kRenderLCDText = Module["_emscripten_enum_PdfixEnum_kRenderLCDText"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderLCDText");

var _emscripten_enum_PdfixEnum_kRenderNoNativeText = Module["_emscripten_enum_PdfixEnum_kRenderNoNativeText"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderNoNativeText");

var _emscripten_enum_PdfixEnum_kRenderGrayscale = Module["_emscripten_enum_PdfixEnum_kRenderGrayscale"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderGrayscale");

var _emscripten_enum_PdfixEnum_kRenderLimitedCache = Module["_emscripten_enum_PdfixEnum_kRenderLimitedCache"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderLimitedCache");

var _emscripten_enum_PdfixEnum_kRenderForceHalftone = Module["_emscripten_enum_PdfixEnum_kRenderForceHalftone"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderForceHalftone");

var _emscripten_enum_PdfixEnum_kRenderPrinting = Module["_emscripten_enum_PdfixEnum_kRenderPrinting"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderPrinting");

var _emscripten_enum_PdfixEnum_kRenderNoText = Module["_emscripten_enum_PdfixEnum_kRenderNoText"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderNoText");

var _emscripten_enum_PdfixEnum_kRenderNoBackground = Module["_emscripten_enum_PdfixEnum_kRenderNoBackground"] = createExportWrapper("emscripten_enum_PdfixEnum_kRenderNoBackground");

var _emscripten_enum_PdfixEnum_kFontFixedPitch = Module["_emscripten_enum_PdfixEnum_kFontFixedPitch"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontFixedPitch");

var _emscripten_enum_PdfixEnum_kFontSerif = Module["_emscripten_enum_PdfixEnum_kFontSerif"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontSerif");

var _emscripten_enum_PdfixEnum_kFontSymbolic = Module["_emscripten_enum_PdfixEnum_kFontSymbolic"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontSymbolic");

var _emscripten_enum_PdfixEnum_kFontScript = Module["_emscripten_enum_PdfixEnum_kFontScript"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontScript");

var _emscripten_enum_PdfixEnum_kFontNotSymbolic = Module["_emscripten_enum_PdfixEnum_kFontNotSymbolic"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontNotSymbolic");

var _emscripten_enum_PdfixEnum_kFontItalic = Module["_emscripten_enum_PdfixEnum_kFontItalic"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontItalic");

var _emscripten_enum_PdfixEnum_kFontAllCap = Module["_emscripten_enum_PdfixEnum_kFontAllCap"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontAllCap");

var _emscripten_enum_PdfixEnum_kFontSmallCap = Module["_emscripten_enum_PdfixEnum_kFontSmallCap"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontSmallCap");

var _emscripten_enum_PdfixEnum_kFontForceBold = Module["_emscripten_enum_PdfixEnum_kFontForceBold"] = createExportWrapper("emscripten_enum_PdfixEnum_kFontForceBold");

var _emscripten_enum_PdfixEnum_kContentImage = Module["_emscripten_enum_PdfixEnum_kContentImage"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentImage");

var _emscripten_enum_PdfixEnum_kContentText = Module["_emscripten_enum_PdfixEnum_kContentText"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentText");

var _emscripten_enum_PdfixEnum_kContentPath = Module["_emscripten_enum_PdfixEnum_kContentPath"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentPath");

var _emscripten_enum_PdfixEnum_kContentForm = Module["_emscripten_enum_PdfixEnum_kContentForm"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentForm");

var _emscripten_enum_PdfixEnum_kContentShading = Module["_emscripten_enum_PdfixEnum_kContentShading"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentShading");

var _emscripten_enum_PdfixEnum_kContentTextTransparent = Module["_emscripten_enum_PdfixEnum_kContentTextTransparent"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentTextTransparent");

var _emscripten_enum_PdfixEnum_kContentTextFill = Module["_emscripten_enum_PdfixEnum_kContentTextFill"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentTextFill");

var _emscripten_enum_PdfixEnum_kContentTextStroke = Module["_emscripten_enum_PdfixEnum_kContentTextStroke"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentTextStroke");

var _emscripten_enum_PdfixEnum_kTableUnknown = Module["_emscripten_enum_PdfixEnum_kTableUnknown"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableUnknown");

var _emscripten_enum_PdfixEnum_kTableGraphic = Module["_emscripten_enum_PdfixEnum_kTableGraphic"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableGraphic");

var _emscripten_enum_PdfixEnum_kTableIsolated = Module["_emscripten_enum_PdfixEnum_kTableIsolated"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableIsolated");

var _emscripten_enum_PdfixEnum_kTableIsolatedCol = Module["_emscripten_enum_PdfixEnum_kTableIsolatedCol"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableIsolatedCol");

var _emscripten_enum_PdfixEnum_kTableIsolatedRow = Module["_emscripten_enum_PdfixEnum_kTableIsolatedRow"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableIsolatedRow");

var _emscripten_enum_PdfixEnum_kTableForm = Module["_emscripten_enum_PdfixEnum_kTableForm"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableForm");

var _emscripten_enum_PdfixEnum_kTableElement = Module["_emscripten_enum_PdfixEnum_kTableElement"] = createExportWrapper("emscripten_enum_PdfixEnum_kTableElement");

var _emscripten_enum_PdfixEnum_kWordFlagHyphen = Module["_emscripten_enum_PdfixEnum_kWordFlagHyphen"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagHyphen");

var _emscripten_enum_PdfixEnum_kWordFlagBullet = Module["_emscripten_enum_PdfixEnum_kWordFlagBullet"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagBullet");

var _emscripten_enum_PdfixEnum_kWordFlagColon = Module["_emscripten_enum_PdfixEnum_kWordFlagColon"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagColon");

var _emscripten_enum_PdfixEnum_kWordFlagNumber = Module["_emscripten_enum_PdfixEnum_kWordFlagNumber"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagNumber");

var _emscripten_enum_PdfixEnum_kWordFlagSubscript = Module["_emscripten_enum_PdfixEnum_kWordFlagSubscript"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagSubscript");

var _emscripten_enum_PdfixEnum_kWordFlagSupercript = Module["_emscripten_enum_PdfixEnum_kWordFlagSupercript"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagSupercript");

var _emscripten_enum_PdfixEnum_kWordFlagTerminal = Module["_emscripten_enum_PdfixEnum_kWordFlagTerminal"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagTerminal");

var _emscripten_enum_PdfixEnum_kWordFlagFirstCap = Module["_emscripten_enum_PdfixEnum_kWordFlagFirstCap"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagFirstCap");

var _emscripten_enum_PdfixEnum_kWordFlagImage = Module["_emscripten_enum_PdfixEnum_kWordFlagImage"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagImage");

var _emscripten_enum_PdfixEnum_kWordFlagNumberingDecimal = Module["_emscripten_enum_PdfixEnum_kWordFlagNumberingDecimal"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagNumberingDecimal");

var _emscripten_enum_PdfixEnum_kWordFlagNumberingRoman = Module["_emscripten_enum_PdfixEnum_kWordFlagNumberingRoman"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagNumberingRoman");

var _emscripten_enum_PdfixEnum_kWordFlagNumberingLetter = Module["_emscripten_enum_PdfixEnum_kWordFlagNumberingLetter"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagNumberingLetter");

var _emscripten_enum_PdfixEnum_kWordFlagPageNumber = Module["_emscripten_enum_PdfixEnum_kWordFlagPageNumber"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagPageNumber");

var _emscripten_enum_PdfixEnum_kWordFlagFilling = Module["_emscripten_enum_PdfixEnum_kWordFlagFilling"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagFilling");

var _emscripten_enum_PdfixEnum_kWordFlagAllCaps = Module["_emscripten_enum_PdfixEnum_kWordFlagAllCaps"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagAllCaps");

var _emscripten_enum_PdfixEnum_kWordFlagComma = Module["_emscripten_enum_PdfixEnum_kWordFlagComma"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagComma");

var _emscripten_enum_PdfixEnum_kWordFlagNoUnicode = Module["_emscripten_enum_PdfixEnum_kWordFlagNoUnicode"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagNoUnicode");

var _emscripten_enum_PdfixEnum_kWordFlagLetter = Module["_emscripten_enum_PdfixEnum_kWordFlagLetter"] = createExportWrapper("emscripten_enum_PdfixEnum_kWordFlagLetter");

var _emscripten_enum_PdfixEnum_kTextLineFlagHyphen = Module["_emscripten_enum_PdfixEnum_kTextLineFlagHyphen"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagHyphen");

var _emscripten_enum_PdfixEnum_kTextLineFlagNewLine = Module["_emscripten_enum_PdfixEnum_kTextLineFlagNewLine"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagNewLine");

var _emscripten_enum_PdfixEnum_kTextLineFlagIndent = Module["_emscripten_enum_PdfixEnum_kTextLineFlagIndent"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagIndent");

var _emscripten_enum_PdfixEnum_kTextLineFlagTerminal = Module["_emscripten_enum_PdfixEnum_kTextLineFlagTerminal"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagTerminal");

var _emscripten_enum_PdfixEnum_kTextLineFlagDropCap = Module["_emscripten_enum_PdfixEnum_kTextLineFlagDropCap"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagDropCap");

var _emscripten_enum_PdfixEnum_kTextLineFlagFilling = Module["_emscripten_enum_PdfixEnum_kTextLineFlagFilling"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagFilling");

var _emscripten_enum_PdfixEnum_kTextLineFlagAllCaps = Module["_emscripten_enum_PdfixEnum_kTextLineFlagAllCaps"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextLineFlagAllCaps");

var _emscripten_enum_PdfixEnum_kTextFlagTableCaption = Module["_emscripten_enum_PdfixEnum_kTextFlagTableCaption"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagTableCaption");

var _emscripten_enum_PdfixEnum_kTextFlagImageCaption = Module["_emscripten_enum_PdfixEnum_kTextFlagImageCaption"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagImageCaption");

var _emscripten_enum_PdfixEnum_kTextFlagChartCaption = Module["_emscripten_enum_PdfixEnum_kTextFlagChartCaption"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagChartCaption");

var _emscripten_enum_PdfixEnum_kTextFlagNoteCaption = Module["_emscripten_enum_PdfixEnum_kTextFlagNoteCaption"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagNoteCaption");

var _emscripten_enum_PdfixEnum_kTextFlagFilling = Module["_emscripten_enum_PdfixEnum_kTextFlagFilling"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagFilling");

var _emscripten_enum_PdfixEnum_kTextFlagAllCaps = Module["_emscripten_enum_PdfixEnum_kTextFlagAllCaps"] = createExportWrapper("emscripten_enum_PdfixEnum_kTextFlagAllCaps");

var _emscripten_enum_PdfixEnum_kElemNoJoin = Module["_emscripten_enum_PdfixEnum_kElemNoJoin"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemNoJoin");

var _emscripten_enum_PdfixEnum_kElemNoSplit = Module["_emscripten_enum_PdfixEnum_kElemNoSplit"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemNoSplit");

var _emscripten_enum_PdfixEnum_kElemArtifact = Module["_emscripten_enum_PdfixEnum_kElemArtifact"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemArtifact");

var _emscripten_enum_PdfixEnum_kElemHeader = Module["_emscripten_enum_PdfixEnum_kElemHeader"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemHeader");

var _emscripten_enum_PdfixEnum_kElemFooter = Module["_emscripten_enum_PdfixEnum_kElemFooter"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemFooter");

var _emscripten_enum_PdfixEnum_kElemSplitter = Module["_emscripten_enum_PdfixEnum_kElemSplitter"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemSplitter");

var _emscripten_enum_PdfixEnum_kElemNoTable = Module["_emscripten_enum_PdfixEnum_kElemNoTable"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemNoTable");

var _emscripten_enum_PdfixEnum_kElemTable = Module["_emscripten_enum_PdfixEnum_kElemTable"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemTable");

var _emscripten_enum_PdfixEnum_kElemWordSplitter = Module["_emscripten_enum_PdfixEnum_kElemWordSplitter"] = createExportWrapper("emscripten_enum_PdfixEnum_kElemWordSplitter");

var _emscripten_enum_PdfixEnum_kPageInsertNone = Module["_emscripten_enum_PdfixEnum_kPageInsertNone"] = createExportWrapper("emscripten_enum_PdfixEnum_kPageInsertNone");

var _emscripten_enum_PdfixEnum_kPageInsertBookmarks = Module["_emscripten_enum_PdfixEnum_kPageInsertBookmarks"] = createExportWrapper("emscripten_enum_PdfixEnum_kPageInsertBookmarks");

var _emscripten_enum_PdfixEnum_kPageInsertAll = Module["_emscripten_enum_PdfixEnum_kPageInsertAll"] = createExportWrapper("emscripten_enum_PdfixEnum_kPageInsertAll");

var _emscripten_enum_PdfixEnum_kContentToPage = Module["_emscripten_enum_PdfixEnum_kContentToPage"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentToPage");

var _emscripten_enum_PdfixEnum_kContentToForm = Module["_emscripten_enum_PdfixEnum_kContentToForm"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentToForm");

var _emscripten_enum_PdfixEnum_kContentToCharproc = Module["_emscripten_enum_PdfixEnum_kContentToCharproc"] = createExportWrapper("emscripten_enum_PdfixEnum_kContentToCharproc");

var _emscripten_enum_PdfHtmlType_kPdfHtmlFixed = Module["_emscripten_enum_PdfHtmlType_kPdfHtmlFixed"] = createExportWrapper("emscripten_enum_PdfHtmlType_kPdfHtmlFixed");

var _emscripten_enum_PdfHtmlType_kPdfHtmlResponsive = Module["_emscripten_enum_PdfHtmlType_kPdfHtmlResponsive"] = createExportWrapper("emscripten_enum_PdfHtmlType_kPdfHtmlResponsive");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNone = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNone"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNone");

var _emscripten_enum_PdfToHtmlEnum_kHtmlExportJavaScripts = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlExportJavaScripts"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlExportJavaScripts");

var _emscripten_enum_PdfToHtmlEnum_kHtmlExportFonts = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlExportFonts"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlExportFonts");

var _emscripten_enum_PdfToHtmlEnum_kHtmlRetainFontSize = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlRetainFontSize"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlRetainFontSize");

var _emscripten_enum_PdfToHtmlEnum_kHtmlRetainTextColor = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlRetainTextColor"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlRetainTextColor");

var _emscripten_enum_PdfToHtmlEnum_kHtml41Support = Module["_emscripten_enum_PdfToHtmlEnum_kHtml41Support"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtml41Support");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalCSS = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalCSS"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalCSS");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalJS = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalJS"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalJS");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalIMG = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalIMG"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalIMG");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalFONT = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalFONT"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalFONT");

var _emscripten_enum_PdfToHtmlEnum_kHtmlGrayBackground = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlGrayBackground"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlGrayBackground");

var _emscripten_enum_PdfToHtmlEnum_kHtmlNoPageRender = Module["_emscripten_enum_PdfToHtmlEnum_kHtmlNoPageRender"] = createExportWrapper("emscripten_enum_PdfToHtmlEnum_kHtmlNoPageRender");

var _GetPdfix = Module["_GetPdfix"] = createExportWrapper("GetPdfix");

var _GetPdfToHtml = Module["_GetPdfToHtml"] = createExportWrapper("GetPdfToHtml");

var ___getTypeName = Module["___getTypeName"] = createExportWrapper("__getTypeName");

var ___embind_register_native_and_builtin_types = Module["___embind_register_native_and_builtin_types"] = createExportWrapper("__embind_register_native_and_builtin_types");

var ___errno_location = Module["___errno_location"] = createExportWrapper("__errno_location");

var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = createExportWrapper("emscripten_get_global_libc");

var ___em_js__initPthreadsJS = Module["___em_js__initPthreadsJS"] = createExportWrapper("__em_js__initPthreadsJS");

var ___emscripten_pthread_data_constructor = Module["___emscripten_pthread_data_constructor"] = createExportWrapper("__emscripten_pthread_data_constructor");

var _fflush = Module["_fflush"] = createExportWrapper("fflush");

var _malloc = Module["_malloc"] = createExportWrapper("malloc");

var __get_tzname = Module["__get_tzname"] = createExportWrapper("_get_tzname");

var __get_daylight = Module["__get_daylight"] = createExportWrapper("_get_daylight");

var __get_timezone = Module["__get_timezone"] = createExportWrapper("_get_timezone");

var _setThrew = Module["_setThrew"] = createExportWrapper("setThrew");

var stackSave = Module["stackSave"] = createExportWrapper("stackSave");

var stackRestore = Module["stackRestore"] = createExportWrapper("stackRestore");

var stackAlloc = Module["stackAlloc"] = createExportWrapper("stackAlloc");

var _saveSetjmp = Module["_saveSetjmp"] = createExportWrapper("saveSetjmp");

var _testSetjmp = Module["_testSetjmp"] = createExportWrapper("testSetjmp");

var _free = Module["_free"] = createExportWrapper("free");

var _memset = Module["_memset"] = createExportWrapper("memset");

var _realloc = Module["_realloc"] = createExportWrapper("realloc");

var _memalign = Module["_memalign"] = createExportWrapper("memalign");

var _emscripten_main_browser_thread_id = Module["_emscripten_main_browser_thread_id"] = createExportWrapper("emscripten_main_browser_thread_id");

var ___pthread_tsd_run_dtors = Module["___pthread_tsd_run_dtors"] = createExportWrapper("__pthread_tsd_run_dtors");

var _emscripten_main_thread_process_queued_calls = Module["_emscripten_main_thread_process_queued_calls"] = createExportWrapper("emscripten_main_thread_process_queued_calls");

var _emscripten_current_thread_process_queued_calls = Module["_emscripten_current_thread_process_queued_calls"] = createExportWrapper("emscripten_current_thread_process_queued_calls");

var _emscripten_register_main_browser_thread_id = Module["_emscripten_register_main_browser_thread_id"] = createExportWrapper("emscripten_register_main_browser_thread_id");

var _do_emscripten_dispatch_to_thread = Module["_do_emscripten_dispatch_to_thread"] = createExportWrapper("do_emscripten_dispatch_to_thread");

var _emscripten_async_run_in_main_thread = Module["_emscripten_async_run_in_main_thread"] = createExportWrapper("emscripten_async_run_in_main_thread");

var _emscripten_sync_run_in_main_thread = Module["_emscripten_sync_run_in_main_thread"] = createExportWrapper("emscripten_sync_run_in_main_thread");

var _emscripten_sync_run_in_main_thread_0 = Module["_emscripten_sync_run_in_main_thread_0"] = createExportWrapper("emscripten_sync_run_in_main_thread_0");

var _emscripten_sync_run_in_main_thread_1 = Module["_emscripten_sync_run_in_main_thread_1"] = createExportWrapper("emscripten_sync_run_in_main_thread_1");

var _emscripten_sync_run_in_main_thread_2 = Module["_emscripten_sync_run_in_main_thread_2"] = createExportWrapper("emscripten_sync_run_in_main_thread_2");

var _emscripten_sync_run_in_main_thread_xprintf_varargs = Module["_emscripten_sync_run_in_main_thread_xprintf_varargs"] = createExportWrapper("emscripten_sync_run_in_main_thread_xprintf_varargs");

var _emscripten_sync_run_in_main_thread_3 = Module["_emscripten_sync_run_in_main_thread_3"] = createExportWrapper("emscripten_sync_run_in_main_thread_3");

var _emscripten_sync_run_in_main_thread_4 = Module["_emscripten_sync_run_in_main_thread_4"] = createExportWrapper("emscripten_sync_run_in_main_thread_4");

var _emscripten_sync_run_in_main_thread_5 = Module["_emscripten_sync_run_in_main_thread_5"] = createExportWrapper("emscripten_sync_run_in_main_thread_5");

var _emscripten_sync_run_in_main_thread_6 = Module["_emscripten_sync_run_in_main_thread_6"] = createExportWrapper("emscripten_sync_run_in_main_thread_6");

var _emscripten_sync_run_in_main_thread_7 = Module["_emscripten_sync_run_in_main_thread_7"] = createExportWrapper("emscripten_sync_run_in_main_thread_7");

var _emscripten_run_in_main_runtime_thread_js = Module["_emscripten_run_in_main_runtime_thread_js"] = createExportWrapper("emscripten_run_in_main_runtime_thread_js");

var __emscripten_call_on_thread = Module["__emscripten_call_on_thread"] = createExportWrapper("_emscripten_call_on_thread");

var _emscripten_tls_init = Module["_emscripten_tls_init"] = createExportWrapper("emscripten_tls_init");

var dynCall_v = Module["dynCall_v"] = createExportWrapper("dynCall_v");

var dynCall_vi = Module["dynCall_vi"] = createExportWrapper("dynCall_vi");

var dynCall_vii = Module["dynCall_vii"] = createExportWrapper("dynCall_vii");

var dynCall_viii = Module["dynCall_viii"] = createExportWrapper("dynCall_viii");

var dynCall_viiii = Module["dynCall_viiii"] = createExportWrapper("dynCall_viiii");

var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = createExportWrapper("dynCall_viiiiiii");

var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = createExportWrapper("dynCall_viiiiiiiii");

var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = createExportWrapper("dynCall_viiiiiiiiii");

var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = createExportWrapper("dynCall_viiiiiiiiiiiiiii");

var dynCall_viid = Module["dynCall_viid"] = createExportWrapper("dynCall_viid");

var dynCall_i = Module["dynCall_i"] = createExportWrapper("dynCall_i");

var dynCall_ii = Module["dynCall_ii"] = createExportWrapper("dynCall_ii");

var dynCall_iii = Module["dynCall_iii"] = createExportWrapper("dynCall_iii");

var dynCall_iiii = Module["dynCall_iiii"] = createExportWrapper("dynCall_iiii");

var dynCall_iiiii = Module["dynCall_iiiii"] = createExportWrapper("dynCall_iiiii");

var dynCall_iiiiii = Module["dynCall_iiiiii"] = createExportWrapper("dynCall_iiiiii");

var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = createExportWrapper("dynCall_iiiiiii");

var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = createExportWrapper("dynCall_iiiiiiii");

var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiii");

var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiiii");

var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiiiii");

var dynCall_iiiiiiiiiiiii = Module["dynCall_iiiiiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiiiiii");

var dynCall_iiiiid = Module["dynCall_iiiiid"] = createExportWrapper("dynCall_iiiiid");

var dynCall_jiiii = Module["dynCall_jiiii"] = createExportWrapper("dynCall_jiiii");

var dynCall_fiii = Module["dynCall_fiii"] = createExportWrapper("dynCall_fiii");

var dynCall_diii = Module["dynCall_diii"] = createExportWrapper("dynCall_diii");

var ___set_stack_limit = Module["___set_stack_limit"] = createExportWrapper("__set_stack_limit");

var __growWasmMemory = Module["__growWasmMemory"] = createExportWrapper("__growWasmMemory");

var dynCall_iidiiii = Module["dynCall_iidiiii"] = createExportWrapper("dynCall_iidiiii");

var dynCall_viiiiii = Module["dynCall_viiiiii"] = createExportWrapper("dynCall_viiiiii");

var dynCall_viiiii = Module["dynCall_viiiii"] = createExportWrapper("dynCall_viiiii");

var dynCall_jiji = Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");

var dynCall_iiid = Module["dynCall_iiid"] = createExportWrapper("dynCall_iiid");

var dynCall_iiiff = Module["dynCall_iiiff"] = createExportWrapper("dynCall_iiiff");

var dynCall_iiif = Module["dynCall_iiif"] = createExportWrapper("dynCall_iiif");

var dynCall_di = Module["dynCall_di"] = createExportWrapper("dynCall_di");

var dynCall_iiiiiifi = Module["dynCall_iiiiiifi"] = createExportWrapper("dynCall_iiiiiifi");

var dynCall_fi = Module["dynCall_fi"] = createExportWrapper("dynCall_fi");

var dynCall_ji = Module["dynCall_ji"] = createExportWrapper("dynCall_ji");

var dynCall_jij = Module["dynCall_jij"] = createExportWrapper("dynCall_jij");

var dynCall_iiiij = Module["dynCall_iiiij"] = createExportWrapper("dynCall_iiiij");

var dynCall_iij = Module["dynCall_iij"] = createExportWrapper("dynCall_iij");

var dynCall_iiiji = Module["dynCall_iiiji"] = createExportWrapper("dynCall_iiiji");

var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = createExportWrapper("dynCall_viiiiiiii");

var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiii");

var dynCall_viijii = Module["dynCall_viijii"] = createExportWrapper("dynCall_viijii");

var dynCall_iiji = Module["dynCall_iiji"] = createExportWrapper("dynCall_iiji");

var dynCall_jji = Module["dynCall_jji"] = createExportWrapper("dynCall_jji");

var dynCall_iji = Module["dynCall_iji"] = createExportWrapper("dynCall_iji");

var dynCall_diid = Module["dynCall_diid"] = createExportWrapper("dynCall_diid");

var dynCall_idi = Module["dynCall_idi"] = createExportWrapper("dynCall_idi");

var dynCall_dii = Module["dynCall_dii"] = createExportWrapper("dynCall_dii");

var dynCall_vij = Module["dynCall_vij"] = createExportWrapper("dynCall_vij");

var dynCall_iijji = Module["dynCall_iijji"] = createExportWrapper("dynCall_iijji");

var dynCall_iidi = Module["dynCall_iidi"] = createExportWrapper("dynCall_iidi");

var dynCall_iiiiij = Module["dynCall_iiiiij"] = createExportWrapper("dynCall_iiiiij");

var dynCall_iiiiijj = Module["dynCall_iiiiijj"] = createExportWrapper("dynCall_iiiiijj");

var dynCall_iiiiiijj = Module["dynCall_iiiiiijj"] = createExportWrapper("dynCall_iiiiiijj");

function invoke_ii(index, a1) {
 var sp = stackSave();
 try {
  return dynCall_ii(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_v(index) {
 var sp = stackSave();
 try {
  dynCall_v(index);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iii(index, a1, a2) {
 var sp = stackSave();
 try {
  return dynCall_iii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 var sp = stackSave();
 try {
  return dynCall_iiiiii(index, a1, a2, a3, a4, a5);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_iiii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  dynCall_viiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  return dynCall_iiiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vii(index, a1, a2) {
 var sp = stackSave();
 try {
  dynCall_vii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viid(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  dynCall_viid(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_vi(index, a1) {
 var sp = stackSave();
 try {
  dynCall_vi(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  dynCall_viii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_i(index) {
 var sp = stackSave();
 try {
  return dynCall_i(index);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 var sp = stackSave();
 try {
  dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_fiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_fiii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_diii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_diii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 var sp = stackSave();
 try {
  dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 var sp = stackSave();
 try {
  dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 var sp = stackSave();
 try {
  dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
 var sp = stackSave();
 try {
  return dynCall_iiiiid(index, a1, a2, a3, a4, a5);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

function invoke_jiiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  return dynCall_jiiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0 && e !== "longjmp") throw e;
  _setThrew(1, 0);
 }
}

Module["intArrayFromString"] = intArrayFromString;

if (!Object.getOwnPropertyDescriptor(Module, "intArrayToString")) Module["intArrayToString"] = function() {
 abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["ccall"] = ccall;

Module["cwrap"] = cwrap;

Module["setValue"] = setValue;

Module["getValue"] = getValue;

Module["allocate"] = allocate;

if (!Object.getOwnPropertyDescriptor(Module, "getMemory")) Module["getMemory"] = function() {
 abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "UTF8ArrayToString")) Module["UTF8ArrayToString"] = function() {
 abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["UTF8ToString"] = UTF8ToString;

if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF8Array")) Module["stringToUTF8Array"] = function() {
 abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["stringToUTF8"] = stringToUTF8;

if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF8")) Module["lengthBytesUTF8"] = function() {
 abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stackTrace")) Module["stackTrace"] = function() {
 abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addOnPreRun")) Module["addOnPreRun"] = function() {
 abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addOnInit")) Module["addOnInit"] = function() {
 abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addOnPreMain")) Module["addOnPreMain"] = function() {
 abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addOnExit")) Module["addOnExit"] = function() {
 abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addOnPostRun")) Module["addOnPostRun"] = function() {
 abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeStringToMemory")) Module["writeStringToMemory"] = function() {
 abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeArrayToMemory")) Module["writeArrayToMemory"] = function() {
 abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeAsciiToMemory")) Module["writeAsciiToMemory"] = function() {
 abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "addRunDependency")) Module["addRunDependency"] = function() {
 abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "removeRunDependency")) Module["removeRunDependency"] = function() {
 abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createFolder")) Module["FS_createFolder"] = function() {
 abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createPath")) Module["FS_createPath"] = function() {
 abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createDataFile")) Module["FS_createDataFile"] = function() {
 abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createPreloadedFile")) Module["FS_createPreloadedFile"] = function() {
 abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createLazyFile")) Module["FS_createLazyFile"] = function() {
 abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createLink")) Module["FS_createLink"] = function() {
 abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_createDevice")) Module["FS_createDevice"] = function() {
 abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "FS_unlink")) Module["FS_unlink"] = function() {
 abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you");
};

if (!Object.getOwnPropertyDescriptor(Module, "dynamicAlloc")) Module["dynamicAlloc"] = function() {
 abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "loadDynamicLibrary")) Module["loadDynamicLibrary"] = function() {
 abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "loadWebAssemblyModule")) Module["loadWebAssemblyModule"] = function() {
 abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getLEB")) Module["getLEB"] = function() {
 abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getFunctionTables")) Module["getFunctionTables"] = function() {
 abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "alignFunctionTables")) Module["alignFunctionTables"] = function() {
 abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registerFunctions")) Module["registerFunctions"] = function() {
 abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["addFunction"] = addFunction;

Module["removeFunction"] = removeFunction;

if (!Object.getOwnPropertyDescriptor(Module, "getFuncWrapper")) Module["getFuncWrapper"] = function() {
 abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "prettyPrint")) Module["prettyPrint"] = function() {
 abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "makeBigInt")) Module["makeBigInt"] = function() {
 abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "dynCall")) Module["dynCall"] = function() {
 abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getCompilerSetting")) Module["getCompilerSetting"] = function() {
 abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "print")) Module["print"] = function() {
 abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "printErr")) Module["printErr"] = function() {
 abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getTempRet0")) Module["getTempRet0"] = function() {
 abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "setTempRet0")) Module["setTempRet0"] = function() {
 abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "callMain")) Module["callMain"] = function() {
 abort("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "abort")) Module["abort"] = function() {
 abort("'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stringToNewUTF8")) Module["stringToNewUTF8"] = function() {
 abort("'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emscripten_realloc_buffer")) Module["emscripten_realloc_buffer"] = function() {
 abort("'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ENV")) Module["ENV"] = function() {
 abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ERRNO_CODES")) Module["ERRNO_CODES"] = function() {
 abort("'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ERRNO_MESSAGES")) Module["ERRNO_MESSAGES"] = function() {
 abort("'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "setErrNo")) Module["setErrNo"] = function() {
 abort("'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "DNS")) Module["DNS"] = function() {
 abort("'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GAI_ERRNO_MESSAGES")) Module["GAI_ERRNO_MESSAGES"] = function() {
 abort("'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "Protocols")) Module["Protocols"] = function() {
 abort("'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "Sockets")) Module["Sockets"] = function() {
 abort("'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "traverseStack")) Module["traverseStack"] = function() {
 abort("'traverseStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "UNWIND_CACHE")) Module["UNWIND_CACHE"] = function() {
 abort("'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "withBuiltinMalloc")) Module["withBuiltinMalloc"] = function() {
 abort("'withBuiltinMalloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "readAsmConstArgsArray")) Module["readAsmConstArgsArray"] = function() {
 abort("'readAsmConstArgsArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "readAsmConstArgs")) Module["readAsmConstArgs"] = function() {
 abort("'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "jstoi_q")) Module["jstoi_q"] = function() {
 abort("'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "jstoi_s")) Module["jstoi_s"] = function() {
 abort("'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getExecutableName")) Module["getExecutableName"] = function() {
 abort("'getExecutableName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "listenOnce")) Module["listenOnce"] = function() {
 abort("'listenOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "autoResumeAudioContext")) Module["autoResumeAudioContext"] = function() {
 abort("'autoResumeAudioContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "abortStackOverflow")) Module["abortStackOverflow"] = function() {
 abort("'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "reallyNegative")) Module["reallyNegative"] = function() {
 abort("'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "formatString")) Module["formatString"] = function() {
 abort("'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "PATH")) Module["PATH"] = function() {
 abort("'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "PATH_FS")) Module["PATH_FS"] = function() {
 abort("'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SYSCALLS")) Module["SYSCALLS"] = function() {
 abort("'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "syscallMmap2")) Module["syscallMmap2"] = function() {
 abort("'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "syscallMunmap")) Module["syscallMunmap"] = function() {
 abort("'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "JSEvents")) Module["JSEvents"] = function() {
 abort("'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "specialHTMLTargets")) Module["specialHTMLTargets"] = function() {
 abort("'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "maybeCStringToJsString")) Module["maybeCStringToJsString"] = function() {
 abort("'maybeCStringToJsString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "findEventTarget")) Module["findEventTarget"] = function() {
 abort("'findEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "findCanvasEventTarget")) Module["findCanvasEventTarget"] = function() {
 abort("'findCanvasEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "polyfillSetImmediate")) Module["polyfillSetImmediate"] = function() {
 abort("'polyfillSetImmediate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "demangle")) Module["demangle"] = function() {
 abort("'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "demangleAll")) Module["demangleAll"] = function() {
 abort("'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "jsStackTrace")) Module["jsStackTrace"] = function() {
 abort("'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stackTrace")) Module["stackTrace"] = function() {
 abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getEnvStrings")) Module["getEnvStrings"] = function() {
 abort("'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "checkWasiClock")) Module["checkWasiClock"] = function() {
 abort("'checkWasiClock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64")) Module["writeI53ToI64"] = function() {
 abort("'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64Clamped")) Module["writeI53ToI64Clamped"] = function() {
 abort("'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64Signaling")) Module["writeI53ToI64Signaling"] = function() {
 abort("'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToU64Clamped")) Module["writeI53ToU64Clamped"] = function() {
 abort("'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToU64Signaling")) Module["writeI53ToU64Signaling"] = function() {
 abort("'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "readI53FromI64")) Module["readI53FromI64"] = function() {
 abort("'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "readI53FromU64")) Module["readI53FromU64"] = function() {
 abort("'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "convertI32PairToI53")) Module["convertI32PairToI53"] = function() {
 abort("'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "convertU32PairToI53")) Module["convertU32PairToI53"] = function() {
 abort("'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exceptionLast")) Module["exceptionLast"] = function() {
 abort("'exceptionLast' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exceptionCaught")) Module["exceptionCaught"] = function() {
 abort("'exceptionCaught' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exceptionInfos")) Module["exceptionInfos"] = function() {
 abort("'exceptionInfos' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exception_deAdjust")) Module["exception_deAdjust"] = function() {
 abort("'exception_deAdjust' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exception_addRef")) Module["exception_addRef"] = function() {
 abort("'exception_addRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exception_decRef")) Module["exception_decRef"] = function() {
 abort("'exception_decRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "Browser")) Module["Browser"] = function() {
 abort("'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "tempFixedLengthArray")) Module["tempFixedLengthArray"] = function() {
 abort("'tempFixedLengthArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "miniTempWebGLFloatBuffers")) Module["miniTempWebGLFloatBuffers"] = function() {
 abort("'miniTempWebGLFloatBuffers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "heapObjectForWebGLType")) Module["heapObjectForWebGLType"] = function() {
 abort("'heapObjectForWebGLType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "heapAccessShiftForWebGLHeap")) Module["heapAccessShiftForWebGLHeap"] = function() {
 abort("'heapAccessShiftForWebGLHeap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GL")) Module["GL"] = function() {
 abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGet")) Module["emscriptenWebGLGet"] = function() {
 abort("'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "computeUnpackAlignedImageSize")) Module["computeUnpackAlignedImageSize"] = function() {
 abort("'computeUnpackAlignedImageSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetTexPixelData")) Module["emscriptenWebGLGetTexPixelData"] = function() {
 abort("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetUniform")) Module["emscriptenWebGLGetUniform"] = function() {
 abort("'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetVertexAttrib")) Module["emscriptenWebGLGetVertexAttrib"] = function() {
 abort("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "writeGLArray")) Module["writeGLArray"] = function() {
 abort("'writeGLArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["FS"] = FS;

if (!Object.getOwnPropertyDescriptor(Module, "MEMFS")) Module["MEMFS"] = function() {
 abort("'MEMFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "TTY")) Module["TTY"] = function() {
 abort("'TTY' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "PIPEFS")) Module["PIPEFS"] = function() {
 abort("'PIPEFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SOCKFS")) Module["SOCKFS"] = function() {
 abort("'SOCKFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "AL")) Module["AL"] = function() {
 abort("'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SDL_unicode")) Module["SDL_unicode"] = function() {
 abort("'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SDL_ttfContext")) Module["SDL_ttfContext"] = function() {
 abort("'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SDL_audio")) Module["SDL_audio"] = function() {
 abort("'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SDL")) Module["SDL"] = function() {
 abort("'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "SDL_gfx")) Module["SDL_gfx"] = function() {
 abort("'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GLUT")) Module["GLUT"] = function() {
 abort("'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "EGL")) Module["EGL"] = function() {
 abort("'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GLFW_Window")) Module["GLFW_Window"] = function() {
 abort("'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GLFW")) Module["GLFW"] = function() {
 abort("'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "GLEW")) Module["GLEW"] = function() {
 abort("'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "IDBStore")) Module["IDBStore"] = function() {
 abort("'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "runAndAbortIfError")) Module["runAndAbortIfError"] = function() {
 abort("'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_handle_array")) Module["emval_handle_array"] = function() {
 abort("'emval_handle_array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_free_list")) Module["emval_free_list"] = function() {
 abort("'emval_free_list' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_symbols")) Module["emval_symbols"] = function() {
 abort("'emval_symbols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "init_emval")) Module["init_emval"] = function() {
 abort("'init_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "count_emval_handles")) Module["count_emval_handles"] = function() {
 abort("'count_emval_handles' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "get_first_emval")) Module["get_first_emval"] = function() {
 abort("'get_first_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getStringOrSymbol")) Module["getStringOrSymbol"] = function() {
 abort("'getStringOrSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "requireHandle")) Module["requireHandle"] = function() {
 abort("'requireHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_newers")) Module["emval_newers"] = function() {
 abort("'emval_newers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "craftEmvalAllocator")) Module["craftEmvalAllocator"] = function() {
 abort("'craftEmvalAllocator' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_get_global")) Module["emval_get_global"] = function() {
 abort("'emval_get_global' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "emval_methodCallers")) Module["emval_methodCallers"] = function() {
 abort("'emval_methodCallers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "InternalError")) Module["InternalError"] = function() {
 abort("'InternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "BindingError")) Module["BindingError"] = function() {
 abort("'BindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "UnboundTypeError")) Module["UnboundTypeError"] = function() {
 abort("'UnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "PureVirtualError")) Module["PureVirtualError"] = function() {
 abort("'PureVirtualError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "init_embind")) Module["init_embind"] = function() {
 abort("'init_embind' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "throwInternalError")) Module["throwInternalError"] = function() {
 abort("'throwInternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "throwBindingError")) Module["throwBindingError"] = function() {
 abort("'throwBindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "throwUnboundTypeError")) Module["throwUnboundTypeError"] = function() {
 abort("'throwUnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ensureOverloadTable")) Module["ensureOverloadTable"] = function() {
 abort("'ensureOverloadTable' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "exposePublicSymbol")) Module["exposePublicSymbol"] = function() {
 abort("'exposePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "replacePublicSymbol")) Module["replacePublicSymbol"] = function() {
 abort("'replacePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "extendError")) Module["extendError"] = function() {
 abort("'extendError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "createNamedFunction")) Module["createNamedFunction"] = function() {
 abort("'createNamedFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registeredInstances")) Module["registeredInstances"] = function() {
 abort("'registeredInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getBasestPointer")) Module["getBasestPointer"] = function() {
 abort("'getBasestPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registerInheritedInstance")) Module["registerInheritedInstance"] = function() {
 abort("'registerInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "unregisterInheritedInstance")) Module["unregisterInheritedInstance"] = function() {
 abort("'unregisterInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getInheritedInstance")) Module["getInheritedInstance"] = function() {
 abort("'getInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getInheritedInstanceCount")) Module["getInheritedInstanceCount"] = function() {
 abort("'getInheritedInstanceCount' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getLiveInheritedInstances")) Module["getLiveInheritedInstances"] = function() {
 abort("'getLiveInheritedInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registeredTypes")) Module["registeredTypes"] = function() {
 abort("'registeredTypes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "awaitingDependencies")) Module["awaitingDependencies"] = function() {
 abort("'awaitingDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "typeDependencies")) Module["typeDependencies"] = function() {
 abort("'typeDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registeredPointers")) Module["registeredPointers"] = function() {
 abort("'registeredPointers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registerType")) Module["registerType"] = function() {
 abort("'registerType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "whenDependentTypesAreResolved")) Module["whenDependentTypesAreResolved"] = function() {
 abort("'whenDependentTypesAreResolved' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "embind_charCodes")) Module["embind_charCodes"] = function() {
 abort("'embind_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "embind_init_charCodes")) Module["embind_init_charCodes"] = function() {
 abort("'embind_init_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "readLatin1String")) Module["readLatin1String"] = function() {
 abort("'readLatin1String' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getTypeName")) Module["getTypeName"] = function() {
 abort("'getTypeName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "heap32VectorToArray")) Module["heap32VectorToArray"] = function() {
 abort("'heap32VectorToArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "requireRegisteredType")) Module["requireRegisteredType"] = function() {
 abort("'requireRegisteredType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getShiftFromSize")) Module["getShiftFromSize"] = function() {
 abort("'getShiftFromSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "integerReadValueFromPointer")) Module["integerReadValueFromPointer"] = function() {
 abort("'integerReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "enumReadValueFromPointer")) Module["enumReadValueFromPointer"] = function() {
 abort("'enumReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "floatReadValueFromPointer")) Module["floatReadValueFromPointer"] = function() {
 abort("'floatReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "simpleReadValueFromPointer")) Module["simpleReadValueFromPointer"] = function() {
 abort("'simpleReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "runDestructors")) Module["runDestructors"] = function() {
 abort("'runDestructors' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "new_")) Module["new_"] = function() {
 abort("'new_' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "craftInvokerFunction")) Module["craftInvokerFunction"] = function() {
 abort("'craftInvokerFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "embind__requireFunction")) Module["embind__requireFunction"] = function() {
 abort("'embind__requireFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "tupleRegistrations")) Module["tupleRegistrations"] = function() {
 abort("'tupleRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "structRegistrations")) Module["structRegistrations"] = function() {
 abort("'structRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "genericPointerToWireType")) Module["genericPointerToWireType"] = function() {
 abort("'genericPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "constNoSmartPtrRawPointerToWireType")) Module["constNoSmartPtrRawPointerToWireType"] = function() {
 abort("'constNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "nonConstNoSmartPtrRawPointerToWireType")) Module["nonConstNoSmartPtrRawPointerToWireType"] = function() {
 abort("'nonConstNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "init_RegisteredPointer")) Module["init_RegisteredPointer"] = function() {
 abort("'init_RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer")) Module["RegisteredPointer"] = function() {
 abort("'RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_getPointee")) Module["RegisteredPointer_getPointee"] = function() {
 abort("'RegisteredPointer_getPointee' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_destructor")) Module["RegisteredPointer_destructor"] = function() {
 abort("'RegisteredPointer_destructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_deleteObject")) Module["RegisteredPointer_deleteObject"] = function() {
 abort("'RegisteredPointer_deleteObject' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_fromWireType")) Module["RegisteredPointer_fromWireType"] = function() {
 abort("'RegisteredPointer_fromWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "runDestructor")) Module["runDestructor"] = function() {
 abort("'runDestructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "releaseClassHandle")) Module["releaseClassHandle"] = function() {
 abort("'releaseClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "finalizationGroup")) Module["finalizationGroup"] = function() {
 abort("'finalizationGroup' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "detachFinalizer_deps")) Module["detachFinalizer_deps"] = function() {
 abort("'detachFinalizer_deps' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "detachFinalizer")) Module["detachFinalizer"] = function() {
 abort("'detachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "attachFinalizer")) Module["attachFinalizer"] = function() {
 abort("'attachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "makeClassHandle")) Module["makeClassHandle"] = function() {
 abort("'makeClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "init_ClassHandle")) Module["init_ClassHandle"] = function() {
 abort("'init_ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle")) Module["ClassHandle"] = function() {
 abort("'ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_isAliasOf")) Module["ClassHandle_isAliasOf"] = function() {
 abort("'ClassHandle_isAliasOf' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "throwInstanceAlreadyDeleted")) Module["throwInstanceAlreadyDeleted"] = function() {
 abort("'throwInstanceAlreadyDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_clone")) Module["ClassHandle_clone"] = function() {
 abort("'ClassHandle_clone' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_delete")) Module["ClassHandle_delete"] = function() {
 abort("'ClassHandle_delete' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "deletionQueue")) Module["deletionQueue"] = function() {
 abort("'deletionQueue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_isDeleted")) Module["ClassHandle_isDeleted"] = function() {
 abort("'ClassHandle_isDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_deleteLater")) Module["ClassHandle_deleteLater"] = function() {
 abort("'ClassHandle_deleteLater' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "flushPendingDeletes")) Module["flushPendingDeletes"] = function() {
 abort("'flushPendingDeletes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "delayFunction")) Module["delayFunction"] = function() {
 abort("'delayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "setDelayFunction")) Module["setDelayFunction"] = function() {
 abort("'setDelayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "RegisteredClass")) Module["RegisteredClass"] = function() {
 abort("'RegisteredClass' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "shallowCopyInternalPointer")) Module["shallowCopyInternalPointer"] = function() {
 abort("'shallowCopyInternalPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "downcastPointer")) Module["downcastPointer"] = function() {
 abort("'downcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "upcastPointer")) Module["upcastPointer"] = function() {
 abort("'upcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "validateThis")) Module["validateThis"] = function() {
 abort("'validateThis' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "char_0")) Module["char_0"] = function() {
 abort("'char_0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "char_9")) Module["char_9"] = function() {
 abort("'char_9' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "makeLegalFunctionName")) Module["makeLegalFunctionName"] = function() {
 abort("'makeLegalFunctionName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["PThread"] = PThread;

if (!Object.getOwnPropertyDescriptor(Module, "killThread")) Module["killThread"] = function() {
 abort("'killThread' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "cleanupThread")) Module["cleanupThread"] = function() {
 abort("'cleanupThread' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "cancelThread")) Module["cancelThread"] = function() {
 abort("'cancelThread' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "spawnThread")) Module["spawnThread"] = function() {
 abort("'spawnThread' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "registerPthreadPtr")) Module["registerPthreadPtr"] = function() {
 abort("'registerPthreadPtr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "establishStackSpace")) Module["establishStackSpace"] = function() {
 abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "getNoExitRuntime")) Module["getNoExitRuntime"] = function() {
 abort("'getNoExitRuntime' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "resetPrototype")) Module["resetPrototype"] = function() {
 abort("'resetPrototype' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "warnOnce")) Module["warnOnce"] = function() {
 abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stackSave")) Module["stackSave"] = function() {
 abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stackRestore")) Module["stackRestore"] = function() {
 abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stackAlloc")) Module["stackAlloc"] = function() {
 abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "AsciiToString")) Module["AsciiToString"] = function() {
 abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "stringToAscii")) Module["stringToAscii"] = function() {
 abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["UTF16ToString"] = UTF16ToString;

Module["stringToUTF16"] = stringToUTF16;

if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF16")) Module["lengthBytesUTF16"] = function() {
 abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["UTF32ToString"] = UTF32ToString;

Module["stringToUTF32"] = stringToUTF32;

Module["lengthBytesUTF32"] = lengthBytesUTF32;

if (!Object.getOwnPropertyDescriptor(Module, "allocateUTF8")) Module["allocateUTF8"] = function() {
 abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

if (!Object.getOwnPropertyDescriptor(Module, "allocateUTF8OnStack")) Module["allocateUTF8OnStack"] = function() {
 abort("'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
};

Module["writeStackCookie"] = writeStackCookie;

Module["checkStackCookie"] = checkStackCookie;

Module["PThread"] = PThread;

Module["_pthread_self"] = _pthread_self;

Module["wasmMemory"] = wasmMemory;

Module["ExitStatus"] = ExitStatus;

if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_NORMAL")) Object.defineProperty(Module, "ALLOC_NORMAL", {
 configurable: true,
 get: function() {
  abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_STACK")) Object.defineProperty(Module, "ALLOC_STACK", {
 configurable: true,
 get: function() {
  abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_DYNAMIC")) Object.defineProperty(Module, "ALLOC_DYNAMIC", {
 configurable: true,
 get: function() {
  abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_NONE")) Object.defineProperty(Module, "ALLOC_NONE", {
 configurable: true,
 get: function() {
  abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)");
 }
});

var calledRun;

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}

var calledMain = false;

dependenciesFulfilled = function runCaller() {
 if (!calledRun) run();
 if (!calledRun) dependenciesFulfilled = runCaller;
};

function run(args) {
 args = args || arguments_;
 if (runDependencies > 0) {
  return;
 }
 writeStackCookie();
 preRun();
 if (runDependencies > 0) return;
 function doRun() {
  if (calledRun) return;
  calledRun = true;
  Module["calledRun"] = true;
  if (ABORT) return;
  initRuntime();
  preMain();
  readyPromiseResolve(Module);
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  assert(!Module["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout(function() {
   setTimeout(function() {
    Module["setStatus"]("");
   }, 1);
   doRun();
  }, 1);
 } else {
  doRun();
 }
 checkStackCookie();
}

Module["run"] = run;

function checkUnflushedContent() {
 var print = out;
 var printErr = err;
 var has = false;
 out = err = function(x) {
  has = true;
 };
 try {
  var flush = Module["_fflush"];
  if (flush) flush(0);
  [ "stdout", "stderr" ].forEach(function(name) {
   var info = FS.analyzePath("/dev/" + name);
   if (!info) return;
   var stream = info.object;
   var rdev = stream.rdev;
   var tty = TTY.ttys[rdev];
   if (tty && tty.output && tty.output.length) {
    has = true;
   }
  });
 } catch (e) {}
 out = print;
 err = printErr;
 if (has) {
  warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.");
 }
}

function exit(status, implicit) {
 checkUnflushedContent();
 if (implicit && noExitRuntime && status === 0) {
  return;
 }
 if (noExitRuntime) {
  if (!implicit) {
   var msg = "program exited (with status: " + status + "), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)";
   readyPromiseReject(msg);
   err(msg);
  }
 } else {
  PThread.terminateAllThreads();
  ABORT = true;
  EXITSTATUS = status;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 quit_(status, new ExitStatus(status));
}

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

if (!ENVIRONMENT_IS_PTHREAD) noExitRuntime = true;

if (!ENVIRONMENT_IS_PTHREAD) {
 run();
} else {
 Module["___embind_register_native_and_builtin_types"]();
 readyPromiseResolve(Module);
}

function WrapperObject() {}

WrapperObject.prototype = Object.create(WrapperObject.prototype);

WrapperObject.prototype.constructor = WrapperObject;

WrapperObject.prototype.__class__ = WrapperObject;

WrapperObject.__cache__ = {};

Module["WrapperObject"] = WrapperObject;

function getCache(__class__) {
 return (__class__ || WrapperObject).__cache__;
}

Module["getCache"] = getCache;

function wrapPointer(ptr, __class__) {
 var cache = getCache(__class__);
 var ret = cache[ptr];
 if (ret) return ret;
 ret = Object.create((__class__ || WrapperObject).prototype);
 ret.ptr = ptr;
 return cache[ptr] = ret;
}

Module["wrapPointer"] = wrapPointer;

function castObject(obj, __class__) {
 return wrapPointer(obj.ptr, __class__);
}

Module["castObject"] = castObject;

Module["NULL"] = wrapPointer(0);

function destroy(obj) {
 if (!obj["__destroy__"]) throw "Error: Cannot destroy object. (Did you create it yourself?)";
 obj["__destroy__"]();
 delete getCache(obj.__class__)[obj.ptr];
}

Module["destroy"] = destroy;

function compare(obj1, obj2) {
 return obj1.ptr === obj2.ptr;
}

Module["compare"] = compare;

function getPointer(obj) {
 return obj.ptr;
}

Module["getPointer"] = getPointer;

function getClass(obj) {
 return obj.__class__;
}

Module["getClass"] = getClass;

var ensureCache = {
 buffer: 0,
 size: 0,
 pos: 0,
 temps: [],
 needed: 0,
 prepare: function() {
  if (ensureCache.needed) {
   for (var i = 0; i < ensureCache.temps.length; i++) {
    Module["_free"](ensureCache.temps[i]);
   }
   ensureCache.temps.length = 0;
   Module["_free"](ensureCache.buffer);
   ensureCache.buffer = 0;
   ensureCache.size += ensureCache.needed;
   ensureCache.needed = 0;
  }
  if (!ensureCache.buffer) {
   ensureCache.size += 128;
   ensureCache.buffer = Module["_malloc"](ensureCache.size);
   assert(ensureCache.buffer);
  }
  ensureCache.pos = 0;
 },
 alloc: function(array, view) {
  assert(ensureCache.buffer);
  var bytes = view.BYTES_PER_ELEMENT;
  var len = array.length * bytes;
  len = len + 7 & -8;
  var ret;
  if (ensureCache.pos + len >= ensureCache.size) {
   assert(len > 0);
   ensureCache.needed += len;
   ret = Module["_malloc"](len);
   ensureCache.temps.push(ret);
  } else {
   ret = ensureCache.buffer + ensureCache.pos;
   ensureCache.pos += len;
  }
  return ret;
 },
 copy: function(array, view, offset) {
  offset >>>= 0;
  var bytes = view.BYTES_PER_ELEMENT;
  switch (bytes) {
  case 2:
   offset >>>= 1;
   break;

  case 4:
   offset >>>= 2;
   break;

  case 8:
   offset >>>= 3;
   break;
  }
  for (var i = 0; i < array.length; i++) {
   view[offset + i] = array[i];
  }
 }
};

function ensureString(value) {
 if (typeof value === "string") {
  var intArray = intArrayFromString(value);
  var offset = ensureCache.alloc(intArray, GROWABLE_HEAP_I8());
  ensureCache.copy(intArray, GROWABLE_HEAP_I8(), offset);
  return offset;
 }
 return value;
}

function ensureInt8(value) {
 if (typeof value === "object") {
  var offset = ensureCache.alloc(value, GROWABLE_HEAP_I8());
  ensureCache.copy(value, GROWABLE_HEAP_I8(), offset);
  return offset;
 }
 return value;
}

function ensureInt16(value) {
 if (typeof value === "object") {
  var offset = ensureCache.alloc(value, GROWABLE_HEAP_I16());
  ensureCache.copy(value, GROWABLE_HEAP_I16(), offset);
  return offset;
 }
 return value;
}

function ensureInt32(value) {
 if (typeof value === "object") {
  var offset = ensureCache.alloc(value, GROWABLE_HEAP_I32());
  ensureCache.copy(value, GROWABLE_HEAP_I32(), offset);
  return offset;
 }
 return value;
}

function ensureFloat32(value) {
 if (typeof value === "object") {
  var offset = ensureCache.alloc(value, GROWABLE_HEAP_F32());
  ensureCache.copy(value, GROWABLE_HEAP_F32(), offset);
  return offset;
 }
 return value;
}

function ensureFloat64(value) {
 if (typeof value === "object") {
  var offset = ensureCache.alloc(value, GROWABLE_HEAP_F64());
  ensureCache.copy(value, GROWABLE_HEAP_F64(), offset);
  return offset;
 }
 return value;
}

function PdeElement() {
 throw "cannot construct a PdeElement, no constructor in IDL";
}

PdeElement.prototype = Object.create(WrapperObject.prototype);

PdeElement.prototype.constructor = PdeElement;

PdeElement.prototype.__class__ = PdeElement;

PdeElement.__cache__ = {};

Module["PdeElement"] = PdeElement;

PdeElement.prototype["GetType"] = PdeElement.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetType_0(self);
};

PdeElement.prototype["GetBBox"] = PdeElement.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeElement_GetBBox_1(self, bbox);
};

PdeElement.prototype["SetBBox"] = PdeElement.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeElement_SetBBox_1(self, bbox);
};

PdeElement.prototype["GetId"] = PdeElement.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetId_0(self);
};

PdeElement.prototype["GetGraphicState"] = PdeElement.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeElement_GetGraphicState_1(self, g_state);
};

PdeElement.prototype["GetNumChildren"] = PdeElement.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetNumChildren_0(self);
};

PdeElement.prototype["GetChild"] = PdeElement.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeElement_GetChild_1(self, index), PdeElement);
};

PdeElement.prototype["GetAlignment"] = PdeElement.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetAlignment_0(self);
};

PdeElement.prototype["GetAngle"] = PdeElement.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetAngle_0(self);
};

PdeElement.prototype["SetRender"] = PdeElement.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeElement_SetRender_1(self, render);
};

PdeElement.prototype["SetData"] = PdeElement.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeElement_SetData_1(self, data);
};

PdeElement.prototype["GetData"] = PdeElement.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeElement_GetData_0(self), VoidPtr);
};

PdeElement.prototype["SetAlt"] = PdeElement.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeElement_SetAlt_1(self, alt);
};

PdeElement.prototype["SetActualText"] = PdeElement.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeElement_SetActualText_1(self, text);
};

PdeElement.prototype["GetFlags"] = PdeElement.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetFlags_0(self);
};

PdeElement.prototype["SetFlags"] = PdeElement.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeElement_SetFlags_1(self, flags);
};

PdeElement.prototype["GetNumPageObjects"] = PdeElement.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeElement_GetNumPageObjects_0(self);
};

PdeElement.prototype["GetPageObject"] = PdeElement.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeElement_GetPageObject_1(self, index), PdsPageObject);
};

PdeElement.prototype["GetPageMap"] = PdeElement.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeElement_GetPageMap_0(self), PdePageMap);
};

PdeElement.prototype["__destroy__"] = PdeElement.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeElement___destroy___0(self);
};

function PdfAnnot() {
 throw "cannot construct a PdfAnnot, no constructor in IDL";
}

PdfAnnot.prototype = Object.create(WrapperObject.prototype);

PdfAnnot.prototype.constructor = PdfAnnot;

PdfAnnot.prototype.__class__ = PdfAnnot;

PdfAnnot.__cache__ = {};

Module["PdfAnnot"] = PdfAnnot;

PdfAnnot.prototype["GetSubtype"] = PdfAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnot_GetSubtype_0(self);
};

PdfAnnot.prototype["GetFlags"] = PdfAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnot_GetFlags_0(self);
};

PdfAnnot.prototype["GetAppearance"] = PdfAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfAnnot_GetAppearance_1(self, appearance);
};

PdfAnnot.prototype["GetAppearanceXObject"] = PdfAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfAnnot.prototype["SetAppearanceFromXObject"] = PdfAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfAnnot.prototype["GetBBox"] = PdfAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfAnnot_GetBBox_1(self, bbox);
};

PdfAnnot.prototype["PointInAnnot"] = PdfAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfAnnot_PointInAnnot_1(self, point);
};

PdfAnnot.prototype["RectInAnnot"] = PdfAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfAnnot_RectInAnnot_1(self, rect);
};

PdfAnnot.prototype["GetStructObject"] = PdfAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfAnnot.prototype["GetObject"] = PdfAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfAnnot_GetObject_0(self), PdsDictionary);
};

PdfAnnot.prototype["NotifyWillChange"] = PdfAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfAnnot_NotifyWillChange_1(self, key);
};

PdfAnnot.prototype["NotifyDidChange"] = PdfAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfAnnot_NotifyDidChange_2(self, key, err);
};

PdfAnnot.prototype["__destroy__"] = PdfAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAnnot___destroy___0(self);
};

function PdsObject() {
 throw "cannot construct a PdsObject, no constructor in IDL";
}

PdsObject.prototype = Object.create(WrapperObject.prototype);

PdsObject.prototype.constructor = PdsObject;

PdsObject.prototype.__class__ = PdsObject;

PdsObject.__cache__ = {};

Module["PdsObject"] = PdsObject;

PdsObject.prototype["GetObjectType"] = PdsObject.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsObject_GetObjectType_0(self);
};

PdsObject.prototype["GetId"] = PdsObject.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsObject_GetId_0(self);
};

PdsObject.prototype["__destroy__"] = PdsObject.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsObject___destroy___0(self);
};

function PdsPageObject() {
 throw "cannot construct a PdsPageObject, no constructor in IDL";
}

PdsPageObject.prototype = Object.create(WrapperObject.prototype);

PdsPageObject.prototype.constructor = PdsPageObject;

PdsPageObject.prototype.__class__ = PdsPageObject;

PdsPageObject.__cache__ = {};

Module["PdsPageObject"] = PdsPageObject;

PdsPageObject.prototype["GetObjectType"] = PdsPageObject.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPageObject_GetObjectType_0(self);
};

PdsPageObject.prototype["GetBBox"] = PdsPageObject.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsPageObject_GetBBox_1(self, bbox);
};

PdsPageObject.prototype["GetId"] = PdsPageObject.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPageObject_GetId_0(self);
};

PdsPageObject.prototype["SetRender"] = PdsPageObject.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsPageObject_SetRender_1(self, render);
};

PdsPageObject.prototype["GetStructObject"] = PdsPageObject.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsPageObject_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsPageObject.prototype["GetContentMark"] = PdsPageObject.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsPageObject_GetContentMark_0(self), PdsContentMark);
};

PdsPageObject.prototype["GetPage"] = PdsPageObject.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsPageObject_GetPage_0(self), PdfPage);
};

PdsPageObject.prototype["GetGState"] = PdsPageObject.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsPageObject_GetGState_1(self, g_state);
};

PdsPageObject.prototype["__destroy__"] = PdsPageObject.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsPageObject___destroy___0(self);
};

function PdeContainer() {
 throw "cannot construct a PdeContainer, no constructor in IDL";
}

PdeContainer.prototype = Object.create(PdeElement.prototype);

PdeContainer.prototype.constructor = PdeContainer;

PdeContainer.prototype.__class__ = PdeContainer;

PdeContainer.__cache__ = {};

Module["PdeContainer"] = PdeContainer;

PdeContainer.prototype["GetType"] = PdeContainer.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetType_0(self);
};

PdeContainer.prototype["GetBBox"] = PdeContainer.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeContainer_GetBBox_1(self, bbox);
};

PdeContainer.prototype["SetBBox"] = PdeContainer.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeContainer_SetBBox_1(self, bbox);
};

PdeContainer.prototype["GetId"] = PdeContainer.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetId_0(self);
};

PdeContainer.prototype["GetGraphicState"] = PdeContainer.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeContainer_GetGraphicState_1(self, g_state);
};

PdeContainer.prototype["GetNumChildren"] = PdeContainer.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetNumChildren_0(self);
};

PdeContainer.prototype["GetChild"] = PdeContainer.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeContainer_GetChild_1(self, index), PdeElement);
};

PdeContainer.prototype["GetAlignment"] = PdeContainer.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetAlignment_0(self);
};

PdeContainer.prototype["GetAngle"] = PdeContainer.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetAngle_0(self);
};

PdeContainer.prototype["SetRender"] = PdeContainer.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeContainer_SetRender_1(self, render);
};

PdeContainer.prototype["SetData"] = PdeContainer.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeContainer_SetData_1(self, data);
};

PdeContainer.prototype["GetData"] = PdeContainer.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeContainer_GetData_0(self), VoidPtr);
};

PdeContainer.prototype["SetAlt"] = PdeContainer.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeContainer_SetAlt_1(self, alt);
};

PdeContainer.prototype["SetActualText"] = PdeContainer.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeContainer_SetActualText_1(self, text);
};

PdeContainer.prototype["GetFlags"] = PdeContainer.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetFlags_0(self);
};

PdeContainer.prototype["SetFlags"] = PdeContainer.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeContainer_SetFlags_1(self, flags);
};

PdeContainer.prototype["GetNumPageObjects"] = PdeContainer.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeContainer_GetNumPageObjects_0(self);
};

PdeContainer.prototype["GetPageObject"] = PdeContainer.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeContainer_GetPageObject_1(self, index), PdsPageObject);
};

PdeContainer.prototype["GetPageMap"] = PdeContainer.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeContainer_GetPageMap_0(self), PdePageMap);
};

PdeContainer.prototype["__destroy__"] = PdeContainer.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeContainer___destroy___0(self);
};

function PdeAnnot() {
 throw "cannot construct a PdeAnnot, no constructor in IDL";
}

PdeAnnot.prototype = Object.create(PdeElement.prototype);

PdeAnnot.prototype.constructor = PdeAnnot;

PdeAnnot.prototype.__class__ = PdeAnnot;

PdeAnnot.__cache__ = {};

Module["PdeAnnot"] = PdeAnnot;

PdeAnnot.prototype["GetAnnot"] = PdeAnnot.prototype.GetAnnot = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeAnnot_GetAnnot_0(self), PdfAnnot);
};

PdeAnnot.prototype["GetType"] = PdeAnnot.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetType_0(self);
};

PdeAnnot.prototype["GetBBox"] = PdeAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeAnnot_GetBBox_1(self, bbox);
};

PdeAnnot.prototype["SetBBox"] = PdeAnnot.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeAnnot_SetBBox_1(self, bbox);
};

PdeAnnot.prototype["GetId"] = PdeAnnot.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetId_0(self);
};

PdeAnnot.prototype["GetGraphicState"] = PdeAnnot.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeAnnot_GetGraphicState_1(self, g_state);
};

PdeAnnot.prototype["GetNumChildren"] = PdeAnnot.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetNumChildren_0(self);
};

PdeAnnot.prototype["GetChild"] = PdeAnnot.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeAnnot_GetChild_1(self, index), PdeElement);
};

PdeAnnot.prototype["GetAlignment"] = PdeAnnot.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetAlignment_0(self);
};

PdeAnnot.prototype["GetAngle"] = PdeAnnot.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetAngle_0(self);
};

PdeAnnot.prototype["SetRender"] = PdeAnnot.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeAnnot_SetRender_1(self, render);
};

PdeAnnot.prototype["SetData"] = PdeAnnot.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeAnnot_SetData_1(self, data);
};

PdeAnnot.prototype["GetData"] = PdeAnnot.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeAnnot_GetData_0(self), VoidPtr);
};

PdeAnnot.prototype["SetAlt"] = PdeAnnot.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeAnnot_SetAlt_1(self, alt);
};

PdeAnnot.prototype["SetActualText"] = PdeAnnot.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeAnnot_SetActualText_1(self, text);
};

PdeAnnot.prototype["GetFlags"] = PdeAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetFlags_0(self);
};

PdeAnnot.prototype["SetFlags"] = PdeAnnot.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeAnnot_SetFlags_1(self, flags);
};

PdeAnnot.prototype["GetNumPageObjects"] = PdeAnnot.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeAnnot_GetNumPageObjects_0(self);
};

PdeAnnot.prototype["GetPageObject"] = PdeAnnot.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeAnnot_GetPageObject_1(self, index), PdsPageObject);
};

PdeAnnot.prototype["GetPageMap"] = PdeAnnot.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeAnnot_GetPageMap_0(self), PdePageMap);
};

PdeAnnot.prototype["__destroy__"] = PdeAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeAnnot___destroy___0(self);
};

function PdfMarkupAnnot() {
 throw "cannot construct a PdfMarkupAnnot, no constructor in IDL";
}

PdfMarkupAnnot.prototype = Object.create(PdfAnnot.prototype);

PdfMarkupAnnot.prototype.constructor = PdfMarkupAnnot;

PdfMarkupAnnot.prototype.__class__ = PdfMarkupAnnot;

PdfMarkupAnnot.__cache__ = {};

Module["PdfMarkupAnnot"] = PdfMarkupAnnot;

PdfMarkupAnnot.prototype["GetContents"] = PdfMarkupAnnot.prototype.GetContents = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfMarkupAnnot_GetContents_2(self, buffer, len);
};

PdfMarkupAnnot.prototype["SetContents"] = PdfMarkupAnnot.prototype.SetContents = function(contents) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contents == "object") {
  contents = ensureInt8(contents);
 }
 return !!_emscripten_bind_PdfMarkupAnnot_SetContents_1(self, contents);
};

PdfMarkupAnnot.prototype["GetAuthor"] = PdfMarkupAnnot.prototype.GetAuthor = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfMarkupAnnot_GetAuthor_2(self, buffer, len);
};

PdfMarkupAnnot.prototype["SetAuthor"] = PdfMarkupAnnot.prototype.SetAuthor = function(author) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 return !!_emscripten_bind_PdfMarkupAnnot_SetAuthor_1(self, author);
};

PdfMarkupAnnot.prototype["GetNumReplies"] = PdfMarkupAnnot.prototype.GetNumReplies = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMarkupAnnot_GetNumReplies_0(self);
};

PdfMarkupAnnot.prototype["GetReply"] = PdfMarkupAnnot.prototype.GetReply = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfMarkupAnnot_GetReply_1(self, index), PdfAnnot);
};

PdfMarkupAnnot.prototype["AddReply"] = PdfMarkupAnnot.prototype.AddReply = function(author, text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return wrapPointer(_emscripten_bind_PdfMarkupAnnot_AddReply_2(self, author, text), PdfAnnot);
};

PdfMarkupAnnot.prototype["GetSubtype"] = PdfMarkupAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMarkupAnnot_GetSubtype_0(self);
};

PdfMarkupAnnot.prototype["GetFlags"] = PdfMarkupAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMarkupAnnot_GetFlags_0(self);
};

PdfMarkupAnnot.prototype["GetAppearance"] = PdfMarkupAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfMarkupAnnot_GetAppearance_1(self, appearance);
};

PdfMarkupAnnot.prototype["GetAppearanceXObject"] = PdfMarkupAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfMarkupAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfMarkupAnnot.prototype["SetAppearanceFromXObject"] = PdfMarkupAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfMarkupAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfMarkupAnnot.prototype["GetBBox"] = PdfMarkupAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfMarkupAnnot_GetBBox_1(self, bbox);
};

PdfMarkupAnnot.prototype["PointInAnnot"] = PdfMarkupAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfMarkupAnnot_PointInAnnot_1(self, point);
};

PdfMarkupAnnot.prototype["RectInAnnot"] = PdfMarkupAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfMarkupAnnot_RectInAnnot_1(self, rect);
};

PdfMarkupAnnot.prototype["GetStructObject"] = PdfMarkupAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfMarkupAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfMarkupAnnot.prototype["GetObject"] = PdfMarkupAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfMarkupAnnot_GetObject_0(self), PdsDictionary);
};

PdfMarkupAnnot.prototype["NotifyWillChange"] = PdfMarkupAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfMarkupAnnot_NotifyWillChange_1(self, key);
};

PdfMarkupAnnot.prototype["NotifyDidChange"] = PdfMarkupAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfMarkupAnnot_NotifyDidChange_2(self, key, err);
};

PdfMarkupAnnot.prototype["__destroy__"] = PdfMarkupAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfMarkupAnnot___destroy___0(self);
};

function PdfBaseDigSig() {
 throw "cannot construct a PdfBaseDigSig, no constructor in IDL";
}

PdfBaseDigSig.prototype = Object.create(WrapperObject.prototype);

PdfBaseDigSig.prototype.constructor = PdfBaseDigSig;

PdfBaseDigSig.prototype.__class__ = PdfBaseDigSig;

PdfBaseDigSig.__cache__ = {};

Module["PdfBaseDigSig"] = PdfBaseDigSig;

PdfBaseDigSig.prototype["Destroy"] = PdfBaseDigSig.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PdfBaseDigSig_Destroy_0(self);
};

PdfBaseDigSig.prototype["SetReason"] = PdfBaseDigSig.prototype.SetReason = function(reason) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof reason == "object") {
  reason = ensureInt8(reason);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SetReason_1(self, reason);
};

PdfBaseDigSig.prototype["SetLocation"] = PdfBaseDigSig.prototype.SetLocation = function(location) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof location == "object") {
  location = ensureInt8(location);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SetLocation_1(self, location);
};

PdfBaseDigSig.prototype["SetContactInfo"] = PdfBaseDigSig.prototype.SetContactInfo = function(contact) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contact == "object") {
  contact = ensureInt8(contact);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SetContactInfo_1(self, contact);
};

PdfBaseDigSig.prototype["SetName"] = PdfBaseDigSig.prototype.SetName = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SetName_1(self, name);
};

PdfBaseDigSig.prototype["SetTimeStampServer"] = PdfBaseDigSig.prototype.SetTimeStampServer = function(url, user_name, password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof url == "object") {
  url = ensureInt8(url);
 }
 if (typeof user_name == "object") {
  user_name = ensureInt8(user_name);
 }
 if (typeof password == "object") {
  password = ensureInt8(password);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SetTimeStampServer_3(self, url, user_name, password);
};

PdfBaseDigSig.prototype["SignDoc"] = PdfBaseDigSig.prototype.SignDoc = function(doc, path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (doc && typeof doc === "object") doc = doc.ptr;
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfBaseDigSig_SignDoc_2(self, doc, path);
};

PdfBaseDigSig.prototype["__destroy__"] = PdfBaseDigSig.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfBaseDigSig___destroy___0(self);
};

function PdfAlternate() {
 throw "cannot construct a PdfAlternate, no constructor in IDL";
}

PdfAlternate.prototype = Object.create(WrapperObject.prototype);

PdfAlternate.prototype.constructor = PdfAlternate;

PdfAlternate.prototype.__class__ = PdfAlternate;

PdfAlternate.__cache__ = {};

Module["PdfAlternate"] = PdfAlternate;

PdfAlternate.prototype["GetSubtype"] = PdfAlternate.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAlternate_GetSubtype_0(self);
};

PdfAlternate.prototype["GetName"] = PdfAlternate.prototype.GetName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfAlternate_GetName_2(self, buffer, len);
};

PdfAlternate.prototype["GetDescription"] = PdfAlternate.prototype.GetDescription = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfAlternate_GetDescription_2(self, buffer, len);
};

PdfAlternate.prototype["GetFileName"] = PdfAlternate.prototype.GetFileName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfAlternate_GetFileName_2(self, buffer, len);
};

PdfAlternate.prototype["SaveContent"] = PdfAlternate.prototype.SaveContent = function(path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfAlternate_SaveContent_1(self, path);
};

PdfAlternate.prototype["Release"] = PdfAlternate.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAlternate_Release_0(self);
};

PdfAlternate.prototype["__destroy__"] = PdfAlternate.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAlternate___destroy___0(self);
};

function PsStream() {
 throw "cannot construct a PsStream, no constructor in IDL";
}

PsStream.prototype = Object.create(WrapperObject.prototype);

PsStream.prototype.constructor = PsStream;

PsStream.prototype.__class__ = PsStream;

PsStream.__cache__ = {};

Module["PsStream"] = PsStream;

PsStream.prototype["Destroy"] = PsStream.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsStream_Destroy_0(self);
};

PsStream.prototype["IsEof"] = PsStream.prototype.IsEof = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStream_IsEof_0(self);
};

PsStream.prototype["GetSize"] = PsStream.prototype.GetSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PsStream_GetSize_0(self);
};

PsStream.prototype["Read"] = PsStream.prototype.Read = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsStream_Read_3(self, offset, buffer, size);
};

PsStream.prototype["Write"] = PsStream.prototype.Write = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsStream_Write_3(self, offset, buffer, size);
};

PsStream.prototype["GetPos"] = PsStream.prototype.GetPos = function() {
 var self = this.ptr;
 return _emscripten_bind_PsStream_GetPos_0(self);
};

PsStream.prototype["Flush"] = PsStream.prototype.Flush = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStream_Flush_0(self);
};

PsStream.prototype["GetStream"] = PsStream.prototype.GetStream = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsStream_GetStream_0(self), VoidPtr);
};

PsStream.prototype["GetType"] = PsStream.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsStream_GetType_0(self);
};

PsStream.prototype["__destroy__"] = PsStream.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStream___destroy___0(self);
};

function PsAuthorization() {
 throw "cannot construct a PsAuthorization, no constructor in IDL";
}

PsAuthorization.prototype = Object.create(WrapperObject.prototype);

PsAuthorization.prototype.constructor = PsAuthorization;

PsAuthorization.prototype.__class__ = PsAuthorization;

PsAuthorization.__cache__ = {};

Module["PsAuthorization"] = PsAuthorization;

PsAuthorization.prototype["SaveToStream"] = PsAuthorization.prototype.SaveToStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PsAuthorization_SaveToStream_2(self, stream, format);
};

PsAuthorization.prototype["IsAuthorized"] = PsAuthorization.prototype.IsAuthorized = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsAuthorization_IsAuthorized_0(self);
};

PsAuthorization.prototype["IsAuthorizedPlatform"] = PsAuthorization.prototype.IsAuthorizedPlatform = function(platform) {
 var self = this.ptr;
 if (platform && typeof platform === "object") platform = platform.ptr;
 return !!_emscripten_bind_PsAuthorization_IsAuthorizedPlatform_1(self, platform);
};

PsAuthorization.prototype["IsAuthorizedOption"] = PsAuthorization.prototype.IsAuthorizedOption = function(option) {
 var self = this.ptr;
 if (option && typeof option === "object") option = option.ptr;
 return !!_emscripten_bind_PsAuthorization_IsAuthorizedOption_1(self, option);
};

PsAuthorization.prototype["GetType"] = PsAuthorization.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsAuthorization_GetType_0(self);
};

PsAuthorization.prototype["__destroy__"] = PsAuthorization.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsAuthorization___destroy___0(self);
};

function PdfixPlugin() {
 throw "cannot construct a PdfixPlugin, no constructor in IDL";
}

PdfixPlugin.prototype = Object.create(WrapperObject.prototype);

PdfixPlugin.prototype.constructor = PdfixPlugin;

PdfixPlugin.prototype.__class__ = PdfixPlugin;

PdfixPlugin.__cache__ = {};

Module["PdfixPlugin"] = PdfixPlugin;

PdfixPlugin.prototype["Destroy"] = PdfixPlugin.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PdfixPlugin_Destroy_0(self);
};

PdfixPlugin.prototype["Initialize"] = PdfixPlugin.prototype.Initialize = function(pdfix) {
 var self = this.ptr;
 if (pdfix && typeof pdfix === "object") pdfix = pdfix.ptr;
 return !!_emscripten_bind_PdfixPlugin_Initialize_1(self, pdfix);
};

PdfixPlugin.prototype["GetVersionMajor"] = PdfixPlugin.prototype.GetVersionMajor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetVersionMajor_0(self);
};

PdfixPlugin.prototype["GetVersionMinor"] = PdfixPlugin.prototype.GetVersionMinor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetVersionMinor_0(self);
};

PdfixPlugin.prototype["GetVersionPatch"] = PdfixPlugin.prototype.GetVersionPatch = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetVersionPatch_0(self);
};

PdfixPlugin.prototype["GetPdfixVersionMajor"] = PdfixPlugin.prototype.GetPdfixVersionMajor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetPdfixVersionMajor_0(self);
};

PdfixPlugin.prototype["GetPdfixVersionMinor"] = PdfixPlugin.prototype.GetPdfixVersionMinor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetPdfixVersionMinor_0(self);
};

PdfixPlugin.prototype["GetPdfixVersionPatch"] = PdfixPlugin.prototype.GetPdfixVersionPatch = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfixPlugin_GetPdfixVersionPatch_0(self);
};

PdfixPlugin.prototype["GetPdfix"] = PdfixPlugin.prototype.GetPdfix = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfixPlugin_GetPdfix_0(self), Pdfix);
};

PdfixPlugin.prototype["__destroy__"] = PdfixPlugin.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfixPlugin___destroy___0(self);
};

function VoidPtr() {
 throw "cannot construct a VoidPtr, no constructor in IDL";
}

VoidPtr.prototype = Object.create(WrapperObject.prototype);

VoidPtr.prototype.constructor = VoidPtr;

VoidPtr.prototype.__class__ = VoidPtr;

VoidPtr.__cache__ = {};

Module["VoidPtr"] = VoidPtr;

VoidPtr.prototype["__destroy__"] = VoidPtr.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_VoidPtr___destroy___0(self);
};

function PdfPageRangeParams() {
 this.ptr = _emscripten_bind_PdfPageRangeParams_PdfPageRangeParams_0();
 getCache(PdfPageRangeParams)[this.ptr] = this;
}

PdfPageRangeParams.prototype = Object.create(WrapperObject.prototype);

PdfPageRangeParams.prototype.constructor = PdfPageRangeParams;

PdfPageRangeParams.prototype.__class__ = PdfPageRangeParams;

PdfPageRangeParams.__cache__ = {};

Module["PdfPageRangeParams"] = PdfPageRangeParams;

PdfPageRangeParams.prototype["get_start_page"] = PdfPageRangeParams.prototype.get_start_page = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageRangeParams_get_start_page_0(self);
};

PdfPageRangeParams.prototype["set_start_page"] = PdfPageRangeParams.prototype.set_start_page = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRangeParams_set_start_page_1(self, arg0);
};

Object.defineProperty(PdfPageRangeParams.prototype, "start_page", {
 get: PdfPageRangeParams.prototype.get_start_page,
 set: PdfPageRangeParams.prototype.set_start_page
});

PdfPageRangeParams.prototype["get_end_page"] = PdfPageRangeParams.prototype.get_end_page = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageRangeParams_get_end_page_0(self);
};

PdfPageRangeParams.prototype["set_end_page"] = PdfPageRangeParams.prototype.set_end_page = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRangeParams_set_end_page_1(self, arg0);
};

Object.defineProperty(PdfPageRangeParams.prototype, "end_page", {
 get: PdfPageRangeParams.prototype.get_end_page,
 set: PdfPageRangeParams.prototype.set_end_page
});

PdfPageRangeParams.prototype["get_page_range_spec"] = PdfPageRangeParams.prototype.get_page_range_spec = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageRangeParams_get_page_range_spec_0(self);
};

PdfPageRangeParams.prototype["set_page_range_spec"] = PdfPageRangeParams.prototype.set_page_range_spec = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRangeParams_set_page_range_spec_1(self, arg0);
};

Object.defineProperty(PdfPageRangeParams.prototype, "page_range_spec", {
 get: PdfPageRangeParams.prototype.get_page_range_spec,
 set: PdfPageRangeParams.prototype.set_page_range_spec
});

PdfPageRangeParams.prototype["__destroy__"] = PdfPageRangeParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPageRangeParams___destroy___0(self);
};

function PdfWatermarkParams() {
 this.ptr = _emscripten_bind_PdfWatermarkParams_PdfWatermarkParams_0();
 getCache(PdfWatermarkParams)[this.ptr] = this;
}

PdfWatermarkParams.prototype = Object.create(WrapperObject.prototype);

PdfWatermarkParams.prototype.constructor = PdfWatermarkParams;

PdfWatermarkParams.prototype.__class__ = PdfWatermarkParams;

PdfWatermarkParams.__cache__ = {};

Module["PdfWatermarkParams"] = PdfWatermarkParams;

PdfWatermarkParams.prototype["get_page_range"] = PdfWatermarkParams.prototype.get_page_range = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfWatermarkParams_get_page_range_0(self), PdfPageRangeParams);
};

PdfWatermarkParams.prototype["set_page_range"] = PdfWatermarkParams.prototype.set_page_range = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_page_range_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "page_range", {
 get: PdfWatermarkParams.prototype.get_page_range,
 set: PdfWatermarkParams.prototype.set_page_range
});

PdfWatermarkParams.prototype["get_order_top"] = PdfWatermarkParams.prototype.get_order_top = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_order_top_0(self);
};

PdfWatermarkParams.prototype["set_order_top"] = PdfWatermarkParams.prototype.set_order_top = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_order_top_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "order_top", {
 get: PdfWatermarkParams.prototype.get_order_top,
 set: PdfWatermarkParams.prototype.set_order_top
});

PdfWatermarkParams.prototype["get_h_align"] = PdfWatermarkParams.prototype.get_h_align = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_h_align_0(self);
};

PdfWatermarkParams.prototype["set_h_align"] = PdfWatermarkParams.prototype.set_h_align = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_h_align_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "h_align", {
 get: PdfWatermarkParams.prototype.get_h_align,
 set: PdfWatermarkParams.prototype.set_h_align
});

PdfWatermarkParams.prototype["get_v_align"] = PdfWatermarkParams.prototype.get_v_align = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_v_align_0(self);
};

PdfWatermarkParams.prototype["set_v_align"] = PdfWatermarkParams.prototype.set_v_align = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_v_align_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "v_align", {
 get: PdfWatermarkParams.prototype.get_v_align,
 set: PdfWatermarkParams.prototype.set_v_align
});

PdfWatermarkParams.prototype["get_percentage_vals"] = PdfWatermarkParams.prototype.get_percentage_vals = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_percentage_vals_0(self);
};

PdfWatermarkParams.prototype["set_percentage_vals"] = PdfWatermarkParams.prototype.set_percentage_vals = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_percentage_vals_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "percentage_vals", {
 get: PdfWatermarkParams.prototype.get_percentage_vals,
 set: PdfWatermarkParams.prototype.set_percentage_vals
});

PdfWatermarkParams.prototype["get_h_value"] = PdfWatermarkParams.prototype.get_h_value = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_h_value_0(self);
};

PdfWatermarkParams.prototype["set_h_value"] = PdfWatermarkParams.prototype.set_h_value = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_h_value_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "h_value", {
 get: PdfWatermarkParams.prototype.get_h_value,
 set: PdfWatermarkParams.prototype.set_h_value
});

PdfWatermarkParams.prototype["get_v_value"] = PdfWatermarkParams.prototype.get_v_value = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_v_value_0(self);
};

PdfWatermarkParams.prototype["set_v_value"] = PdfWatermarkParams.prototype.set_v_value = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_v_value_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "v_value", {
 get: PdfWatermarkParams.prototype.get_v_value,
 set: PdfWatermarkParams.prototype.set_v_value
});

PdfWatermarkParams.prototype["get_scale"] = PdfWatermarkParams.prototype.get_scale = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_scale_0(self);
};

PdfWatermarkParams.prototype["set_scale"] = PdfWatermarkParams.prototype.set_scale = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_scale_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "scale", {
 get: PdfWatermarkParams.prototype.get_scale,
 set: PdfWatermarkParams.prototype.set_scale
});

PdfWatermarkParams.prototype["get_rotation"] = PdfWatermarkParams.prototype.get_rotation = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_rotation_0(self);
};

PdfWatermarkParams.prototype["set_rotation"] = PdfWatermarkParams.prototype.set_rotation = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_rotation_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "rotation", {
 get: PdfWatermarkParams.prototype.get_rotation,
 set: PdfWatermarkParams.prototype.set_rotation
});

PdfWatermarkParams.prototype["get_opacity"] = PdfWatermarkParams.prototype.get_opacity = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWatermarkParams_get_opacity_0(self);
};

PdfWatermarkParams.prototype["set_opacity"] = PdfWatermarkParams.prototype.set_opacity = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWatermarkParams_set_opacity_1(self, arg0);
};

Object.defineProperty(PdfWatermarkParams.prototype, "opacity", {
 get: PdfWatermarkParams.prototype.get_opacity,
 set: PdfWatermarkParams.prototype.set_opacity
});

PdfWatermarkParams.prototype["__destroy__"] = PdfWatermarkParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfWatermarkParams___destroy___0(self);
};

function PdfPoint() {
 this.ptr = _emscripten_bind_PdfPoint_PdfPoint_0();
 getCache(PdfPoint)[this.ptr] = this;
}

PdfPoint.prototype = Object.create(WrapperObject.prototype);

PdfPoint.prototype.constructor = PdfPoint;

PdfPoint.prototype.__class__ = PdfPoint;

PdfPoint.__cache__ = {};

Module["PdfPoint"] = PdfPoint;

PdfPoint.prototype["get_x"] = PdfPoint.prototype.get_x = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPoint_get_x_0(self);
};

PdfPoint.prototype["set_x"] = PdfPoint.prototype.set_x = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPoint_set_x_1(self, arg0);
};

Object.defineProperty(PdfPoint.prototype, "x", {
 get: PdfPoint.prototype.get_x,
 set: PdfPoint.prototype.set_x
});

PdfPoint.prototype["get_y"] = PdfPoint.prototype.get_y = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPoint_get_y_0(self);
};

PdfPoint.prototype["set_y"] = PdfPoint.prototype.set_y = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPoint_set_y_1(self, arg0);
};

Object.defineProperty(PdfPoint.prototype, "y", {
 get: PdfPoint.prototype.get_y,
 set: PdfPoint.prototype.set_y
});

PdfPoint.prototype["__destroy__"] = PdfPoint.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPoint___destroy___0(self);
};

function PdfDevPoint() {
 this.ptr = _emscripten_bind_PdfDevPoint_PdfDevPoint_0();
 getCache(PdfDevPoint)[this.ptr] = this;
}

PdfDevPoint.prototype = Object.create(WrapperObject.prototype);

PdfDevPoint.prototype.constructor = PdfDevPoint;

PdfDevPoint.prototype.__class__ = PdfDevPoint;

PdfDevPoint.__cache__ = {};

Module["PdfDevPoint"] = PdfDevPoint;

PdfDevPoint.prototype["get_x"] = PdfDevPoint.prototype.get_x = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevPoint_get_x_0(self);
};

PdfDevPoint.prototype["set_x"] = PdfDevPoint.prototype.set_x = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevPoint_set_x_1(self, arg0);
};

Object.defineProperty(PdfDevPoint.prototype, "x", {
 get: PdfDevPoint.prototype.get_x,
 set: PdfDevPoint.prototype.set_x
});

PdfDevPoint.prototype["get_y"] = PdfDevPoint.prototype.get_y = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevPoint_get_y_0(self);
};

PdfDevPoint.prototype["set_y"] = PdfDevPoint.prototype.set_y = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevPoint_set_y_1(self, arg0);
};

Object.defineProperty(PdfDevPoint.prototype, "y", {
 get: PdfDevPoint.prototype.get_y,
 set: PdfDevPoint.prototype.set_y
});

PdfDevPoint.prototype["__destroy__"] = PdfDevPoint.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDevPoint___destroy___0(self);
};

function PdfRect() {
 this.ptr = _emscripten_bind_PdfRect_PdfRect_0();
 getCache(PdfRect)[this.ptr] = this;
}

PdfRect.prototype = Object.create(WrapperObject.prototype);

PdfRect.prototype.constructor = PdfRect;

PdfRect.prototype.__class__ = PdfRect;

PdfRect.__cache__ = {};

Module["PdfRect"] = PdfRect;

PdfRect.prototype["get_left"] = PdfRect.prototype.get_left = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRect_get_left_0(self);
};

PdfRect.prototype["set_left"] = PdfRect.prototype.set_left = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRect_set_left_1(self, arg0);
};

Object.defineProperty(PdfRect.prototype, "left", {
 get: PdfRect.prototype.get_left,
 set: PdfRect.prototype.set_left
});

PdfRect.prototype["get_top"] = PdfRect.prototype.get_top = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRect_get_top_0(self);
};

PdfRect.prototype["set_top"] = PdfRect.prototype.set_top = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRect_set_top_1(self, arg0);
};

Object.defineProperty(PdfRect.prototype, "top", {
 get: PdfRect.prototype.get_top,
 set: PdfRect.prototype.set_top
});

PdfRect.prototype["get_right"] = PdfRect.prototype.get_right = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRect_get_right_0(self);
};

PdfRect.prototype["set_right"] = PdfRect.prototype.set_right = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRect_set_right_1(self, arg0);
};

Object.defineProperty(PdfRect.prototype, "right", {
 get: PdfRect.prototype.get_right,
 set: PdfRect.prototype.set_right
});

PdfRect.prototype["get_bottom"] = PdfRect.prototype.get_bottom = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRect_get_bottom_0(self);
};

PdfRect.prototype["set_bottom"] = PdfRect.prototype.set_bottom = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRect_set_bottom_1(self, arg0);
};

Object.defineProperty(PdfRect.prototype, "bottom", {
 get: PdfRect.prototype.get_bottom,
 set: PdfRect.prototype.set_bottom
});

PdfRect.prototype["__destroy__"] = PdfRect.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfRect___destroy___0(self);
};

function PdfDevRect() {
 this.ptr = _emscripten_bind_PdfDevRect_PdfDevRect_0();
 getCache(PdfDevRect)[this.ptr] = this;
}

PdfDevRect.prototype = Object.create(WrapperObject.prototype);

PdfDevRect.prototype.constructor = PdfDevRect;

PdfDevRect.prototype.__class__ = PdfDevRect;

PdfDevRect.__cache__ = {};

Module["PdfDevRect"] = PdfDevRect;

PdfDevRect.prototype["get_left"] = PdfDevRect.prototype.get_left = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevRect_get_left_0(self);
};

PdfDevRect.prototype["set_left"] = PdfDevRect.prototype.set_left = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevRect_set_left_1(self, arg0);
};

Object.defineProperty(PdfDevRect.prototype, "left", {
 get: PdfDevRect.prototype.get_left,
 set: PdfDevRect.prototype.set_left
});

PdfDevRect.prototype["get_top"] = PdfDevRect.prototype.get_top = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevRect_get_top_0(self);
};

PdfDevRect.prototype["set_top"] = PdfDevRect.prototype.set_top = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevRect_set_top_1(self, arg0);
};

Object.defineProperty(PdfDevRect.prototype, "top", {
 get: PdfDevRect.prototype.get_top,
 set: PdfDevRect.prototype.set_top
});

PdfDevRect.prototype["get_right"] = PdfDevRect.prototype.get_right = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevRect_get_right_0(self);
};

PdfDevRect.prototype["set_right"] = PdfDevRect.prototype.set_right = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevRect_set_right_1(self, arg0);
};

Object.defineProperty(PdfDevRect.prototype, "right", {
 get: PdfDevRect.prototype.get_right,
 set: PdfDevRect.prototype.set_right
});

PdfDevRect.prototype["get_bottom"] = PdfDevRect.prototype.get_bottom = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDevRect_get_bottom_0(self);
};

PdfDevRect.prototype["set_bottom"] = PdfDevRect.prototype.set_bottom = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevRect_set_bottom_1(self, arg0);
};

Object.defineProperty(PdfDevRect.prototype, "bottom", {
 get: PdfDevRect.prototype.get_bottom,
 set: PdfDevRect.prototype.set_bottom
});

PdfDevRect.prototype["__destroy__"] = PdfDevRect.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDevRect___destroy___0(self);
};

function PdfQuad() {
 this.ptr = _emscripten_bind_PdfQuad_PdfQuad_0();
 getCache(PdfQuad)[this.ptr] = this;
}

PdfQuad.prototype = Object.create(WrapperObject.prototype);

PdfQuad.prototype.constructor = PdfQuad;

PdfQuad.prototype.__class__ = PdfQuad;

PdfQuad.__cache__ = {};

Module["PdfQuad"] = PdfQuad;

PdfQuad.prototype["get_tl"] = PdfQuad.prototype.get_tl = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfQuad_get_tl_0(self), PdfPoint);
};

PdfQuad.prototype["set_tl"] = PdfQuad.prototype.set_tl = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfQuad_set_tl_1(self, arg0);
};

Object.defineProperty(PdfQuad.prototype, "tl", {
 get: PdfQuad.prototype.get_tl,
 set: PdfQuad.prototype.set_tl
});

PdfQuad.prototype["get_tr"] = PdfQuad.prototype.get_tr = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfQuad_get_tr_0(self), PdfPoint);
};

PdfQuad.prototype["set_tr"] = PdfQuad.prototype.set_tr = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfQuad_set_tr_1(self, arg0);
};

Object.defineProperty(PdfQuad.prototype, "tr", {
 get: PdfQuad.prototype.get_tr,
 set: PdfQuad.prototype.set_tr
});

PdfQuad.prototype["get_bl"] = PdfQuad.prototype.get_bl = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfQuad_get_bl_0(self), PdfPoint);
};

PdfQuad.prototype["set_bl"] = PdfQuad.prototype.set_bl = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfQuad_set_bl_1(self, arg0);
};

Object.defineProperty(PdfQuad.prototype, "bl", {
 get: PdfQuad.prototype.get_bl,
 set: PdfQuad.prototype.set_bl
});

PdfQuad.prototype["get_br"] = PdfQuad.prototype.get_br = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfQuad_get_br_0(self), PdfPoint);
};

PdfQuad.prototype["set_br"] = PdfQuad.prototype.set_br = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfQuad_set_br_1(self, arg0);
};

Object.defineProperty(PdfQuad.prototype, "br", {
 get: PdfQuad.prototype.get_br,
 set: PdfQuad.prototype.set_br
});

PdfQuad.prototype["__destroy__"] = PdfQuad.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfQuad___destroy___0(self);
};

function PdfDevQuad() {
 this.ptr = _emscripten_bind_PdfDevQuad_PdfDevQuad_0();
 getCache(PdfDevQuad)[this.ptr] = this;
}

PdfDevQuad.prototype = Object.create(WrapperObject.prototype);

PdfDevQuad.prototype.constructor = PdfDevQuad;

PdfDevQuad.prototype.__class__ = PdfDevQuad;

PdfDevQuad.__cache__ = {};

Module["PdfDevQuad"] = PdfDevQuad;

PdfDevQuad.prototype["get_tl"] = PdfDevQuad.prototype.get_tl = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDevQuad_get_tl_0(self), PdfDevPoint);
};

PdfDevQuad.prototype["set_tl"] = PdfDevQuad.prototype.set_tl = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevQuad_set_tl_1(self, arg0);
};

Object.defineProperty(PdfDevQuad.prototype, "tl", {
 get: PdfDevQuad.prototype.get_tl,
 set: PdfDevQuad.prototype.set_tl
});

PdfDevQuad.prototype["get_tr"] = PdfDevQuad.prototype.get_tr = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDevQuad_get_tr_0(self), PdfDevPoint);
};

PdfDevQuad.prototype["set_tr"] = PdfDevQuad.prototype.set_tr = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevQuad_set_tr_1(self, arg0);
};

Object.defineProperty(PdfDevQuad.prototype, "tr", {
 get: PdfDevQuad.prototype.get_tr,
 set: PdfDevQuad.prototype.set_tr
});

PdfDevQuad.prototype["get_bl"] = PdfDevQuad.prototype.get_bl = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDevQuad_get_bl_0(self), PdfDevPoint);
};

PdfDevQuad.prototype["set_bl"] = PdfDevQuad.prototype.set_bl = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevQuad_set_bl_1(self, arg0);
};

Object.defineProperty(PdfDevQuad.prototype, "bl", {
 get: PdfDevQuad.prototype.get_bl,
 set: PdfDevQuad.prototype.set_bl
});

PdfDevQuad.prototype["get_br"] = PdfDevQuad.prototype.get_br = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDevQuad_get_br_0(self), PdfDevPoint);
};

PdfDevQuad.prototype["set_br"] = PdfDevQuad.prototype.set_br = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfDevQuad_set_br_1(self, arg0);
};

Object.defineProperty(PdfDevQuad.prototype, "br", {
 get: PdfDevQuad.prototype.get_br,
 set: PdfDevQuad.prototype.set_br
});

PdfDevQuad.prototype["__destroy__"] = PdfDevQuad.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDevQuad___destroy___0(self);
};

function PdfMatrix() {
 this.ptr = _emscripten_bind_PdfMatrix_PdfMatrix_0();
 getCache(PdfMatrix)[this.ptr] = this;
}

PdfMatrix.prototype = Object.create(WrapperObject.prototype);

PdfMatrix.prototype.constructor = PdfMatrix;

PdfMatrix.prototype.__class__ = PdfMatrix;

PdfMatrix.__cache__ = {};

Module["PdfMatrix"] = PdfMatrix;

PdfMatrix.prototype["get_a"] = PdfMatrix.prototype.get_a = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_a_0(self);
};

PdfMatrix.prototype["set_a"] = PdfMatrix.prototype.set_a = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_a_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "a", {
 get: PdfMatrix.prototype.get_a,
 set: PdfMatrix.prototype.set_a
});

PdfMatrix.prototype["get_b"] = PdfMatrix.prototype.get_b = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_b_0(self);
};

PdfMatrix.prototype["set_b"] = PdfMatrix.prototype.set_b = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_b_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "b", {
 get: PdfMatrix.prototype.get_b,
 set: PdfMatrix.prototype.set_b
});

PdfMatrix.prototype["get_c"] = PdfMatrix.prototype.get_c = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_c_0(self);
};

PdfMatrix.prototype["set_c"] = PdfMatrix.prototype.set_c = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_c_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "c", {
 get: PdfMatrix.prototype.get_c,
 set: PdfMatrix.prototype.set_c
});

PdfMatrix.prototype["get_d"] = PdfMatrix.prototype.get_d = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_d_0(self);
};

PdfMatrix.prototype["set_d"] = PdfMatrix.prototype.set_d = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_d_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "d", {
 get: PdfMatrix.prototype.get_d,
 set: PdfMatrix.prototype.set_d
});

PdfMatrix.prototype["get_e"] = PdfMatrix.prototype.get_e = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_e_0(self);
};

PdfMatrix.prototype["set_e"] = PdfMatrix.prototype.set_e = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_e_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "e", {
 get: PdfMatrix.prototype.get_e,
 set: PdfMatrix.prototype.set_e
});

PdfMatrix.prototype["get_f"] = PdfMatrix.prototype.get_f = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMatrix_get_f_0(self);
};

PdfMatrix.prototype["set_f"] = PdfMatrix.prototype.set_f = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMatrix_set_f_1(self, arg0);
};

Object.defineProperty(PdfMatrix.prototype, "f", {
 get: PdfMatrix.prototype.get_f,
 set: PdfMatrix.prototype.set_f
});

PdfMatrix.prototype["__destroy__"] = PdfMatrix.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfMatrix___destroy___0(self);
};

function PdfRGB() {
 this.ptr = _emscripten_bind_PdfRGB_PdfRGB_0();
 getCache(PdfRGB)[this.ptr] = this;
}

PdfRGB.prototype = Object.create(WrapperObject.prototype);

PdfRGB.prototype.constructor = PdfRGB;

PdfRGB.prototype.__class__ = PdfRGB;

PdfRGB.__cache__ = {};

Module["PdfRGB"] = PdfRGB;

PdfRGB.prototype["get_r"] = PdfRGB.prototype.get_r = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRGB_get_r_0(self);
};

PdfRGB.prototype["set_r"] = PdfRGB.prototype.set_r = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRGB_set_r_1(self, arg0);
};

Object.defineProperty(PdfRGB.prototype, "r", {
 get: PdfRGB.prototype.get_r,
 set: PdfRGB.prototype.set_r
});

PdfRGB.prototype["get_g"] = PdfRGB.prototype.get_g = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRGB_get_g_0(self);
};

PdfRGB.prototype["set_g"] = PdfRGB.prototype.set_g = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRGB_set_g_1(self, arg0);
};

Object.defineProperty(PdfRGB.prototype, "g", {
 get: PdfRGB.prototype.get_g,
 set: PdfRGB.prototype.set_g
});

PdfRGB.prototype["get_b"] = PdfRGB.prototype.get_b = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfRGB_get_b_0(self);
};

PdfRGB.prototype["set_b"] = PdfRGB.prototype.set_b = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfRGB_set_b_1(self, arg0);
};

Object.defineProperty(PdfRGB.prototype, "b", {
 get: PdfRGB.prototype.get_b,
 set: PdfRGB.prototype.set_b
});

PdfRGB.prototype["__destroy__"] = PdfRGB.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfRGB___destroy___0(self);
};

function PdfColorState() {
 this.ptr = _emscripten_bind_PdfColorState_PdfColorState_0();
 getCache(PdfColorState)[this.ptr] = this;
}

PdfColorState.prototype = Object.create(WrapperObject.prototype);

PdfColorState.prototype.constructor = PdfColorState;

PdfColorState.prototype.__class__ = PdfColorState;

PdfColorState.__cache__ = {};

Module["PdfColorState"] = PdfColorState;

PdfColorState.prototype["get_fill_type"] = PdfColorState.prototype.get_fill_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfColorState_get_fill_type_0(self);
};

PdfColorState.prototype["set_fill_type"] = PdfColorState.prototype.set_fill_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_fill_type_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "fill_type", {
 get: PdfColorState.prototype.get_fill_type,
 set: PdfColorState.prototype.set_fill_type
});

PdfColorState.prototype["get_stroke_type"] = PdfColorState.prototype.get_stroke_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfColorState_get_stroke_type_0(self);
};

PdfColorState.prototype["set_stroke_type"] = PdfColorState.prototype.set_stroke_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_stroke_type_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "stroke_type", {
 get: PdfColorState.prototype.get_stroke_type,
 set: PdfColorState.prototype.set_stroke_type
});

PdfColorState.prototype["get_fill_color"] = PdfColorState.prototype.get_fill_color = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfColorState_get_fill_color_0(self), PdfRGB);
};

PdfColorState.prototype["set_fill_color"] = PdfColorState.prototype.set_fill_color = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_fill_color_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "fill_color", {
 get: PdfColorState.prototype.get_fill_color,
 set: PdfColorState.prototype.set_fill_color
});

PdfColorState.prototype["get_stroke_color"] = PdfColorState.prototype.get_stroke_color = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfColorState_get_stroke_color_0(self), PdfRGB);
};

PdfColorState.prototype["set_stroke_color"] = PdfColorState.prototype.set_stroke_color = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_stroke_color_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "stroke_color", {
 get: PdfColorState.prototype.get_stroke_color,
 set: PdfColorState.prototype.set_stroke_color
});

PdfColorState.prototype["get_fill_opacity"] = PdfColorState.prototype.get_fill_opacity = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfColorState_get_fill_opacity_0(self);
};

PdfColorState.prototype["set_fill_opacity"] = PdfColorState.prototype.set_fill_opacity = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_fill_opacity_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "fill_opacity", {
 get: PdfColorState.prototype.get_fill_opacity,
 set: PdfColorState.prototype.set_fill_opacity
});

PdfColorState.prototype["get_stroke_opacity"] = PdfColorState.prototype.get_stroke_opacity = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfColorState_get_stroke_opacity_0(self);
};

PdfColorState.prototype["set_stroke_opacity"] = PdfColorState.prototype.set_stroke_opacity = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfColorState_set_stroke_opacity_1(self, arg0);
};

Object.defineProperty(PdfColorState.prototype, "stroke_opacity", {
 get: PdfColorState.prototype.get_stroke_opacity,
 set: PdfColorState.prototype.set_stroke_opacity
});

PdfColorState.prototype["__destroy__"] = PdfColorState.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfColorState___destroy___0(self);
};

function PdfTextState() {
 this.ptr = _emscripten_bind_PdfTextState_PdfTextState_0();
 getCache(PdfTextState)[this.ptr] = this;
}

PdfTextState.prototype = Object.create(WrapperObject.prototype);

PdfTextState.prototype.constructor = PdfTextState;

PdfTextState.prototype.__class__ = PdfTextState;

PdfTextState.__cache__ = {};

Module["PdfTextState"] = PdfTextState;

PdfTextState.prototype["get_color_state"] = PdfTextState.prototype.get_color_state = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfTextState_get_color_state_0(self), PdfColorState);
};

PdfTextState.prototype["set_color_state"] = PdfTextState.prototype.set_color_state = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_color_state_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "color_state", {
 get: PdfTextState.prototype.get_color_state,
 set: PdfTextState.prototype.set_color_state
});

PdfTextState.prototype["get_font"] = PdfTextState.prototype.get_font = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfTextState_get_font_0(self), PdfFont);
};

PdfTextState.prototype["set_font"] = PdfTextState.prototype.set_font = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_font_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "font", {
 get: PdfTextState.prototype.get_font,
 set: PdfTextState.prototype.set_font
});

PdfTextState.prototype["get_font_size"] = PdfTextState.prototype.get_font_size = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextState_get_font_size_0(self);
};

PdfTextState.prototype["set_font_size"] = PdfTextState.prototype.set_font_size = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_font_size_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "font_size", {
 get: PdfTextState.prototype.get_font_size,
 set: PdfTextState.prototype.set_font_size
});

PdfTextState.prototype["get_char_spacing"] = PdfTextState.prototype.get_char_spacing = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextState_get_char_spacing_0(self);
};

PdfTextState.prototype["set_char_spacing"] = PdfTextState.prototype.set_char_spacing = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_char_spacing_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "char_spacing", {
 get: PdfTextState.prototype.get_char_spacing,
 set: PdfTextState.prototype.set_char_spacing
});

PdfTextState.prototype["get_word_spacing"] = PdfTextState.prototype.get_word_spacing = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextState_get_word_spacing_0(self);
};

PdfTextState.prototype["set_word_spacing"] = PdfTextState.prototype.set_word_spacing = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_word_spacing_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "word_spacing", {
 get: PdfTextState.prototype.get_word_spacing,
 set: PdfTextState.prototype.set_word_spacing
});

PdfTextState.prototype["get_flags"] = PdfTextState.prototype.get_flags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextState_get_flags_0(self);
};

PdfTextState.prototype["set_flags"] = PdfTextState.prototype.set_flags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfTextState_set_flags_1(self, arg0);
};

Object.defineProperty(PdfTextState.prototype, "flags", {
 get: PdfTextState.prototype.get_flags,
 set: PdfTextState.prototype.set_flags
});

PdfTextState.prototype["__destroy__"] = PdfTextState.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfTextState___destroy___0(self);
};

function PdfGraphicState() {
 this.ptr = _emscripten_bind_PdfGraphicState_PdfGraphicState_0();
 getCache(PdfGraphicState)[this.ptr] = this;
}

PdfGraphicState.prototype = Object.create(WrapperObject.prototype);

PdfGraphicState.prototype.constructor = PdfGraphicState;

PdfGraphicState.prototype.__class__ = PdfGraphicState;

PdfGraphicState.__cache__ = {};

Module["PdfGraphicState"] = PdfGraphicState;

PdfGraphicState.prototype["get_color_state"] = PdfGraphicState.prototype.get_color_state = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfGraphicState_get_color_state_0(self), PdfColorState);
};

PdfGraphicState.prototype["set_color_state"] = PdfGraphicState.prototype.set_color_state = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_color_state_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "color_state", {
 get: PdfGraphicState.prototype.get_color_state,
 set: PdfGraphicState.prototype.set_color_state
});

PdfGraphicState.prototype["get_line_width"] = PdfGraphicState.prototype.get_line_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfGraphicState_get_line_width_0(self);
};

PdfGraphicState.prototype["set_line_width"] = PdfGraphicState.prototype.set_line_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_line_width_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "line_width", {
 get: PdfGraphicState.prototype.get_line_width,
 set: PdfGraphicState.prototype.set_line_width
});

PdfGraphicState.prototype["get_miter_limit"] = PdfGraphicState.prototype.get_miter_limit = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfGraphicState_get_miter_limit_0(self);
};

PdfGraphicState.prototype["set_miter_limit"] = PdfGraphicState.prototype.set_miter_limit = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_miter_limit_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "miter_limit", {
 get: PdfGraphicState.prototype.get_miter_limit,
 set: PdfGraphicState.prototype.set_miter_limit
});

PdfGraphicState.prototype["get_line_cap"] = PdfGraphicState.prototype.get_line_cap = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfGraphicState_get_line_cap_0(self);
};

PdfGraphicState.prototype["set_line_cap"] = PdfGraphicState.prototype.set_line_cap = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_line_cap_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "line_cap", {
 get: PdfGraphicState.prototype.get_line_cap,
 set: PdfGraphicState.prototype.set_line_cap
});

PdfGraphicState.prototype["get_line_join"] = PdfGraphicState.prototype.get_line_join = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfGraphicState_get_line_join_0(self);
};

PdfGraphicState.prototype["set_line_join"] = PdfGraphicState.prototype.set_line_join = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_line_join_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "line_join", {
 get: PdfGraphicState.prototype.get_line_join,
 set: PdfGraphicState.prototype.set_line_join
});

PdfGraphicState.prototype["get_blend_mode"] = PdfGraphicState.prototype.get_blend_mode = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfGraphicState_get_blend_mode_0(self);
};

PdfGraphicState.prototype["set_blend_mode"] = PdfGraphicState.prototype.set_blend_mode = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_blend_mode_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "blend_mode", {
 get: PdfGraphicState.prototype.get_blend_mode,
 set: PdfGraphicState.prototype.set_blend_mode
});

PdfGraphicState.prototype["get_matrix"] = PdfGraphicState.prototype.get_matrix = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfGraphicState_get_matrix_0(self), PdfMatrix);
};

PdfGraphicState.prototype["set_matrix"] = PdfGraphicState.prototype.set_matrix = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfGraphicState_set_matrix_1(self, arg0);
};

Object.defineProperty(PdfGraphicState.prototype, "matrix", {
 get: PdfGraphicState.prototype.get_matrix,
 set: PdfGraphicState.prototype.set_matrix
});

PdfGraphicState.prototype["__destroy__"] = PdfGraphicState.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfGraphicState___destroy___0(self);
};

function PdfFontState() {
 this.ptr = _emscripten_bind_PdfFontState_PdfFontState_0();
 getCache(PdfFontState)[this.ptr] = this;
}

PdfFontState.prototype = Object.create(WrapperObject.prototype);

PdfFontState.prototype.constructor = PdfFontState;

PdfFontState.prototype.__class__ = PdfFontState;

PdfFontState.__cache__ = {};

Module["PdfFontState"] = PdfFontState;

PdfFontState.prototype["get_type"] = PdfFontState.prototype.get_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_type_0(self);
};

PdfFontState.prototype["set_type"] = PdfFontState.prototype.set_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_type_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "type", {
 get: PdfFontState.prototype.get_type,
 set: PdfFontState.prototype.set_type
});

PdfFontState.prototype["get_flags"] = PdfFontState.prototype.get_flags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_flags_0(self);
};

PdfFontState.prototype["set_flags"] = PdfFontState.prototype.set_flags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_flags_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "flags", {
 get: PdfFontState.prototype.get_flags,
 set: PdfFontState.prototype.set_flags
});

PdfFontState.prototype["get_bbox"] = PdfFontState.prototype.get_bbox = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfFontState_get_bbox_0(self), PdfRect);
};

PdfFontState.prototype["set_bbox"] = PdfFontState.prototype.set_bbox = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_bbox_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "bbox", {
 get: PdfFontState.prototype.get_bbox,
 set: PdfFontState.prototype.set_bbox
});

PdfFontState.prototype["get_ascent"] = PdfFontState.prototype.get_ascent = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_ascent_0(self);
};

PdfFontState.prototype["set_ascent"] = PdfFontState.prototype.set_ascent = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_ascent_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "ascent", {
 get: PdfFontState.prototype.get_ascent,
 set: PdfFontState.prototype.set_ascent
});

PdfFontState.prototype["get_descent"] = PdfFontState.prototype.get_descent = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_descent_0(self);
};

PdfFontState.prototype["set_descent"] = PdfFontState.prototype.set_descent = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_descent_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "descent", {
 get: PdfFontState.prototype.get_descent,
 set: PdfFontState.prototype.set_descent
});

PdfFontState.prototype["get_italic"] = PdfFontState.prototype.get_italic = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_italic_0(self);
};

PdfFontState.prototype["set_italic"] = PdfFontState.prototype.set_italic = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_italic_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "italic", {
 get: PdfFontState.prototype.get_italic,
 set: PdfFontState.prototype.set_italic
});

PdfFontState.prototype["get_bold"] = PdfFontState.prototype.get_bold = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_bold_0(self);
};

PdfFontState.prototype["set_bold"] = PdfFontState.prototype.set_bold = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_bold_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "bold", {
 get: PdfFontState.prototype.get_bold,
 set: PdfFontState.prototype.set_bold
});

PdfFontState.prototype["get_fixed_width"] = PdfFontState.prototype.get_fixed_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_fixed_width_0(self);
};

PdfFontState.prototype["set_fixed_width"] = PdfFontState.prototype.set_fixed_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_fixed_width_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "fixed_width", {
 get: PdfFontState.prototype.get_fixed_width,
 set: PdfFontState.prototype.set_fixed_width
});

PdfFontState.prototype["get_vertical"] = PdfFontState.prototype.get_vertical = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_vertical_0(self);
};

PdfFontState.prototype["set_vertical"] = PdfFontState.prototype.set_vertical = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_vertical_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "vertical", {
 get: PdfFontState.prototype.get_vertical,
 set: PdfFontState.prototype.set_vertical
});

PdfFontState.prototype["get_embedded"] = PdfFontState.prototype.get_embedded = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_embedded_0(self);
};

PdfFontState.prototype["set_embedded"] = PdfFontState.prototype.set_embedded = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_embedded_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "embedded", {
 get: PdfFontState.prototype.get_embedded,
 set: PdfFontState.prototype.set_embedded
});

PdfFontState.prototype["get_height"] = PdfFontState.prototype.get_height = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFontState_get_height_0(self);
};

PdfFontState.prototype["set_height"] = PdfFontState.prototype.set_height = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFontState_set_height_1(self, arg0);
};

Object.defineProperty(PdfFontState.prototype, "height", {
 get: PdfFontState.prototype.get_height,
 set: PdfFontState.prototype.set_height
});

PdfFontState.prototype["__destroy__"] = PdfFontState.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfFontState___destroy___0(self);
};

function PdfPageRenderParams() {
 this.ptr = _emscripten_bind_PdfPageRenderParams_PdfPageRenderParams_0();
 getCache(PdfPageRenderParams)[this.ptr] = this;
}

PdfPageRenderParams.prototype = Object.create(WrapperObject.prototype);

PdfPageRenderParams.prototype.constructor = PdfPageRenderParams;

PdfPageRenderParams.prototype.__class__ = PdfPageRenderParams;

PdfPageRenderParams.__cache__ = {};

Module["PdfPageRenderParams"] = PdfPageRenderParams;

PdfPageRenderParams.prototype["get_device"] = PdfPageRenderParams.prototype.get_device = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPageRenderParams_get_device_0(self), VoidPtr);
};

PdfPageRenderParams.prototype["set_device"] = PdfPageRenderParams.prototype.set_device = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRenderParams_set_device_1(self, arg0);
};

Object.defineProperty(PdfPageRenderParams.prototype, "device", {
 get: PdfPageRenderParams.prototype.get_device,
 set: PdfPageRenderParams.prototype.set_device
});

PdfPageRenderParams.prototype["get_image"] = PdfPageRenderParams.prototype.get_image = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPageRenderParams_get_image_0(self), PsImage);
};

PdfPageRenderParams.prototype["set_image"] = PdfPageRenderParams.prototype.set_image = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRenderParams_set_image_1(self, arg0);
};

Object.defineProperty(PdfPageRenderParams.prototype, "image", {
 get: PdfPageRenderParams.prototype.get_image,
 set: PdfPageRenderParams.prototype.set_image
});

PdfPageRenderParams.prototype["get_matrix"] = PdfPageRenderParams.prototype.get_matrix = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPageRenderParams_get_matrix_0(self), PdfMatrix);
};

PdfPageRenderParams.prototype["set_matrix"] = PdfPageRenderParams.prototype.set_matrix = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRenderParams_set_matrix_1(self, arg0);
};

Object.defineProperty(PdfPageRenderParams.prototype, "matrix", {
 get: PdfPageRenderParams.prototype.get_matrix,
 set: PdfPageRenderParams.prototype.set_matrix
});

PdfPageRenderParams.prototype["get_clip_box"] = PdfPageRenderParams.prototype.get_clip_box = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPageRenderParams_get_clip_box_0(self), PdfRect);
};

PdfPageRenderParams.prototype["set_clip_box"] = PdfPageRenderParams.prototype.set_clip_box = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRenderParams_set_clip_box_1(self, arg0);
};

Object.defineProperty(PdfPageRenderParams.prototype, "clip_box", {
 get: PdfPageRenderParams.prototype.get_clip_box,
 set: PdfPageRenderParams.prototype.set_clip_box
});

PdfPageRenderParams.prototype["get_render_flags"] = PdfPageRenderParams.prototype.get_render_flags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageRenderParams_get_render_flags_0(self);
};

PdfPageRenderParams.prototype["set_render_flags"] = PdfPageRenderParams.prototype.set_render_flags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfPageRenderParams_set_render_flags_1(self, arg0);
};

Object.defineProperty(PdfPageRenderParams.prototype, "render_flags", {
 get: PdfPageRenderParams.prototype.get_render_flags,
 set: PdfPageRenderParams.prototype.set_render_flags
});

PdfPageRenderParams.prototype["__destroy__"] = PdfPageRenderParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPageRenderParams___destroy___0(self);
};

function PdfAnnotAppearance() {
 this.ptr = _emscripten_bind_PdfAnnotAppearance_PdfAnnotAppearance_0();
 getCache(PdfAnnotAppearance)[this.ptr] = this;
}

PdfAnnotAppearance.prototype = Object.create(WrapperObject.prototype);

PdfAnnotAppearance.prototype.constructor = PdfAnnotAppearance;

PdfAnnotAppearance.prototype.__class__ = PdfAnnotAppearance;

PdfAnnotAppearance.__cache__ = {};

Module["PdfAnnotAppearance"] = PdfAnnotAppearance;

PdfAnnotAppearance.prototype["get_fill_color"] = PdfAnnotAppearance.prototype.get_fill_color = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfAnnotAppearance_get_fill_color_0(self), PdfRGB);
};

PdfAnnotAppearance.prototype["set_fill_color"] = PdfAnnotAppearance.prototype.set_fill_color = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_fill_color_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "fill_color", {
 get: PdfAnnotAppearance.prototype.get_fill_color,
 set: PdfAnnotAppearance.prototype.set_fill_color
});

PdfAnnotAppearance.prototype["get_fill_type"] = PdfAnnotAppearance.prototype.get_fill_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_fill_type_0(self);
};

PdfAnnotAppearance.prototype["set_fill_type"] = PdfAnnotAppearance.prototype.set_fill_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_fill_type_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "fill_type", {
 get: PdfAnnotAppearance.prototype.get_fill_type,
 set: PdfAnnotAppearance.prototype.set_fill_type
});

PdfAnnotAppearance.prototype["get_border_color"] = PdfAnnotAppearance.prototype.get_border_color = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfAnnotAppearance_get_border_color_0(self), PdfRGB);
};

PdfAnnotAppearance.prototype["set_border_color"] = PdfAnnotAppearance.prototype.set_border_color = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_border_color_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "border_color", {
 get: PdfAnnotAppearance.prototype.get_border_color,
 set: PdfAnnotAppearance.prototype.set_border_color
});

PdfAnnotAppearance.prototype["get_border_width"] = PdfAnnotAppearance.prototype.get_border_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_border_width_0(self);
};

PdfAnnotAppearance.prototype["set_border_width"] = PdfAnnotAppearance.prototype.set_border_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_border_width_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "border_width", {
 get: PdfAnnotAppearance.prototype.get_border_width,
 set: PdfAnnotAppearance.prototype.set_border_width
});

PdfAnnotAppearance.prototype["get_border"] = PdfAnnotAppearance.prototype.get_border = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_border_0(self);
};

PdfAnnotAppearance.prototype["set_border"] = PdfAnnotAppearance.prototype.set_border = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_border_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "border", {
 get: PdfAnnotAppearance.prototype.get_border,
 set: PdfAnnotAppearance.prototype.set_border
});

PdfAnnotAppearance.prototype["get_opacity"] = PdfAnnotAppearance.prototype.get_opacity = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_opacity_0(self);
};

PdfAnnotAppearance.prototype["set_opacity"] = PdfAnnotAppearance.prototype.set_opacity = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_opacity_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "opacity", {
 get: PdfAnnotAppearance.prototype.get_opacity,
 set: PdfAnnotAppearance.prototype.set_opacity
});

PdfAnnotAppearance.prototype["get_font_size"] = PdfAnnotAppearance.prototype.get_font_size = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_font_size_0(self);
};

PdfAnnotAppearance.prototype["set_font_size"] = PdfAnnotAppearance.prototype.set_font_size = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_font_size_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "font_size", {
 get: PdfAnnotAppearance.prototype.get_font_size,
 set: PdfAnnotAppearance.prototype.set_font_size
});

PdfAnnotAppearance.prototype["get_text_align"] = PdfAnnotAppearance.prototype.get_text_align = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAnnotAppearance_get_text_align_0(self);
};

PdfAnnotAppearance.prototype["set_text_align"] = PdfAnnotAppearance.prototype.set_text_align = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAnnotAppearance_set_text_align_1(self, arg0);
};

Object.defineProperty(PdfAnnotAppearance.prototype, "text_align", {
 get: PdfAnnotAppearance.prototype.get_text_align,
 set: PdfAnnotAppearance.prototype.set_text_align
});

PdfAnnotAppearance.prototype["__destroy__"] = PdfAnnotAppearance.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAnnotAppearance___destroy___0(self);
};

function PdfBookmarkAppearance() {
 this.ptr = _emscripten_bind_PdfBookmarkAppearance_PdfBookmarkAppearance_0();
 getCache(PdfBookmarkAppearance)[this.ptr] = this;
}

PdfBookmarkAppearance.prototype = Object.create(WrapperObject.prototype);

PdfBookmarkAppearance.prototype.constructor = PdfBookmarkAppearance;

PdfBookmarkAppearance.prototype.__class__ = PdfBookmarkAppearance;

PdfBookmarkAppearance.__cache__ = {};

Module["PdfBookmarkAppearance"] = PdfBookmarkAppearance;

PdfBookmarkAppearance.prototype["get_color"] = PdfBookmarkAppearance.prototype.get_color = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfBookmarkAppearance_get_color_0(self), PdfRGB);
};

PdfBookmarkAppearance.prototype["set_color"] = PdfBookmarkAppearance.prototype.set_color = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfBookmarkAppearance_set_color_1(self, arg0);
};

Object.defineProperty(PdfBookmarkAppearance.prototype, "color", {
 get: PdfBookmarkAppearance.prototype.get_color,
 set: PdfBookmarkAppearance.prototype.set_color
});

PdfBookmarkAppearance.prototype["get_italic"] = PdfBookmarkAppearance.prototype.get_italic = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfBookmarkAppearance_get_italic_0(self);
};

PdfBookmarkAppearance.prototype["set_italic"] = PdfBookmarkAppearance.prototype.set_italic = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfBookmarkAppearance_set_italic_1(self, arg0);
};

Object.defineProperty(PdfBookmarkAppearance.prototype, "italic", {
 get: PdfBookmarkAppearance.prototype.get_italic,
 set: PdfBookmarkAppearance.prototype.set_italic
});

PdfBookmarkAppearance.prototype["get_bold"] = PdfBookmarkAppearance.prototype.get_bold = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfBookmarkAppearance_get_bold_0(self);
};

PdfBookmarkAppearance.prototype["set_bold"] = PdfBookmarkAppearance.prototype.set_bold = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfBookmarkAppearance_set_bold_1(self, arg0);
};

Object.defineProperty(PdfBookmarkAppearance.prototype, "bold", {
 get: PdfBookmarkAppearance.prototype.get_bold,
 set: PdfBookmarkAppearance.prototype.set_bold
});

PdfBookmarkAppearance.prototype["__destroy__"] = PdfBookmarkAppearance.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfBookmarkAppearance___destroy___0(self);
};

function PdfWhitespaceParams() {
 this.ptr = _emscripten_bind_PdfWhitespaceParams_PdfWhitespaceParams_0();
 getCache(PdfWhitespaceParams)[this.ptr] = this;
}

PdfWhitespaceParams.prototype = Object.create(WrapperObject.prototype);

PdfWhitespaceParams.prototype.constructor = PdfWhitespaceParams;

PdfWhitespaceParams.prototype.__class__ = PdfWhitespaceParams;

PdfWhitespaceParams.__cache__ = {};

Module["PdfWhitespaceParams"] = PdfWhitespaceParams;

PdfWhitespaceParams.prototype["get_width"] = PdfWhitespaceParams.prototype.get_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWhitespaceParams_get_width_0(self);
};

PdfWhitespaceParams.prototype["set_width"] = PdfWhitespaceParams.prototype.set_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWhitespaceParams_set_width_1(self, arg0);
};

Object.defineProperty(PdfWhitespaceParams.prototype, "width", {
 get: PdfWhitespaceParams.prototype.get_width,
 set: PdfWhitespaceParams.prototype.set_width
});

PdfWhitespaceParams.prototype["get_height"] = PdfWhitespaceParams.prototype.get_height = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWhitespaceParams_get_height_0(self);
};

PdfWhitespaceParams.prototype["set_height"] = PdfWhitespaceParams.prototype.set_height = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfWhitespaceParams_set_height_1(self, arg0);
};

Object.defineProperty(PdfWhitespaceParams.prototype, "height", {
 get: PdfWhitespaceParams.prototype.get_height,
 set: PdfWhitespaceParams.prototype.set_height
});

PdfWhitespaceParams.prototype["__destroy__"] = PdfWhitespaceParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfWhitespaceParams___destroy___0(self);
};

function PdfFlattenAnnotsParams() {
 this.ptr = _emscripten_bind_PdfFlattenAnnotsParams_PdfFlattenAnnotsParams_0();
 getCache(PdfFlattenAnnotsParams)[this.ptr] = this;
}

PdfFlattenAnnotsParams.prototype = Object.create(WrapperObject.prototype);

PdfFlattenAnnotsParams.prototype.constructor = PdfFlattenAnnotsParams;

PdfFlattenAnnotsParams.prototype.__class__ = PdfFlattenAnnotsParams;

PdfFlattenAnnotsParams.__cache__ = {};

Module["PdfFlattenAnnotsParams"] = PdfFlattenAnnotsParams;

PdfFlattenAnnotsParams.prototype["get_page_range"] = PdfFlattenAnnotsParams.prototype.get_page_range = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfFlattenAnnotsParams_get_page_range_0(self), PdfPageRangeParams);
};

PdfFlattenAnnotsParams.prototype["set_page_range"] = PdfFlattenAnnotsParams.prototype.set_page_range = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFlattenAnnotsParams_set_page_range_1(self, arg0);
};

Object.defineProperty(PdfFlattenAnnotsParams.prototype, "page_range", {
 get: PdfFlattenAnnotsParams.prototype.get_page_range,
 set: PdfFlattenAnnotsParams.prototype.set_page_range
});

PdfFlattenAnnotsParams.prototype["get_subtype"] = PdfFlattenAnnotsParams.prototype.get_subtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFlattenAnnotsParams_get_subtype_0(self);
};

PdfFlattenAnnotsParams.prototype["set_subtype"] = PdfFlattenAnnotsParams.prototype.set_subtype = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfFlattenAnnotsParams_set_subtype_1(self, arg0);
};

Object.defineProperty(PdfFlattenAnnotsParams.prototype, "subtype", {
 get: PdfFlattenAnnotsParams.prototype.get_subtype,
 set: PdfFlattenAnnotsParams.prototype.set_subtype
});

PdfFlattenAnnotsParams.prototype["__destroy__"] = PdfFlattenAnnotsParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfFlattenAnnotsParams___destroy___0(self);
};

function PdfMediaQueryParams() {
 this.ptr = _emscripten_bind_PdfMediaQueryParams_PdfMediaQueryParams_0();
 getCache(PdfMediaQueryParams)[this.ptr] = this;
}

PdfMediaQueryParams.prototype = Object.create(WrapperObject.prototype);

PdfMediaQueryParams.prototype.constructor = PdfMediaQueryParams;

PdfMediaQueryParams.prototype.__class__ = PdfMediaQueryParams;

PdfMediaQueryParams.__cache__ = {};

Module["PdfMediaQueryParams"] = PdfMediaQueryParams;

PdfMediaQueryParams.prototype["get_type"] = PdfMediaQueryParams.prototype.get_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMediaQueryParams_get_type_0(self);
};

PdfMediaQueryParams.prototype["set_type"] = PdfMediaQueryParams.prototype.set_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMediaQueryParams_set_type_1(self, arg0);
};

Object.defineProperty(PdfMediaQueryParams.prototype, "type", {
 get: PdfMediaQueryParams.prototype.get_type,
 set: PdfMediaQueryParams.prototype.set_type
});

PdfMediaQueryParams.prototype["get_min_width"] = PdfMediaQueryParams.prototype.get_min_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfMediaQueryParams_get_min_width_0(self);
};

PdfMediaQueryParams.prototype["set_min_width"] = PdfMediaQueryParams.prototype.set_min_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfMediaQueryParams_set_min_width_1(self, arg0);
};

Object.defineProperty(PdfMediaQueryParams.prototype, "min_width", {
 get: PdfMediaQueryParams.prototype.get_min_width,
 set: PdfMediaQueryParams.prototype.set_min_width
});

PdfMediaQueryParams.prototype["__destroy__"] = PdfMediaQueryParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfMediaQueryParams___destroy___0(self);
};

function PdfImageParams() {
 this.ptr = _emscripten_bind_PdfImageParams_PdfImageParams_0();
 getCache(PdfImageParams)[this.ptr] = this;
}

PdfImageParams.prototype = Object.create(WrapperObject.prototype);

PdfImageParams.prototype.constructor = PdfImageParams;

PdfImageParams.prototype.__class__ = PdfImageParams;

PdfImageParams.__cache__ = {};

Module["PdfImageParams"] = PdfImageParams;

PdfImageParams.prototype["get_format"] = PdfImageParams.prototype.get_format = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfImageParams_get_format_0(self);
};

PdfImageParams.prototype["set_format"] = PdfImageParams.prototype.set_format = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfImageParams_set_format_1(self, arg0);
};

Object.defineProperty(PdfImageParams.prototype, "format", {
 get: PdfImageParams.prototype.get_format,
 set: PdfImageParams.prototype.set_format
});

PdfImageParams.prototype["get_quality"] = PdfImageParams.prototype.get_quality = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfImageParams_get_quality_0(self);
};

PdfImageParams.prototype["set_quality"] = PdfImageParams.prototype.set_quality = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfImageParams_set_quality_1(self, arg0);
};

Object.defineProperty(PdfImageParams.prototype, "quality", {
 get: PdfImageParams.prototype.get_quality,
 set: PdfImageParams.prototype.set_quality
});

PdfImageParams.prototype["__destroy__"] = PdfImageParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfImageParams___destroy___0(self);
};

function PdfAccessibleParams() {
 this.ptr = _emscripten_bind_PdfAccessibleParams_PdfAccessibleParams_0();
 getCache(PdfAccessibleParams)[this.ptr] = this;
}

PdfAccessibleParams.prototype = Object.create(WrapperObject.prototype);

PdfAccessibleParams.prototype.constructor = PdfAccessibleParams;

PdfAccessibleParams.prototype.__class__ = PdfAccessibleParams;

PdfAccessibleParams.__cache__ = {};

Module["PdfAccessibleParams"] = PdfAccessibleParams;

PdfAccessibleParams.prototype["get_accept_tags"] = PdfAccessibleParams.prototype.get_accept_tags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAccessibleParams_get_accept_tags_0(self);
};

PdfAccessibleParams.prototype["set_accept_tags"] = PdfAccessibleParams.prototype.set_accept_tags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAccessibleParams_set_accept_tags_1(self, arg0);
};

Object.defineProperty(PdfAccessibleParams.prototype, "accept_tags", {
 get: PdfAccessibleParams.prototype.get_accept_tags,
 set: PdfAccessibleParams.prototype.set_accept_tags
});

PdfAccessibleParams.prototype["get_embed_fonts"] = PdfAccessibleParams.prototype.get_embed_fonts = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAccessibleParams_get_embed_fonts_0(self);
};

PdfAccessibleParams.prototype["set_embed_fonts"] = PdfAccessibleParams.prototype.set_embed_fonts = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAccessibleParams_set_embed_fonts_1(self, arg0);
};

Object.defineProperty(PdfAccessibleParams.prototype, "embed_fonts", {
 get: PdfAccessibleParams.prototype.get_embed_fonts,
 set: PdfAccessibleParams.prototype.set_embed_fonts
});

PdfAccessibleParams.prototype["get_subset_fonts"] = PdfAccessibleParams.prototype.get_subset_fonts = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAccessibleParams_get_subset_fonts_0(self);
};

PdfAccessibleParams.prototype["set_subset_fonts"] = PdfAccessibleParams.prototype.set_subset_fonts = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAccessibleParams_set_subset_fonts_1(self, arg0);
};

Object.defineProperty(PdfAccessibleParams.prototype, "subset_fonts", {
 get: PdfAccessibleParams.prototype.get_subset_fonts,
 set: PdfAccessibleParams.prototype.set_subset_fonts
});

PdfAccessibleParams.prototype["get_create_bookmarks"] = PdfAccessibleParams.prototype.get_create_bookmarks = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAccessibleParams_get_create_bookmarks_0(self);
};

PdfAccessibleParams.prototype["set_create_bookmarks"] = PdfAccessibleParams.prototype.set_create_bookmarks = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfAccessibleParams_set_create_bookmarks_1(self, arg0);
};

Object.defineProperty(PdfAccessibleParams.prototype, "create_bookmarks", {
 get: PdfAccessibleParams.prototype.get_create_bookmarks,
 set: PdfAccessibleParams.prototype.set_create_bookmarks
});

PdfAccessibleParams.prototype["__destroy__"] = PdfAccessibleParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAccessibleParams___destroy___0(self);
};

function PdsContentParams() {
 this.ptr = _emscripten_bind_PdsContentParams_PdsContentParams_0();
 getCache(PdsContentParams)[this.ptr] = this;
}

PdsContentParams.prototype = Object.create(WrapperObject.prototype);

PdsContentParams.prototype.constructor = PdsContentParams;

PdsContentParams.prototype.__class__ = PdsContentParams;

PdsContentParams.__cache__ = {};

Module["PdsContentParams"] = PdsContentParams;

PdsContentParams.prototype["get_flags"] = PdsContentParams.prototype.get_flags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsContentParams_get_flags_0(self);
};

PdsContentParams.prototype["set_flags"] = PdsContentParams.prototype.set_flags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdsContentParams_set_flags_1(self, arg0);
};

Object.defineProperty(PdsContentParams.prototype, "flags", {
 get: PdsContentParams.prototype.get_flags,
 set: PdsContentParams.prototype.set_flags
});

PdsContentParams.prototype["get_form_type"] = PdsContentParams.prototype.get_form_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsContentParams_get_form_type_0(self);
};

PdsContentParams.prototype["set_form_type"] = PdsContentParams.prototype.set_form_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdsContentParams_set_form_type_1(self, arg0);
};

Object.defineProperty(PdsContentParams.prototype, "form_type", {
 get: PdsContentParams.prototype.get_form_type,
 set: PdsContentParams.prototype.set_form_type
});

PdsContentParams.prototype["get_bbox"] = PdsContentParams.prototype.get_bbox = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsContentParams_get_bbox_0(self), PdfRect);
};

PdsContentParams.prototype["set_bbox"] = PdsContentParams.prototype.set_bbox = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdsContentParams_set_bbox_1(self, arg0);
};

Object.defineProperty(PdsContentParams.prototype, "bbox", {
 get: PdsContentParams.prototype.get_bbox,
 set: PdsContentParams.prototype.set_bbox
});

PdsContentParams.prototype["get_matrix"] = PdsContentParams.prototype.get_matrix = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsContentParams_get_matrix_0(self), PdfMatrix);
};

PdsContentParams.prototype["set_matrix"] = PdsContentParams.prototype.set_matrix = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdsContentParams_set_matrix_1(self, arg0);
};

Object.defineProperty(PdsContentParams.prototype, "matrix", {
 get: PdsContentParams.prototype.get_matrix,
 set: PdsContentParams.prototype.set_matrix
});

PdsContentParams.prototype["__destroy__"] = PdsContentParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsContentParams___destroy___0(self);
};

function PdfCancelProc() {
 throw "cannot construct a PdfCancelProc, no constructor in IDL";
}

PdfCancelProc.prototype = Object.create(WrapperObject.prototype);

PdfCancelProc.prototype.constructor = PdfCancelProc;

PdfCancelProc.prototype.__class__ = PdfCancelProc;

PdfCancelProc.__cache__ = {};

Module["PdfCancelProc"] = PdfCancelProc;

PdfCancelProc.prototype["__destroy__"] = PdfCancelProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfCancelProc___destroy___0(self);
};

function PdfEventProc() {
 throw "cannot construct a PdfEventProc, no constructor in IDL";
}

PdfEventProc.prototype = Object.create(WrapperObject.prototype);

PdfEventProc.prototype.constructor = PdfEventProc;

PdfEventProc.prototype.__class__ = PdfEventProc;

PdfEventProc.__cache__ = {};

Module["PdfEventProc"] = PdfEventProc;

PdfEventProc.prototype["__destroy__"] = PdfEventProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfEventProc___destroy___0(self);
};

function PdfDigestDataProc() {
 throw "cannot construct a PdfDigestDataProc, no constructor in IDL";
}

PdfDigestDataProc.prototype = Object.create(WrapperObject.prototype);

PdfDigestDataProc.prototype.constructor = PdfDigestDataProc;

PdfDigestDataProc.prototype.__class__ = PdfDigestDataProc;

PdfDigestDataProc.__cache__ = {};

Module["PdfDigestDataProc"] = PdfDigestDataProc;

PdfDigestDataProc.prototype["__destroy__"] = PdfDigestDataProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDigestDataProc___destroy___0(self);
};

function PsStreamReadProc() {
 throw "cannot construct a PsStreamReadProc, no constructor in IDL";
}

PsStreamReadProc.prototype = Object.create(WrapperObject.prototype);

PsStreamReadProc.prototype.constructor = PsStreamReadProc;

PsStreamReadProc.prototype.__class__ = PsStreamReadProc;

PsStreamReadProc.__cache__ = {};

Module["PsStreamReadProc"] = PsStreamReadProc;

PsStreamReadProc.prototype["__destroy__"] = PsStreamReadProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStreamReadProc___destroy___0(self);
};

function PsStreamWriteProc() {
 throw "cannot construct a PsStreamWriteProc, no constructor in IDL";
}

PsStreamWriteProc.prototype = Object.create(WrapperObject.prototype);

PsStreamWriteProc.prototype.constructor = PsStreamWriteProc;

PsStreamWriteProc.prototype.__class__ = PsStreamWriteProc;

PsStreamWriteProc.__cache__ = {};

Module["PsStreamWriteProc"] = PsStreamWriteProc;

PsStreamWriteProc.prototype["__destroy__"] = PsStreamWriteProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStreamWriteProc___destroy___0(self);
};

function PsStreamDestroyProc() {
 throw "cannot construct a PsStreamDestroyProc, no constructor in IDL";
}

PsStreamDestroyProc.prototype = Object.create(WrapperObject.prototype);

PsStreamDestroyProc.prototype.constructor = PsStreamDestroyProc;

PsStreamDestroyProc.prototype.__class__ = PsStreamDestroyProc;

PsStreamDestroyProc.__cache__ = {};

Module["PsStreamDestroyProc"] = PsStreamDestroyProc;

PsStreamDestroyProc.prototype["__destroy__"] = PsStreamDestroyProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStreamDestroyProc___destroy___0(self);
};

function PsStreamGetSizeProc() {
 throw "cannot construct a PsStreamGetSizeProc, no constructor in IDL";
}

PsStreamGetSizeProc.prototype = Object.create(WrapperObject.prototype);

PsStreamGetSizeProc.prototype.constructor = PsStreamGetSizeProc;

PsStreamGetSizeProc.prototype.__class__ = PsStreamGetSizeProc;

PsStreamGetSizeProc.__cache__ = {};

Module["PsStreamGetSizeProc"] = PsStreamGetSizeProc;

PsStreamGetSizeProc.prototype["__destroy__"] = PsStreamGetSizeProc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStreamGetSizeProc___destroy___0(self);
};

function PdsBoolean() {
 throw "cannot construct a PdsBoolean, no constructor in IDL";
}

PdsBoolean.prototype = Object.create(PdsObject.prototype);

PdsBoolean.prototype.constructor = PdsBoolean;

PdsBoolean.prototype.__class__ = PdsBoolean;

PdsBoolean.__cache__ = {};

Module["PdsBoolean"] = PdsBoolean;

PdsBoolean.prototype["GetValue"] = PdsBoolean.prototype.GetValue = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsBoolean_GetValue_0(self);
};

PdsBoolean.prototype["GetObjectType"] = PdsBoolean.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsBoolean_GetObjectType_0(self);
};

PdsBoolean.prototype["GetId"] = PdsBoolean.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsBoolean_GetId_0(self);
};

PdsBoolean.prototype["__destroy__"] = PdsBoolean.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsBoolean___destroy___0(self);
};

function PdsNumber() {
 throw "cannot construct a PdsNumber, no constructor in IDL";
}

PdsNumber.prototype = Object.create(PdsObject.prototype);

PdsNumber.prototype.constructor = PdsNumber;

PdsNumber.prototype.__class__ = PdsNumber;

PdsNumber.__cache__ = {};

Module["PdsNumber"] = PdsNumber;

PdsNumber.prototype["IsIntegerValue"] = PdsNumber.prototype.IsIntegerValue = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsNumber_IsIntegerValue_0(self);
};

PdsNumber.prototype["GetIntegerValue"] = PdsNumber.prototype.GetIntegerValue = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNumber_GetIntegerValue_0(self);
};

PdsNumber.prototype["GetValue"] = PdsNumber.prototype.GetValue = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNumber_GetValue_0(self);
};

PdsNumber.prototype["GetObjectType"] = PdsNumber.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNumber_GetObjectType_0(self);
};

PdsNumber.prototype["GetId"] = PdsNumber.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNumber_GetId_0(self);
};

PdsNumber.prototype["__destroy__"] = PdsNumber.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsNumber___destroy___0(self);
};

function PdsString() {
 throw "cannot construct a PdsString, no constructor in IDL";
}

PdsString.prototype = Object.create(PdsObject.prototype);

PdsString.prototype.constructor = PdsString;

PdsString.prototype.__class__ = PdsString;

PdsString.__cache__ = {};

Module["PdsString"] = PdsString;

PdsString.prototype["GetValue"] = PdsString.prototype.GetValue = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsString_GetValue_2(self, buffer, len);
};

PdsString.prototype["GetText"] = PdsString.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsString_GetText_2(self, buffer, len);
};

PdsString.prototype["GetObjectType"] = PdsString.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsString_GetObjectType_0(self);
};

PdsString.prototype["GetId"] = PdsString.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsString_GetId_0(self);
};

PdsString.prototype["__destroy__"] = PdsString.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsString___destroy___0(self);
};

function PdsName() {
 throw "cannot construct a PdsName, no constructor in IDL";
}

PdsName.prototype = Object.create(PdsObject.prototype);

PdsName.prototype.constructor = PdsName;

PdsName.prototype.__class__ = PdsName;

PdsName.__cache__ = {};

Module["PdsName"] = PdsName;

PdsName.prototype["GetValue"] = PdsName.prototype.GetValue = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsName_GetValue_2(self, buffer, len);
};

PdsName.prototype["GetText"] = PdsName.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsName_GetText_2(self, buffer, len);
};

PdsName.prototype["GetObjectType"] = PdsName.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsName_GetObjectType_0(self);
};

PdsName.prototype["GetId"] = PdsName.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsName_GetId_0(self);
};

PdsName.prototype["__destroy__"] = PdsName.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsName___destroy___0(self);
};

function PdsArray() {
 throw "cannot construct a PdsArray, no constructor in IDL";
}

PdsArray.prototype = Object.create(PdsObject.prototype);

PdsArray.prototype.constructor = PdsArray;

PdsArray.prototype.__class__ = PdsArray;

PdsArray.__cache__ = {};

Module["PdsArray"] = PdsArray;

PdsArray.prototype["GetNumObjects"] = PdsArray.prototype.GetNumObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsArray_GetNumObjects_0(self);
};

PdsArray.prototype["Get"] = PdsArray.prototype.Get = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_Get_1(self, index), PdsObject);
};

PdsArray.prototype["Put"] = PdsArray.prototype.Put = function(index, value) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsArray_Put_2(self, index, value);
};

PdsArray.prototype["PutNumber"] = PdsArray.prototype.PutNumber = function(index, value) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsArray_PutNumber_2(self, index, value);
};

PdsArray.prototype["PutName"] = PdsArray.prototype.PutName = function(index, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 return !!_emscripten_bind_PdsArray_PutName_2(self, index, value);
};

PdsArray.prototype["Insert"] = PdsArray.prototype.Insert = function(index, value) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsArray_Insert_2(self, index, value);
};

PdsArray.prototype["InsertDict"] = PdsArray.prototype.InsertDict = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_InsertDict_1(self, index), PdsDictionary);
};

PdsArray.prototype["InsertArray"] = PdsArray.prototype.InsertArray = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_InsertArray_1(self, index), PdsArray);
};

PdsArray.prototype["RemoveNth"] = PdsArray.prototype.RemoveNth = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdsArray_RemoveNth_1(self, index);
};

PdsArray.prototype["GetDictionary"] = PdsArray.prototype.GetDictionary = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_GetDictionary_1(self, index), PdsDictionary);
};

PdsArray.prototype["GetArray"] = PdsArray.prototype.GetArray = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_GetArray_1(self, index), PdsArray);
};

PdsArray.prototype["GetStream"] = PdsArray.prototype.GetStream = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsArray_GetStream_1(self, index), PdsStream);
};

PdsArray.prototype["GetString"] = PdsArray.prototype.GetString = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsArray_GetString_3(self, index, buffer, len);
};

PdsArray.prototype["GetText"] = PdsArray.prototype.GetText = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsArray_GetText_3(self, index, buffer, len);
};

PdsArray.prototype["GetNumber"] = PdsArray.prototype.GetNumber = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdsArray_GetNumber_1(self, index);
};

PdsArray.prototype["GetInteger"] = PdsArray.prototype.GetInteger = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdsArray_GetInteger_1(self, index);
};

PdsArray.prototype["GetObjectType"] = PdsArray.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsArray_GetObjectType_0(self);
};

PdsArray.prototype["GetId"] = PdsArray.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsArray_GetId_0(self);
};

PdsArray.prototype["__destroy__"] = PdsArray.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsArray___destroy___0(self);
};

function PdsDictionary() {
 throw "cannot construct a PdsDictionary, no constructor in IDL";
}

PdsDictionary.prototype = Object.create(PdsObject.prototype);

PdsDictionary.prototype.constructor = PdsDictionary;

PdsDictionary.prototype.__class__ = PdsDictionary;

PdsDictionary.__cache__ = {};

Module["PdsDictionary"] = PdsDictionary;

PdsDictionary.prototype["Known"] = PdsDictionary.prototype.Known = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return !!_emscripten_bind_PdsDictionary_Known_1(self, key);
};

PdsDictionary.prototype["GetNumKeys"] = PdsDictionary.prototype.GetNumKeys = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsDictionary_GetNumKeys_0(self);
};

PdsDictionary.prototype["GetKey"] = PdsDictionary.prototype.GetKey = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsDictionary_GetKey_3(self, index, buffer, len);
};

PdsDictionary.prototype["Get"] = PdsDictionary.prototype.Get = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_Get_1(self, key), PdsObject);
};

PdsDictionary.prototype["Put"] = PdsDictionary.prototype.Put = function(key, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsDictionary_Put_2(self, key, value);
};

PdsDictionary.prototype["PutBool"] = PdsDictionary.prototype.PutBool = function(key, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsDictionary_PutBool_2(self, key, value);
};

PdsDictionary.prototype["PutName"] = PdsDictionary.prototype.PutName = function(key, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 return !!_emscripten_bind_PdsDictionary_PutName_2(self, key, value);
};

PdsDictionary.prototype["PutString"] = PdsDictionary.prototype.PutString = function(key, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 return !!_emscripten_bind_PdsDictionary_PutString_2(self, key, value);
};

PdsDictionary.prototype["PutNumber"] = PdsDictionary.prototype.PutNumber = function(key, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdsDictionary_PutNumber_2(self, key, value);
};

PdsDictionary.prototype["PutRect"] = PdsDictionary.prototype.PutRect = function(key, rect) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdsDictionary_PutRect_2(self, key, rect);
};

PdsDictionary.prototype["PutMatrix"] = PdsDictionary.prototype.PutMatrix = function(key, matrix) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (matrix && typeof matrix === "object") matrix = matrix.ptr;
 return !!_emscripten_bind_PdsDictionary_PutMatrix_2(self, key, matrix);
};

PdsDictionary.prototype["PutDict"] = PdsDictionary.prototype.PutDict = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_PutDict_1(self, key), PdsDictionary);
};

PdsDictionary.prototype["PutArray"] = PdsDictionary.prototype.PutArray = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_PutArray_1(self, key), PdsArray);
};

PdsDictionary.prototype["GetDictionary"] = PdsDictionary.prototype.GetDictionary = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_GetDictionary_1(self, key), PdsDictionary);
};

PdsDictionary.prototype["GetArray"] = PdsDictionary.prototype.GetArray = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_GetArray_1(self, key), PdsArray);
};

PdsDictionary.prototype["GetStream"] = PdsDictionary.prototype.GetStream = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return wrapPointer(_emscripten_bind_PdsDictionary_GetStream_1(self, key), PdsStream);
};

PdsDictionary.prototype["GetString"] = PdsDictionary.prototype.GetString = function(key, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsDictionary_GetString_3(self, key, buffer, len);
};

PdsDictionary.prototype["GetText"] = PdsDictionary.prototype.GetText = function(key, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsDictionary_GetText_3(self, key, buffer, len);
};

PdsDictionary.prototype["GetNumber"] = PdsDictionary.prototype.GetNumber = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 return _emscripten_bind_PdsDictionary_GetNumber_1(self, key);
};

PdsDictionary.prototype["GetInteger"] = PdsDictionary.prototype.GetInteger = function(key, default_value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (default_value && typeof default_value === "object") default_value = default_value.ptr;
 return _emscripten_bind_PdsDictionary_GetInteger_2(self, key, default_value);
};

PdsDictionary.prototype["GetBoolean"] = PdsDictionary.prototype.GetBoolean = function(key, default_value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (default_value && typeof default_value === "object") default_value = default_value.ptr;
 return !!_emscripten_bind_PdsDictionary_GetBoolean_2(self, key, default_value);
};

PdsDictionary.prototype["GetObjectType"] = PdsDictionary.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsDictionary_GetObjectType_0(self);
};

PdsDictionary.prototype["GetId"] = PdsDictionary.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsDictionary_GetId_0(self);
};

PdsDictionary.prototype["__destroy__"] = PdsDictionary.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsDictionary___destroy___0(self);
};

function PdsStream() {
 throw "cannot construct a PdsStream, no constructor in IDL";
}

PdsStream.prototype = Object.create(PdsObject.prototype);

PdsStream.prototype.constructor = PdsStream;

PdsStream.prototype.__class__ = PdsStream;

PdsStream.__cache__ = {};

Module["PdsStream"] = PdsStream;

PdsStream.prototype["GetStreamDict"] = PdsStream.prototype.GetStreamDict = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStream_GetStreamDict_0(self), PdsDictionary);
};

PdsStream.prototype["GetRawDataSize"] = PdsStream.prototype.GetRawDataSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStream_GetRawDataSize_0(self);
};

PdsStream.prototype["IsEof"] = PdsStream.prototype.IsEof = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsStream_IsEof_0(self);
};

PdsStream.prototype["GetSize"] = PdsStream.prototype.GetSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStream_GetSize_0(self);
};

PdsStream.prototype["Read"] = PdsStream.prototype.Read = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PdsStream_Read_3(self, offset, buffer, size);
};

PdsStream.prototype["GetPos"] = PdsStream.prototype.GetPos = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStream_GetPos_0(self);
};

PdsStream.prototype["GetObjectType"] = PdsStream.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStream_GetObjectType_0(self);
};

PdsStream.prototype["GetId"] = PdsStream.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStream_GetId_0(self);
};

PdsStream.prototype["__destroy__"] = PdsStream.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsStream___destroy___0(self);
};

function PdsNull() {
 throw "cannot construct a PdsNull, no constructor in IDL";
}

PdsNull.prototype = Object.create(PdsObject.prototype);

PdsNull.prototype.constructor = PdsNull;

PdsNull.prototype.__class__ = PdsNull;

PdsNull.__cache__ = {};

Module["PdsNull"] = PdsNull;

PdsNull.prototype["GetObjectType"] = PdsNull.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNull_GetObjectType_0(self);
};

PdsNull.prototype["GetId"] = PdsNull.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsNull_GetId_0(self);
};

PdsNull.prototype["__destroy__"] = PdsNull.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsNull___destroy___0(self);
};

function PdsContent() {
 throw "cannot construct a PdsContent, no constructor in IDL";
}

PdsContent.prototype = Object.create(WrapperObject.prototype);

PdsContent.prototype.constructor = PdsContent;

PdsContent.prototype.__class__ = PdsContent;

PdsContent.__cache__ = {};

Module["PdsContent"] = PdsContent;

PdsContent.prototype["GetNumObjects"] = PdsContent.prototype.GetNumObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsContent_GetNumObjects_0(self);
};

PdsContent.prototype["GetObject"] = PdsContent.prototype.GetObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsContent_GetObject_1(self, index), PdsPageObject);
};

PdsContent.prototype["Release"] = PdsContent.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdsContent_Release_0(self);
};

PdsContent.prototype["__destroy__"] = PdsContent.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsContent___destroy___0(self);
};

function PdsText() {
 throw "cannot construct a PdsText, no constructor in IDL";
}

PdsText.prototype = Object.create(PdsPageObject.prototype);

PdsText.prototype.constructor = PdsText;

PdsText.prototype.__class__ = PdsText;

PdsText.__cache__ = {};

Module["PdsText"] = PdsText;

PdsText.prototype["GetText"] = PdsText.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsText_GetText_2(self, buffer, len);
};

PdsText.prototype["GetTextState"] = PdsText.prototype.GetTextState = function(doc, text_state) {
 var self = this.ptr;
 if (doc && typeof doc === "object") doc = doc.ptr;
 if (text_state && typeof text_state === "object") text_state = text_state.ptr;
 return !!_emscripten_bind_PdsText_GetTextState_2(self, doc, text_state);
};

PdsText.prototype["GetObjectType"] = PdsText.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsText_GetObjectType_0(self);
};

PdsText.prototype["GetBBox"] = PdsText.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsText_GetBBox_1(self, bbox);
};

PdsText.prototype["GetId"] = PdsText.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsText_GetId_0(self);
};

PdsText.prototype["SetRender"] = PdsText.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsText_SetRender_1(self, render);
};

PdsText.prototype["GetStructObject"] = PdsText.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsText_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsText.prototype["GetContentMark"] = PdsText.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsText_GetContentMark_0(self), PdsContentMark);
};

PdsText.prototype["GetPage"] = PdsText.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsText_GetPage_0(self), PdfPage);
};

PdsText.prototype["GetGState"] = PdsText.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsText_GetGState_1(self, g_state);
};

PdsText.prototype["__destroy__"] = PdsText.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsText___destroy___0(self);
};

function PdsForm() {
 throw "cannot construct a PdsForm, no constructor in IDL";
}

PdsForm.prototype = Object.create(PdsPageObject.prototype);

PdsForm.prototype.constructor = PdsForm;

PdsForm.prototype.__class__ = PdsForm;

PdsForm.__cache__ = {};

Module["PdsForm"] = PdsForm;

PdsForm.prototype["AcquireContent"] = PdsForm.prototype.AcquireContent = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsForm_AcquireContent_0(self), PdsContent);
};

PdsForm.prototype["GetObjectType"] = PdsForm.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsForm_GetObjectType_0(self);
};

PdsForm.prototype["GetBBox"] = PdsForm.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsForm_GetBBox_1(self, bbox);
};

PdsForm.prototype["GetId"] = PdsForm.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsForm_GetId_0(self);
};

PdsForm.prototype["SetRender"] = PdsForm.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsForm_SetRender_1(self, render);
};

PdsForm.prototype["GetStructObject"] = PdsForm.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsForm_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsForm.prototype["GetContentMark"] = PdsForm.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsForm_GetContentMark_0(self), PdsContentMark);
};

PdsForm.prototype["GetPage"] = PdsForm.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsForm_GetPage_0(self), PdfPage);
};

PdsForm.prototype["GetGState"] = PdsForm.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsForm_GetGState_1(self, g_state);
};

PdsForm.prototype["__destroy__"] = PdsForm.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsForm___destroy___0(self);
};

function PdsPath() {
 throw "cannot construct a PdsPath, no constructor in IDL";
}

PdsPath.prototype = Object.create(PdsPageObject.prototype);

PdsPath.prototype.constructor = PdsPath;

PdsPath.prototype.__class__ = PdsPath;

PdsPath.__cache__ = {};

Module["PdsPath"] = PdsPath;

PdsPath.prototype["GetNumPathPoints"] = PdsPath.prototype.GetNumPathPoints = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPath_GetNumPathPoints_0(self);
};

PdsPath.prototype["GetPathPoint"] = PdsPath.prototype.GetPathPoint = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsPath_GetPathPoint_1(self, index), PdsPathPoint);
};

PdsPath.prototype["GetObjectType"] = PdsPath.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPath_GetObjectType_0(self);
};

PdsPath.prototype["GetBBox"] = PdsPath.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsPath_GetBBox_1(self, bbox);
};

PdsPath.prototype["GetId"] = PdsPath.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPath_GetId_0(self);
};

PdsPath.prototype["SetRender"] = PdsPath.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsPath_SetRender_1(self, render);
};

PdsPath.prototype["GetStructObject"] = PdsPath.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsPath_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsPath.prototype["GetContentMark"] = PdsPath.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsPath_GetContentMark_0(self), PdsContentMark);
};

PdsPath.prototype["GetPage"] = PdsPath.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsPath_GetPage_0(self), PdfPage);
};

PdsPath.prototype["GetGState"] = PdsPath.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsPath_GetGState_1(self, g_state);
};

PdsPath.prototype["__destroy__"] = PdsPath.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsPath___destroy___0(self);
};

function PdsPathPoint() {
 throw "cannot construct a PdsPathPoint, no constructor in IDL";
}

PdsPathPoint.prototype = Object.create(WrapperObject.prototype);

PdsPathPoint.prototype.constructor = PdsPathPoint;

PdsPathPoint.prototype.__class__ = PdsPathPoint;

PdsPathPoint.__cache__ = {};

Module["PdsPathPoint"] = PdsPathPoint;

PdsPathPoint.prototype["GetType"] = PdsPathPoint.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsPathPoint_GetType_0(self);
};

PdsPathPoint.prototype["GetPoint"] = PdsPathPoint.prototype.GetPoint = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdsPathPoint_GetPoint_1(self, point);
};

PdsPathPoint.prototype["IsClosed"] = PdsPathPoint.prototype.IsClosed = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsPathPoint_IsClosed_0(self);
};

PdsPathPoint.prototype["__destroy__"] = PdsPathPoint.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsPathPoint___destroy___0(self);
};

function PdsImage() {
 throw "cannot construct a PdsImage, no constructor in IDL";
}

PdsImage.prototype = Object.create(PdsPageObject.prototype);

PdsImage.prototype.constructor = PdsImage;

PdsImage.prototype.__class__ = PdsImage;

PdsImage.__cache__ = {};

Module["PdsImage"] = PdsImage;

PdsImage.prototype["GetDataStm"] = PdsImage.prototype.GetDataStm = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsImage_GetDataStm_0(self), PdsStream);
};

PdsImage.prototype["GetObjectType"] = PdsImage.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsImage_GetObjectType_0(self);
};

PdsImage.prototype["GetBBox"] = PdsImage.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsImage_GetBBox_1(self, bbox);
};

PdsImage.prototype["GetId"] = PdsImage.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsImage_GetId_0(self);
};

PdsImage.prototype["SetRender"] = PdsImage.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsImage_SetRender_1(self, render);
};

PdsImage.prototype["GetStructObject"] = PdsImage.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsImage_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsImage.prototype["GetContentMark"] = PdsImage.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsImage_GetContentMark_0(self), PdsContentMark);
};

PdsImage.prototype["GetPage"] = PdsImage.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsImage_GetPage_0(self), PdfPage);
};

PdsImage.prototype["GetGState"] = PdsImage.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsImage_GetGState_1(self, g_state);
};

PdsImage.prototype["__destroy__"] = PdsImage.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsImage___destroy___0(self);
};

function PdsShading() {
 throw "cannot construct a PdsShading, no constructor in IDL";
}

PdsShading.prototype = Object.create(PdsPageObject.prototype);

PdsShading.prototype.constructor = PdsShading;

PdsShading.prototype.__class__ = PdsShading;

PdsShading.__cache__ = {};

Module["PdsShading"] = PdsShading;

PdsShading.prototype["GetObjectType"] = PdsShading.prototype.GetObjectType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsShading_GetObjectType_0(self);
};

PdsShading.prototype["GetBBox"] = PdsShading.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdsShading_GetBBox_1(self, bbox);
};

PdsShading.prototype["GetId"] = PdsShading.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsShading_GetId_0(self);
};

PdsShading.prototype["SetRender"] = PdsShading.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdsShading_SetRender_1(self, render);
};

PdsShading.prototype["GetStructObject"] = PdsShading.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdsShading_GetStructObject_1(self, struct_parent), PdsObject);
};

PdsShading.prototype["GetContentMark"] = PdsShading.prototype.GetContentMark = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsShading_GetContentMark_0(self), PdsContentMark);
};

PdsShading.prototype["GetPage"] = PdsShading.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsShading_GetPage_0(self), PdfPage);
};

PdsShading.prototype["GetGState"] = PdsShading.prototype.GetGState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 return !!_emscripten_bind_PdsShading_GetGState_1(self, g_state);
};

PdsShading.prototype["__destroy__"] = PdsShading.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsShading___destroy___0(self);
};

function PdsContentMark() {
 throw "cannot construct a PdsContentMark, no constructor in IDL";
}

PdsContentMark.prototype = Object.create(WrapperObject.prototype);

PdsContentMark.prototype.constructor = PdsContentMark;

PdsContentMark.prototype.__class__ = PdsContentMark;

PdsContentMark.__cache__ = {};

Module["PdsContentMark"] = PdsContentMark;

PdsContentMark.prototype["GetNumTags"] = PdsContentMark.prototype.GetNumTags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsContentMark_GetNumTags_0(self);
};

PdsContentMark.prototype["GetTagName"] = PdsContentMark.prototype.GetTagName = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsContentMark_GetTagName_3(self, index, buffer, len);
};

PdsContentMark.prototype["GetTagObject"] = PdsContentMark.prototype.GetTagObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsContentMark_GetTagObject_1(self, index), PdsDictionary);
};

PdsContentMark.prototype["GetTagMcid"] = PdsContentMark.prototype.GetTagMcid = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsContentMark_GetTagMcid_0(self);
};

PdsContentMark.prototype["GetTagArtifact"] = PdsContentMark.prototype.GetTagArtifact = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsContentMark_GetTagArtifact_0(self);
};

PdsContentMark.prototype["AddTag"] = PdsContentMark.prototype.AddTag = function(name, object, indirect) {
 var self = this.ptr;
 ensureCache.prepare();
 if (name && typeof name === "object") name = name.ptr; else name = ensureString(name);
 if (object && typeof object === "object") object = object.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 return !!_emscripten_bind_PdsContentMark_AddTag_3(self, name, object, indirect);
};

PdsContentMark.prototype["RemoveTag"] = PdsContentMark.prototype.RemoveTag = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdsContentMark_RemoveTag_1(self, index);
};

PdsContentMark.prototype["__destroy__"] = PdsContentMark.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsContentMark___destroy___0(self);
};

function PdeList() {
 throw "cannot construct a PdeList, no constructor in IDL";
}

PdeList.prototype = Object.create(PdeElement.prototype);

PdeList.prototype.constructor = PdeList;

PdeList.prototype.__class__ = PdeList;

PdeList.__cache__ = {};

Module["PdeList"] = PdeList;

PdeList.prototype["GetType"] = PdeList.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetType_0(self);
};

PdeList.prototype["GetBBox"] = PdeList.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeList_GetBBox_1(self, bbox);
};

PdeList.prototype["SetBBox"] = PdeList.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeList_SetBBox_1(self, bbox);
};

PdeList.prototype["GetId"] = PdeList.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetId_0(self);
};

PdeList.prototype["GetGraphicState"] = PdeList.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeList_GetGraphicState_1(self, g_state);
};

PdeList.prototype["GetNumChildren"] = PdeList.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetNumChildren_0(self);
};

PdeList.prototype["GetChild"] = PdeList.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeList_GetChild_1(self, index), PdeElement);
};

PdeList.prototype["GetAlignment"] = PdeList.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetAlignment_0(self);
};

PdeList.prototype["GetAngle"] = PdeList.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetAngle_0(self);
};

PdeList.prototype["SetRender"] = PdeList.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeList_SetRender_1(self, render);
};

PdeList.prototype["SetData"] = PdeList.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeList_SetData_1(self, data);
};

PdeList.prototype["GetData"] = PdeList.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeList_GetData_0(self), VoidPtr);
};

PdeList.prototype["SetAlt"] = PdeList.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeList_SetAlt_1(self, alt);
};

PdeList.prototype["SetActualText"] = PdeList.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeList_SetActualText_1(self, text);
};

PdeList.prototype["GetFlags"] = PdeList.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetFlags_0(self);
};

PdeList.prototype["SetFlags"] = PdeList.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeList_SetFlags_1(self, flags);
};

PdeList.prototype["GetNumPageObjects"] = PdeList.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeList_GetNumPageObjects_0(self);
};

PdeList.prototype["GetPageObject"] = PdeList.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeList_GetPageObject_1(self, index), PdsPageObject);
};

PdeList.prototype["GetPageMap"] = PdeList.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeList_GetPageMap_0(self), PdePageMap);
};

PdeList.prototype["__destroy__"] = PdeList.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeList___destroy___0(self);
};

function PdeToc() {
 throw "cannot construct a PdeToc, no constructor in IDL";
}

PdeToc.prototype = Object.create(PdeContainer.prototype);

PdeToc.prototype.constructor = PdeToc;

PdeToc.prototype.__class__ = PdeToc;

PdeToc.__cache__ = {};

Module["PdeToc"] = PdeToc;

PdeToc.prototype["GetType"] = PdeToc.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetType_0(self);
};

PdeToc.prototype["GetBBox"] = PdeToc.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeToc_GetBBox_1(self, bbox);
};

PdeToc.prototype["SetBBox"] = PdeToc.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeToc_SetBBox_1(self, bbox);
};

PdeToc.prototype["GetId"] = PdeToc.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetId_0(self);
};

PdeToc.prototype["GetGraphicState"] = PdeToc.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeToc_GetGraphicState_1(self, g_state);
};

PdeToc.prototype["GetNumChildren"] = PdeToc.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetNumChildren_0(self);
};

PdeToc.prototype["GetChild"] = PdeToc.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeToc_GetChild_1(self, index), PdeElement);
};

PdeToc.prototype["GetAlignment"] = PdeToc.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetAlignment_0(self);
};

PdeToc.prototype["GetAngle"] = PdeToc.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetAngle_0(self);
};

PdeToc.prototype["SetRender"] = PdeToc.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeToc_SetRender_1(self, render);
};

PdeToc.prototype["SetData"] = PdeToc.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeToc_SetData_1(self, data);
};

PdeToc.prototype["GetData"] = PdeToc.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeToc_GetData_0(self), VoidPtr);
};

PdeToc.prototype["SetAlt"] = PdeToc.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeToc_SetAlt_1(self, alt);
};

PdeToc.prototype["SetActualText"] = PdeToc.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeToc_SetActualText_1(self, text);
};

PdeToc.prototype["GetFlags"] = PdeToc.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetFlags_0(self);
};

PdeToc.prototype["SetFlags"] = PdeToc.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeToc_SetFlags_1(self, flags);
};

PdeToc.prototype["GetNumPageObjects"] = PdeToc.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeToc_GetNumPageObjects_0(self);
};

PdeToc.prototype["GetPageObject"] = PdeToc.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeToc_GetPageObject_1(self, index), PdsPageObject);
};

PdeToc.prototype["GetPageMap"] = PdeToc.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeToc_GetPageMap_0(self), PdePageMap);
};

PdeToc.prototype["__destroy__"] = PdeToc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeToc___destroy___0(self);
};

function PdeFormField() {
 throw "cannot construct a PdeFormField, no constructor in IDL";
}

PdeFormField.prototype = Object.create(PdeAnnot.prototype);

PdeFormField.prototype.constructor = PdeFormField;

PdeFormField.prototype.__class__ = PdeFormField;

PdeFormField.__cache__ = {};

Module["PdeFormField"] = PdeFormField;

PdeFormField.prototype["GetAnnot"] = PdeFormField.prototype.GetAnnot = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeFormField_GetAnnot_0(self), PdfAnnot);
};

PdeFormField.prototype["GetType"] = PdeFormField.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetType_0(self);
};

PdeFormField.prototype["GetBBox"] = PdeFormField.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeFormField_GetBBox_1(self, bbox);
};

PdeFormField.prototype["SetBBox"] = PdeFormField.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeFormField_SetBBox_1(self, bbox);
};

PdeFormField.prototype["GetId"] = PdeFormField.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetId_0(self);
};

PdeFormField.prototype["GetGraphicState"] = PdeFormField.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeFormField_GetGraphicState_1(self, g_state);
};

PdeFormField.prototype["GetNumChildren"] = PdeFormField.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetNumChildren_0(self);
};

PdeFormField.prototype["GetChild"] = PdeFormField.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeFormField_GetChild_1(self, index), PdeElement);
};

PdeFormField.prototype["GetAlignment"] = PdeFormField.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetAlignment_0(self);
};

PdeFormField.prototype["GetAngle"] = PdeFormField.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetAngle_0(self);
};

PdeFormField.prototype["SetRender"] = PdeFormField.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeFormField_SetRender_1(self, render);
};

PdeFormField.prototype["SetData"] = PdeFormField.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeFormField_SetData_1(self, data);
};

PdeFormField.prototype["GetData"] = PdeFormField.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeFormField_GetData_0(self), VoidPtr);
};

PdeFormField.prototype["SetAlt"] = PdeFormField.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeFormField_SetAlt_1(self, alt);
};

PdeFormField.prototype["SetActualText"] = PdeFormField.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeFormField_SetActualText_1(self, text);
};

PdeFormField.prototype["GetFlags"] = PdeFormField.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetFlags_0(self);
};

PdeFormField.prototype["SetFlags"] = PdeFormField.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeFormField_SetFlags_1(self, flags);
};

PdeFormField.prototype["GetNumPageObjects"] = PdeFormField.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFormField_GetNumPageObjects_0(self);
};

PdeFormField.prototype["GetPageObject"] = PdeFormField.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeFormField_GetPageObject_1(self, index), PdsPageObject);
};

PdeFormField.prototype["GetPageMap"] = PdeFormField.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeFormField_GetPageMap_0(self), PdePageMap);
};

PdeFormField.prototype["__destroy__"] = PdeFormField.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeFormField___destroy___0(self);
};

function PdeImage() {
 throw "cannot construct a PdeImage, no constructor in IDL";
}

PdeImage.prototype = Object.create(PdeContainer.prototype);

PdeImage.prototype.constructor = PdeImage;

PdeImage.prototype.__class__ = PdeImage;

PdeImage.__cache__ = {};

Module["PdeImage"] = PdeImage;

PdeImage.prototype["GetImageType"] = PdeImage.prototype.GetImageType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetImageType_0(self);
};

PdeImage.prototype["GetCaption"] = PdeImage.prototype.GetCaption = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeImage_GetCaption_0(self), PdeElement);
};

PdeImage.prototype["GetType"] = PdeImage.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetType_0(self);
};

PdeImage.prototype["GetBBox"] = PdeImage.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeImage_GetBBox_1(self, bbox);
};

PdeImage.prototype["SetBBox"] = PdeImage.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeImage_SetBBox_1(self, bbox);
};

PdeImage.prototype["GetId"] = PdeImage.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetId_0(self);
};

PdeImage.prototype["GetGraphicState"] = PdeImage.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeImage_GetGraphicState_1(self, g_state);
};

PdeImage.prototype["GetNumChildren"] = PdeImage.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetNumChildren_0(self);
};

PdeImage.prototype["GetChild"] = PdeImage.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeImage_GetChild_1(self, index), PdeElement);
};

PdeImage.prototype["GetAlignment"] = PdeImage.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetAlignment_0(self);
};

PdeImage.prototype["GetAngle"] = PdeImage.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetAngle_0(self);
};

PdeImage.prototype["SetRender"] = PdeImage.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeImage_SetRender_1(self, render);
};

PdeImage.prototype["SetData"] = PdeImage.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeImage_SetData_1(self, data);
};

PdeImage.prototype["GetData"] = PdeImage.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeImage_GetData_0(self), VoidPtr);
};

PdeImage.prototype["SetAlt"] = PdeImage.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeImage_SetAlt_1(self, alt);
};

PdeImage.prototype["SetActualText"] = PdeImage.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeImage_SetActualText_1(self, text);
};

PdeImage.prototype["GetFlags"] = PdeImage.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetFlags_0(self);
};

PdeImage.prototype["SetFlags"] = PdeImage.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeImage_SetFlags_1(self, flags);
};

PdeImage.prototype["GetNumPageObjects"] = PdeImage.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeImage_GetNumPageObjects_0(self);
};

PdeImage.prototype["GetPageObject"] = PdeImage.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeImage_GetPageObject_1(self, index), PdsPageObject);
};

PdeImage.prototype["GetPageMap"] = PdeImage.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeImage_GetPageMap_0(self), PdePageMap);
};

PdeImage.prototype["__destroy__"] = PdeImage.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeImage___destroy___0(self);
};

function PdeLine() {
 throw "cannot construct a PdeLine, no constructor in IDL";
}

PdeLine.prototype = Object.create(PdeElement.prototype);

PdeLine.prototype.constructor = PdeLine;

PdeLine.prototype.__class__ = PdeLine;

PdeLine.__cache__ = {};

Module["PdeLine"] = PdeLine;

PdeLine.prototype["GetType"] = PdeLine.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetType_0(self);
};

PdeLine.prototype["GetBBox"] = PdeLine.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeLine_GetBBox_1(self, bbox);
};

PdeLine.prototype["SetBBox"] = PdeLine.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeLine_SetBBox_1(self, bbox);
};

PdeLine.prototype["GetId"] = PdeLine.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetId_0(self);
};

PdeLine.prototype["GetGraphicState"] = PdeLine.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeLine_GetGraphicState_1(self, g_state);
};

PdeLine.prototype["GetNumChildren"] = PdeLine.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetNumChildren_0(self);
};

PdeLine.prototype["GetChild"] = PdeLine.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeLine_GetChild_1(self, index), PdeElement);
};

PdeLine.prototype["GetAlignment"] = PdeLine.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetAlignment_0(self);
};

PdeLine.prototype["GetAngle"] = PdeLine.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetAngle_0(self);
};

PdeLine.prototype["SetRender"] = PdeLine.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeLine_SetRender_1(self, render);
};

PdeLine.prototype["SetData"] = PdeLine.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeLine_SetData_1(self, data);
};

PdeLine.prototype["GetData"] = PdeLine.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeLine_GetData_0(self), VoidPtr);
};

PdeLine.prototype["SetAlt"] = PdeLine.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeLine_SetAlt_1(self, alt);
};

PdeLine.prototype["SetActualText"] = PdeLine.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeLine_SetActualText_1(self, text);
};

PdeLine.prototype["GetFlags"] = PdeLine.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetFlags_0(self);
};

PdeLine.prototype["SetFlags"] = PdeLine.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeLine_SetFlags_1(self, flags);
};

PdeLine.prototype["GetNumPageObjects"] = PdeLine.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeLine_GetNumPageObjects_0(self);
};

PdeLine.prototype["GetPageObject"] = PdeLine.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeLine_GetPageObject_1(self, index), PdsPageObject);
};

PdeLine.prototype["GetPageMap"] = PdeLine.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeLine_GetPageMap_0(self), PdePageMap);
};

PdeLine.prototype["__destroy__"] = PdeLine.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeLine___destroy___0(self);
};

function PdeRect() {
 throw "cannot construct a PdeRect, no constructor in IDL";
}

PdeRect.prototype = Object.create(PdeContainer.prototype);

PdeRect.prototype.constructor = PdeRect;

PdeRect.prototype.__class__ = PdeRect;

PdeRect.__cache__ = {};

Module["PdeRect"] = PdeRect;

PdeRect.prototype["GetType"] = PdeRect.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetType_0(self);
};

PdeRect.prototype["GetBBox"] = PdeRect.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeRect_GetBBox_1(self, bbox);
};

PdeRect.prototype["SetBBox"] = PdeRect.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeRect_SetBBox_1(self, bbox);
};

PdeRect.prototype["GetId"] = PdeRect.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetId_0(self);
};

PdeRect.prototype["GetGraphicState"] = PdeRect.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeRect_GetGraphicState_1(self, g_state);
};

PdeRect.prototype["GetNumChildren"] = PdeRect.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetNumChildren_0(self);
};

PdeRect.prototype["GetChild"] = PdeRect.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeRect_GetChild_1(self, index), PdeElement);
};

PdeRect.prototype["GetAlignment"] = PdeRect.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetAlignment_0(self);
};

PdeRect.prototype["GetAngle"] = PdeRect.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetAngle_0(self);
};

PdeRect.prototype["SetRender"] = PdeRect.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeRect_SetRender_1(self, render);
};

PdeRect.prototype["SetData"] = PdeRect.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeRect_SetData_1(self, data);
};

PdeRect.prototype["GetData"] = PdeRect.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeRect_GetData_0(self), VoidPtr);
};

PdeRect.prototype["SetAlt"] = PdeRect.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeRect_SetAlt_1(self, alt);
};

PdeRect.prototype["SetActualText"] = PdeRect.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeRect_SetActualText_1(self, text);
};

PdeRect.prototype["GetFlags"] = PdeRect.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetFlags_0(self);
};

PdeRect.prototype["SetFlags"] = PdeRect.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeRect_SetFlags_1(self, flags);
};

PdeRect.prototype["GetNumPageObjects"] = PdeRect.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeRect_GetNumPageObjects_0(self);
};

PdeRect.prototype["GetPageObject"] = PdeRect.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeRect_GetPageObject_1(self, index), PdsPageObject);
};

PdeRect.prototype["GetPageMap"] = PdeRect.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeRect_GetPageMap_0(self), PdePageMap);
};

PdeRect.prototype["__destroy__"] = PdeRect.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeRect___destroy___0(self);
};

function PdeHeader() {
 throw "cannot construct a PdeHeader, no constructor in IDL";
}

PdeHeader.prototype = Object.create(PdeContainer.prototype);

PdeHeader.prototype.constructor = PdeHeader;

PdeHeader.prototype.__class__ = PdeHeader;

PdeHeader.__cache__ = {};

Module["PdeHeader"] = PdeHeader;

PdeHeader.prototype["GetType"] = PdeHeader.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetType_0(self);
};

PdeHeader.prototype["GetBBox"] = PdeHeader.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeHeader_GetBBox_1(self, bbox);
};

PdeHeader.prototype["SetBBox"] = PdeHeader.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeHeader_SetBBox_1(self, bbox);
};

PdeHeader.prototype["GetId"] = PdeHeader.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetId_0(self);
};

PdeHeader.prototype["GetGraphicState"] = PdeHeader.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeHeader_GetGraphicState_1(self, g_state);
};

PdeHeader.prototype["GetNumChildren"] = PdeHeader.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetNumChildren_0(self);
};

PdeHeader.prototype["GetChild"] = PdeHeader.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeHeader_GetChild_1(self, index), PdeElement);
};

PdeHeader.prototype["GetAlignment"] = PdeHeader.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetAlignment_0(self);
};

PdeHeader.prototype["GetAngle"] = PdeHeader.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetAngle_0(self);
};

PdeHeader.prototype["SetRender"] = PdeHeader.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeHeader_SetRender_1(self, render);
};

PdeHeader.prototype["SetData"] = PdeHeader.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeHeader_SetData_1(self, data);
};

PdeHeader.prototype["GetData"] = PdeHeader.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeHeader_GetData_0(self), VoidPtr);
};

PdeHeader.prototype["SetAlt"] = PdeHeader.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeHeader_SetAlt_1(self, alt);
};

PdeHeader.prototype["SetActualText"] = PdeHeader.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeHeader_SetActualText_1(self, text);
};

PdeHeader.prototype["GetFlags"] = PdeHeader.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetFlags_0(self);
};

PdeHeader.prototype["SetFlags"] = PdeHeader.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeHeader_SetFlags_1(self, flags);
};

PdeHeader.prototype["GetNumPageObjects"] = PdeHeader.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeHeader_GetNumPageObjects_0(self);
};

PdeHeader.prototype["GetPageObject"] = PdeHeader.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeHeader_GetPageObject_1(self, index), PdsPageObject);
};

PdeHeader.prototype["GetPageMap"] = PdeHeader.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeHeader_GetPageMap_0(self), PdePageMap);
};

PdeHeader.prototype["__destroy__"] = PdeHeader.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeHeader___destroy___0(self);
};

function PdeFooter() {
 throw "cannot construct a PdeFooter, no constructor in IDL";
}

PdeFooter.prototype = Object.create(PdeContainer.prototype);

PdeFooter.prototype.constructor = PdeFooter;

PdeFooter.prototype.__class__ = PdeFooter;

PdeFooter.__cache__ = {};

Module["PdeFooter"] = PdeFooter;

PdeFooter.prototype["GetType"] = PdeFooter.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetType_0(self);
};

PdeFooter.prototype["GetBBox"] = PdeFooter.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeFooter_GetBBox_1(self, bbox);
};

PdeFooter.prototype["SetBBox"] = PdeFooter.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeFooter_SetBBox_1(self, bbox);
};

PdeFooter.prototype["GetId"] = PdeFooter.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetId_0(self);
};

PdeFooter.prototype["GetGraphicState"] = PdeFooter.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeFooter_GetGraphicState_1(self, g_state);
};

PdeFooter.prototype["GetNumChildren"] = PdeFooter.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetNumChildren_0(self);
};

PdeFooter.prototype["GetChild"] = PdeFooter.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeFooter_GetChild_1(self, index), PdeElement);
};

PdeFooter.prototype["GetAlignment"] = PdeFooter.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetAlignment_0(self);
};

PdeFooter.prototype["GetAngle"] = PdeFooter.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetAngle_0(self);
};

PdeFooter.prototype["SetRender"] = PdeFooter.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeFooter_SetRender_1(self, render);
};

PdeFooter.prototype["SetData"] = PdeFooter.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeFooter_SetData_1(self, data);
};

PdeFooter.prototype["GetData"] = PdeFooter.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeFooter_GetData_0(self), VoidPtr);
};

PdeFooter.prototype["SetAlt"] = PdeFooter.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeFooter_SetAlt_1(self, alt);
};

PdeFooter.prototype["SetActualText"] = PdeFooter.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeFooter_SetActualText_1(self, text);
};

PdeFooter.prototype["GetFlags"] = PdeFooter.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetFlags_0(self);
};

PdeFooter.prototype["SetFlags"] = PdeFooter.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeFooter_SetFlags_1(self, flags);
};

PdeFooter.prototype["GetNumPageObjects"] = PdeFooter.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeFooter_GetNumPageObjects_0(self);
};

PdeFooter.prototype["GetPageObject"] = PdeFooter.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeFooter_GetPageObject_1(self, index), PdsPageObject);
};

PdeFooter.prototype["GetPageMap"] = PdeFooter.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeFooter_GetPageMap_0(self), PdePageMap);
};

PdeFooter.prototype["__destroy__"] = PdeFooter.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeFooter___destroy___0(self);
};

function PdeCell() {
 throw "cannot construct a PdeCell, no constructor in IDL";
}

PdeCell.prototype = Object.create(PdeContainer.prototype);

PdeCell.prototype.constructor = PdeCell;

PdeCell.prototype.__class__ = PdeCell;

PdeCell.__cache__ = {};

Module["PdeCell"] = PdeCell;

PdeCell.prototype["GetRowSpan"] = PdeCell.prototype.GetRowSpan = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetRowSpan_0(self);
};

PdeCell.prototype["GetColSpan"] = PdeCell.prototype.GetColSpan = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetColSpan_0(self);
};

PdeCell.prototype["HasBorderGraphicState"] = PdeCell.prototype.HasBorderGraphicState = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdeCell_HasBorderGraphicState_1(self, index);
};

PdeCell.prototype["GetSpanCell"] = PdeCell.prototype.GetSpanCell = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeCell_GetSpanCell_0(self), PdeCell);
};

PdeCell.prototype["GetType"] = PdeCell.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetType_0(self);
};

PdeCell.prototype["GetBBox"] = PdeCell.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeCell_GetBBox_1(self, bbox);
};

PdeCell.prototype["SetBBox"] = PdeCell.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeCell_SetBBox_1(self, bbox);
};

PdeCell.prototype["GetId"] = PdeCell.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetId_0(self);
};

PdeCell.prototype["GetGraphicState"] = PdeCell.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeCell_GetGraphicState_1(self, g_state);
};

PdeCell.prototype["GetNumChildren"] = PdeCell.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetNumChildren_0(self);
};

PdeCell.prototype["GetChild"] = PdeCell.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeCell_GetChild_1(self, index), PdeElement);
};

PdeCell.prototype["GetAlignment"] = PdeCell.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetAlignment_0(self);
};

PdeCell.prototype["GetAngle"] = PdeCell.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetAngle_0(self);
};

PdeCell.prototype["SetRender"] = PdeCell.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeCell_SetRender_1(self, render);
};

PdeCell.prototype["SetData"] = PdeCell.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeCell_SetData_1(self, data);
};

PdeCell.prototype["GetData"] = PdeCell.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeCell_GetData_0(self), VoidPtr);
};

PdeCell.prototype["SetAlt"] = PdeCell.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeCell_SetAlt_1(self, alt);
};

PdeCell.prototype["SetActualText"] = PdeCell.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeCell_SetActualText_1(self, text);
};

PdeCell.prototype["GetFlags"] = PdeCell.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetFlags_0(self);
};

PdeCell.prototype["SetFlags"] = PdeCell.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeCell_SetFlags_1(self, flags);
};

PdeCell.prototype["GetNumPageObjects"] = PdeCell.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeCell_GetNumPageObjects_0(self);
};

PdeCell.prototype["GetPageObject"] = PdeCell.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeCell_GetPageObject_1(self, index), PdsPageObject);
};

PdeCell.prototype["GetPageMap"] = PdeCell.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeCell_GetPageMap_0(self), PdePageMap);
};

PdeCell.prototype["__destroy__"] = PdeCell.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeCell___destroy___0(self);
};

function PdeTable() {
 throw "cannot construct a PdeTable, no constructor in IDL";
}

PdeTable.prototype = Object.create(PdeContainer.prototype);

PdeTable.prototype.constructor = PdeTable;

PdeTable.prototype.__class__ = PdeTable;

PdeTable.__cache__ = {};

Module["PdeTable"] = PdeTable;

PdeTable.prototype["GetNumRows"] = PdeTable.prototype.GetNumRows = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetNumRows_0(self);
};

PdeTable.prototype["GetNumCols"] = PdeTable.prototype.GetNumCols = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetNumCols_0(self);
};

PdeTable.prototype["GetCell"] = PdeTable.prototype.GetCell = function(row, col) {
 var self = this.ptr;
 if (row && typeof row === "object") row = row.ptr;
 if (col && typeof col === "object") col = col.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetCell_2(self, row, col), PdeCell);
};

PdeTable.prototype["GetRowAlignment"] = PdeTable.prototype.GetRowAlignment = function(row) {
 var self = this.ptr;
 if (row && typeof row === "object") row = row.ptr;
 return _emscripten_bind_PdeTable_GetRowAlignment_1(self, row);
};

PdeTable.prototype["GetColAlignment"] = PdeTable.prototype.GetColAlignment = function(col) {
 var self = this.ptr;
 if (col && typeof col === "object") col = col.ptr;
 return _emscripten_bind_PdeTable_GetColAlignment_1(self, col);
};

PdeTable.prototype["GetCaption"] = PdeTable.prototype.GetCaption = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetCaption_0(self), PdeElement);
};

PdeTable.prototype["GetTableType"] = PdeTable.prototype.GetTableType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetTableType_0(self);
};

PdeTable.prototype["GetType"] = PdeTable.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetType_0(self);
};

PdeTable.prototype["GetBBox"] = PdeTable.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeTable_GetBBox_1(self, bbox);
};

PdeTable.prototype["SetBBox"] = PdeTable.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeTable_SetBBox_1(self, bbox);
};

PdeTable.prototype["GetId"] = PdeTable.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetId_0(self);
};

PdeTable.prototype["GetGraphicState"] = PdeTable.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeTable_GetGraphicState_1(self, g_state);
};

PdeTable.prototype["GetNumChildren"] = PdeTable.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetNumChildren_0(self);
};

PdeTable.prototype["GetChild"] = PdeTable.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetChild_1(self, index), PdeElement);
};

PdeTable.prototype["GetAlignment"] = PdeTable.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetAlignment_0(self);
};

PdeTable.prototype["GetAngle"] = PdeTable.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetAngle_0(self);
};

PdeTable.prototype["SetRender"] = PdeTable.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeTable_SetRender_1(self, render);
};

PdeTable.prototype["SetData"] = PdeTable.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeTable_SetData_1(self, data);
};

PdeTable.prototype["GetData"] = PdeTable.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetData_0(self), VoidPtr);
};

PdeTable.prototype["SetAlt"] = PdeTable.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeTable_SetAlt_1(self, alt);
};

PdeTable.prototype["SetActualText"] = PdeTable.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeTable_SetActualText_1(self, text);
};

PdeTable.prototype["GetFlags"] = PdeTable.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetFlags_0(self);
};

PdeTable.prototype["SetFlags"] = PdeTable.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeTable_SetFlags_1(self, flags);
};

PdeTable.prototype["GetNumPageObjects"] = PdeTable.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTable_GetNumPageObjects_0(self);
};

PdeTable.prototype["GetPageObject"] = PdeTable.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetPageObject_1(self, index), PdsPageObject);
};

PdeTable.prototype["GetPageMap"] = PdeTable.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeTable_GetPageMap_0(self), PdePageMap);
};

PdeTable.prototype["__destroy__"] = PdeTable.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeTable___destroy___0(self);
};

function PdeWord() {
 throw "cannot construct a PdeWord, no constructor in IDL";
}

PdeWord.prototype = Object.create(PdeElement.prototype);

PdeWord.prototype.constructor = PdeWord;

PdeWord.prototype.__class__ = PdeWord;

PdeWord.__cache__ = {};

Module["PdeWord"] = PdeWord;

PdeWord.prototype["GetText"] = PdeWord.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdeWord_GetText_2(self, buffer, len);
};

PdeWord.prototype["HasTextState"] = PdeWord.prototype.HasTextState = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdeWord_HasTextState_0(self);
};

PdeWord.prototype["GetTextState"] = PdeWord.prototype.GetTextState = function(text_state) {
 var self = this.ptr;
 if (text_state && typeof text_state === "object") text_state = text_state.ptr;
 _emscripten_bind_PdeWord_GetTextState_1(self, text_state);
};

PdeWord.prototype["GetNumChars"] = PdeWord.prototype.GetNumChars = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetNumChars_0(self);
};

PdeWord.prototype["GetCharCode"] = PdeWord.prototype.GetCharCode = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdeWord_GetCharCode_1(self, index);
};

PdeWord.prototype["GetCharText"] = PdeWord.prototype.GetCharText = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdeWord_GetCharText_3(self, index, buffer, len);
};

PdeWord.prototype["GetCharTextState"] = PdeWord.prototype.GetCharTextState = function(index, text_state) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (text_state && typeof text_state === "object") text_state = text_state.ptr;
 _emscripten_bind_PdeWord_GetCharTextState_2(self, index, text_state);
};

PdeWord.prototype["GetCharBBox"] = PdeWord.prototype.GetCharBBox = function(index, bbox) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeWord_GetCharBBox_2(self, index, bbox);
};

PdeWord.prototype["GetWordFlags"] = PdeWord.prototype.GetWordFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetWordFlags_0(self);
};

PdeWord.prototype["GetBackground"] = PdeWord.prototype.GetBackground = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeWord_GetBackground_0(self), PdeElement);
};

PdeWord.prototype["GetOrigin"] = PdeWord.prototype.GetOrigin = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 _emscripten_bind_PdeWord_GetOrigin_1(self, point);
};

PdeWord.prototype["GetType"] = PdeWord.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetType_0(self);
};

PdeWord.prototype["GetBBox"] = PdeWord.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeWord_GetBBox_1(self, bbox);
};

PdeWord.prototype["SetBBox"] = PdeWord.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeWord_SetBBox_1(self, bbox);
};

PdeWord.prototype["GetId"] = PdeWord.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetId_0(self);
};

PdeWord.prototype["GetGraphicState"] = PdeWord.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeWord_GetGraphicState_1(self, g_state);
};

PdeWord.prototype["GetNumChildren"] = PdeWord.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetNumChildren_0(self);
};

PdeWord.prototype["GetChild"] = PdeWord.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeWord_GetChild_1(self, index), PdeElement);
};

PdeWord.prototype["GetAlignment"] = PdeWord.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetAlignment_0(self);
};

PdeWord.prototype["GetAngle"] = PdeWord.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetAngle_0(self);
};

PdeWord.prototype["SetRender"] = PdeWord.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeWord_SetRender_1(self, render);
};

PdeWord.prototype["SetData"] = PdeWord.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeWord_SetData_1(self, data);
};

PdeWord.prototype["GetData"] = PdeWord.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeWord_GetData_0(self), VoidPtr);
};

PdeWord.prototype["SetAlt"] = PdeWord.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeWord_SetAlt_1(self, alt);
};

PdeWord.prototype["SetActualText"] = PdeWord.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeWord_SetActualText_1(self, text);
};

PdeWord.prototype["GetFlags"] = PdeWord.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetFlags_0(self);
};

PdeWord.prototype["SetFlags"] = PdeWord.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeWord_SetFlags_1(self, flags);
};

PdeWord.prototype["GetNumPageObjects"] = PdeWord.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeWord_GetNumPageObjects_0(self);
};

PdeWord.prototype["GetPageObject"] = PdeWord.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeWord_GetPageObject_1(self, index), PdsPageObject);
};

PdeWord.prototype["GetPageMap"] = PdeWord.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeWord_GetPageMap_0(self), PdePageMap);
};

PdeWord.prototype["__destroy__"] = PdeWord.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeWord___destroy___0(self);
};

function PdeTextLine() {
 throw "cannot construct a PdeTextLine, no constructor in IDL";
}

PdeTextLine.prototype = Object.create(PdeElement.prototype);

PdeTextLine.prototype.constructor = PdeTextLine;

PdeTextLine.prototype.__class__ = PdeTextLine;

PdeTextLine.__cache__ = {};

Module["PdeTextLine"] = PdeTextLine;

PdeTextLine.prototype["GetText"] = PdeTextLine.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdeTextLine_GetText_2(self, buffer, len);
};

PdeTextLine.prototype["HasTextState"] = PdeTextLine.prototype.HasTextState = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdeTextLine_HasTextState_0(self);
};

PdeTextLine.prototype["GetTextState"] = PdeTextLine.prototype.GetTextState = function(text_state) {
 var self = this.ptr;
 if (text_state && typeof text_state === "object") text_state = text_state.ptr;
 _emscripten_bind_PdeTextLine_GetTextState_1(self, text_state);
};

PdeTextLine.prototype["GetNumWords"] = PdeTextLine.prototype.GetNumWords = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetNumWords_0(self);
};

PdeTextLine.prototype["GetWord"] = PdeTextLine.prototype.GetWord = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeTextLine_GetWord_1(self, index), PdeWord);
};

PdeTextLine.prototype["GetTextLineFlags"] = PdeTextLine.prototype.GetTextLineFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetTextLineFlags_0(self);
};

PdeTextLine.prototype["GetType"] = PdeTextLine.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetType_0(self);
};

PdeTextLine.prototype["GetBBox"] = PdeTextLine.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeTextLine_GetBBox_1(self, bbox);
};

PdeTextLine.prototype["SetBBox"] = PdeTextLine.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeTextLine_SetBBox_1(self, bbox);
};

PdeTextLine.prototype["GetId"] = PdeTextLine.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetId_0(self);
};

PdeTextLine.prototype["GetGraphicState"] = PdeTextLine.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeTextLine_GetGraphicState_1(self, g_state);
};

PdeTextLine.prototype["GetNumChildren"] = PdeTextLine.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetNumChildren_0(self);
};

PdeTextLine.prototype["GetChild"] = PdeTextLine.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeTextLine_GetChild_1(self, index), PdeElement);
};

PdeTextLine.prototype["GetAlignment"] = PdeTextLine.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetAlignment_0(self);
};

PdeTextLine.prototype["GetAngle"] = PdeTextLine.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetAngle_0(self);
};

PdeTextLine.prototype["SetRender"] = PdeTextLine.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeTextLine_SetRender_1(self, render);
};

PdeTextLine.prototype["SetData"] = PdeTextLine.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeTextLine_SetData_1(self, data);
};

PdeTextLine.prototype["GetData"] = PdeTextLine.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeTextLine_GetData_0(self), VoidPtr);
};

PdeTextLine.prototype["SetAlt"] = PdeTextLine.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeTextLine_SetAlt_1(self, alt);
};

PdeTextLine.prototype["SetActualText"] = PdeTextLine.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeTextLine_SetActualText_1(self, text);
};

PdeTextLine.prototype["GetFlags"] = PdeTextLine.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetFlags_0(self);
};

PdeTextLine.prototype["SetFlags"] = PdeTextLine.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeTextLine_SetFlags_1(self, flags);
};

PdeTextLine.prototype["GetNumPageObjects"] = PdeTextLine.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeTextLine_GetNumPageObjects_0(self);
};

PdeTextLine.prototype["GetPageObject"] = PdeTextLine.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeTextLine_GetPageObject_1(self, index), PdsPageObject);
};

PdeTextLine.prototype["GetPageMap"] = PdeTextLine.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeTextLine_GetPageMap_0(self), PdePageMap);
};

PdeTextLine.prototype["__destroy__"] = PdeTextLine.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeTextLine___destroy___0(self);
};

function PdeText() {
 throw "cannot construct a PdeText, no constructor in IDL";
}

PdeText.prototype = Object.create(PdeElement.prototype);

PdeText.prototype.constructor = PdeText;

PdeText.prototype.__class__ = PdeText;

PdeText.__cache__ = {};

Module["PdeText"] = PdeText;

PdeText.prototype["GetText"] = PdeText.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdeText_GetText_2(self, buffer, len);
};

PdeText.prototype["HasTextState"] = PdeText.prototype.HasTextState = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdeText_HasTextState_0(self);
};

PdeText.prototype["GetTextState"] = PdeText.prototype.GetTextState = function(text_state) {
 var self = this.ptr;
 if (text_state && typeof text_state === "object") text_state = text_state.ptr;
 _emscripten_bind_PdeText_GetTextState_1(self, text_state);
};

PdeText.prototype["GetNumTextLines"] = PdeText.prototype.GetNumTextLines = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetNumTextLines_0(self);
};

PdeText.prototype["GetTextLine"] = PdeText.prototype.GetTextLine = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetTextLine_1(self, index), PdeTextLine);
};

PdeText.prototype["GetNumWords"] = PdeText.prototype.GetNumWords = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetNumWords_0(self);
};

PdeText.prototype["GetWord"] = PdeText.prototype.GetWord = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetWord_1(self, index), PdeWord);
};

PdeText.prototype["GetLineSpacing"] = PdeText.prototype.GetLineSpacing = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetLineSpacing_0(self);
};

PdeText.prototype["GetIndent"] = PdeText.prototype.GetIndent = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetIndent_0(self);
};

PdeText.prototype["GetTextStyle"] = PdeText.prototype.GetTextStyle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetTextStyle_0(self);
};

PdeText.prototype["GetTextFlags"] = PdeText.prototype.GetTextFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetTextFlags_0(self);
};

PdeText.prototype["GetLabelLevel"] = PdeText.prototype.GetLabelLevel = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetLabelLevel_0(self);
};

PdeText.prototype["SetLabelLevel"] = PdeText.prototype.SetLabelLevel = function(level) {
 var self = this.ptr;
 if (level && typeof level === "object") level = level.ptr;
 return !!_emscripten_bind_PdeText_SetLabelLevel_1(self, level);
};

PdeText.prototype["GetType"] = PdeText.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetType_0(self);
};

PdeText.prototype["GetBBox"] = PdeText.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdeText_GetBBox_1(self, bbox);
};

PdeText.prototype["SetBBox"] = PdeText.prototype.SetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdeText_SetBBox_1(self, bbox);
};

PdeText.prototype["GetId"] = PdeText.prototype.GetId = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetId_0(self);
};

PdeText.prototype["GetGraphicState"] = PdeText.prototype.GetGraphicState = function(g_state) {
 var self = this.ptr;
 if (g_state && typeof g_state === "object") g_state = g_state.ptr;
 _emscripten_bind_PdeText_GetGraphicState_1(self, g_state);
};

PdeText.prototype["GetNumChildren"] = PdeText.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetNumChildren_0(self);
};

PdeText.prototype["GetChild"] = PdeText.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetChild_1(self, index), PdeElement);
};

PdeText.prototype["GetAlignment"] = PdeText.prototype.GetAlignment = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetAlignment_0(self);
};

PdeText.prototype["GetAngle"] = PdeText.prototype.GetAngle = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetAngle_0(self);
};

PdeText.prototype["SetRender"] = PdeText.prototype.SetRender = function(render) {
 var self = this.ptr;
 if (render && typeof render === "object") render = render.ptr;
 _emscripten_bind_PdeText_SetRender_1(self, render);
};

PdeText.prototype["SetData"] = PdeText.prototype.SetData = function(data) {
 var self = this.ptr;
 if (data && typeof data === "object") data = data.ptr;
 _emscripten_bind_PdeText_SetData_1(self, data);
};

PdeText.prototype["GetData"] = PdeText.prototype.GetData = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetData_0(self), VoidPtr);
};

PdeText.prototype["SetAlt"] = PdeText.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdeText_SetAlt_1(self, alt);
};

PdeText.prototype["SetActualText"] = PdeText.prototype.SetActualText = function(text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return !!_emscripten_bind_PdeText_SetActualText_1(self, text);
};

PdeText.prototype["GetFlags"] = PdeText.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetFlags_0(self);
};

PdeText.prototype["SetFlags"] = PdeText.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdeText_SetFlags_1(self, flags);
};

PdeText.prototype["GetNumPageObjects"] = PdeText.prototype.GetNumPageObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdeText_GetNumPageObjects_0(self);
};

PdeText.prototype["GetPageObject"] = PdeText.prototype.GetPageObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetPageObject_1(self, index), PdsPageObject);
};

PdeText.prototype["GetPageMap"] = PdeText.prototype.GetPageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdeText_GetPageMap_0(self), PdePageMap);
};

PdeText.prototype["__destroy__"] = PdeText.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdeText___destroy___0(self);
};

function PdfAction() {
 throw "cannot construct a PdfAction, no constructor in IDL";
}

PdfAction.prototype = Object.create(WrapperObject.prototype);

PdfAction.prototype.constructor = PdfAction;

PdfAction.prototype.__class__ = PdfAction;

PdfAction.__cache__ = {};

Module["PdfAction"] = PdfAction;

PdfAction.prototype["GetSubtype"] = PdfAction.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfAction_GetSubtype_0(self);
};

PdfAction.prototype["GetJavaScript"] = PdfAction.prototype.GetJavaScript = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfAction_GetJavaScript_2(self, buffer, len);
};

PdfAction.prototype["GetDestFile"] = PdfAction.prototype.GetDestFile = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfAction_GetDestFile_2(self, buffer, len);
};

PdfAction.prototype["GetViewDestination"] = PdfAction.prototype.GetViewDestination = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfAction_GetViewDestination_0(self), PdfViewDestination);
};

PdfAction.prototype["__destroy__"] = PdfAction.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfAction___destroy___0(self);
};

function PdfLinkAnnot() {
 throw "cannot construct a PdfLinkAnnot, no constructor in IDL";
}

PdfLinkAnnot.prototype = Object.create(PdfAnnot.prototype);

PdfLinkAnnot.prototype.constructor = PdfLinkAnnot;

PdfLinkAnnot.prototype.__class__ = PdfLinkAnnot;

PdfLinkAnnot.__cache__ = {};

Module["PdfLinkAnnot"] = PdfLinkAnnot;

PdfLinkAnnot.prototype["GetNumQuads"] = PdfLinkAnnot.prototype.GetNumQuads = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfLinkAnnot_GetNumQuads_0(self);
};

PdfLinkAnnot.prototype["GetQuad"] = PdfLinkAnnot.prototype.GetQuad = function(index, quad) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (quad && typeof quad === "object") quad = quad.ptr;
 _emscripten_bind_PdfLinkAnnot_GetQuad_2(self, index, quad);
};

PdfLinkAnnot.prototype["AddQuad"] = PdfLinkAnnot.prototype.AddQuad = function(quad) {
 var self = this.ptr;
 if (quad && typeof quad === "object") quad = quad.ptr;
 return !!_emscripten_bind_PdfLinkAnnot_AddQuad_1(self, quad);
};

PdfLinkAnnot.prototype["RemoveQuad"] = PdfLinkAnnot.prototype.RemoveQuad = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdfLinkAnnot_RemoveQuad_1(self, index);
};

PdfLinkAnnot.prototype["GetAction"] = PdfLinkAnnot.prototype.GetAction = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfLinkAnnot_GetAction_0(self), PdfAction);
};

PdfLinkAnnot.prototype["GetSubtype"] = PdfLinkAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfLinkAnnot_GetSubtype_0(self);
};

PdfLinkAnnot.prototype["GetFlags"] = PdfLinkAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfLinkAnnot_GetFlags_0(self);
};

PdfLinkAnnot.prototype["GetAppearance"] = PdfLinkAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfLinkAnnot_GetAppearance_1(self, appearance);
};

PdfLinkAnnot.prototype["GetAppearanceXObject"] = PdfLinkAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfLinkAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfLinkAnnot.prototype["SetAppearanceFromXObject"] = PdfLinkAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfLinkAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfLinkAnnot.prototype["GetBBox"] = PdfLinkAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfLinkAnnot_GetBBox_1(self, bbox);
};

PdfLinkAnnot.prototype["PointInAnnot"] = PdfLinkAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfLinkAnnot_PointInAnnot_1(self, point);
};

PdfLinkAnnot.prototype["RectInAnnot"] = PdfLinkAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfLinkAnnot_RectInAnnot_1(self, rect);
};

PdfLinkAnnot.prototype["GetStructObject"] = PdfLinkAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfLinkAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfLinkAnnot.prototype["GetObject"] = PdfLinkAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfLinkAnnot_GetObject_0(self), PdsDictionary);
};

PdfLinkAnnot.prototype["NotifyWillChange"] = PdfLinkAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfLinkAnnot_NotifyWillChange_1(self, key);
};

PdfLinkAnnot.prototype["NotifyDidChange"] = PdfLinkAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfLinkAnnot_NotifyDidChange_2(self, key, err);
};

PdfLinkAnnot.prototype["__destroy__"] = PdfLinkAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfLinkAnnot___destroy___0(self);
};

function PdfTextAnnot() {
 throw "cannot construct a PdfTextAnnot, no constructor in IDL";
}

PdfTextAnnot.prototype = Object.create(PdfMarkupAnnot.prototype);

PdfTextAnnot.prototype.constructor = PdfTextAnnot;

PdfTextAnnot.prototype.__class__ = PdfTextAnnot;

PdfTextAnnot.__cache__ = {};

Module["PdfTextAnnot"] = PdfTextAnnot;

PdfTextAnnot.prototype["GetSubtype"] = PdfTextAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextAnnot_GetSubtype_0(self);
};

PdfTextAnnot.prototype["GetFlags"] = PdfTextAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextAnnot_GetFlags_0(self);
};

PdfTextAnnot.prototype["GetAppearance"] = PdfTextAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfTextAnnot_GetAppearance_1(self, appearance);
};

PdfTextAnnot.prototype["GetAppearanceXObject"] = PdfTextAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfTextAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfTextAnnot.prototype["SetAppearanceFromXObject"] = PdfTextAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfTextAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfTextAnnot.prototype["GetBBox"] = PdfTextAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfTextAnnot_GetBBox_1(self, bbox);
};

PdfTextAnnot.prototype["PointInAnnot"] = PdfTextAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfTextAnnot_PointInAnnot_1(self, point);
};

PdfTextAnnot.prototype["RectInAnnot"] = PdfTextAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfTextAnnot_RectInAnnot_1(self, rect);
};

PdfTextAnnot.prototype["GetStructObject"] = PdfTextAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfTextAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfTextAnnot.prototype["GetObject"] = PdfTextAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfTextAnnot_GetObject_0(self), PdsDictionary);
};

PdfTextAnnot.prototype["NotifyWillChange"] = PdfTextAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfTextAnnot_NotifyWillChange_1(self, key);
};

PdfTextAnnot.prototype["NotifyDidChange"] = PdfTextAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfTextAnnot_NotifyDidChange_2(self, key, err);
};

PdfTextAnnot.prototype["GetContents"] = PdfTextAnnot.prototype.GetContents = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfTextAnnot_GetContents_2(self, buffer, len);
};

PdfTextAnnot.prototype["SetContents"] = PdfTextAnnot.prototype.SetContents = function(contents) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contents == "object") {
  contents = ensureInt8(contents);
 }
 return !!_emscripten_bind_PdfTextAnnot_SetContents_1(self, contents);
};

PdfTextAnnot.prototype["GetAuthor"] = PdfTextAnnot.prototype.GetAuthor = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfTextAnnot_GetAuthor_2(self, buffer, len);
};

PdfTextAnnot.prototype["SetAuthor"] = PdfTextAnnot.prototype.SetAuthor = function(author) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 return !!_emscripten_bind_PdfTextAnnot_SetAuthor_1(self, author);
};

PdfTextAnnot.prototype["GetNumReplies"] = PdfTextAnnot.prototype.GetNumReplies = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextAnnot_GetNumReplies_0(self);
};

PdfTextAnnot.prototype["GetReply"] = PdfTextAnnot.prototype.GetReply = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfTextAnnot_GetReply_1(self, index), PdfAnnot);
};

PdfTextAnnot.prototype["AddReply"] = PdfTextAnnot.prototype.AddReply = function(author, text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return wrapPointer(_emscripten_bind_PdfTextAnnot_AddReply_2(self, author, text), PdfAnnot);
};

PdfTextAnnot.prototype["__destroy__"] = PdfTextAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfTextAnnot___destroy___0(self);
};

function PdfTextMarkupAnnot() {
 throw "cannot construct a PdfTextMarkupAnnot, no constructor in IDL";
}

PdfTextMarkupAnnot.prototype = Object.create(PdfMarkupAnnot.prototype);

PdfTextMarkupAnnot.prototype.constructor = PdfTextMarkupAnnot;

PdfTextMarkupAnnot.prototype.__class__ = PdfTextMarkupAnnot;

PdfTextMarkupAnnot.__cache__ = {};

Module["PdfTextMarkupAnnot"] = PdfTextMarkupAnnot;

PdfTextMarkupAnnot.prototype["GetNumQuads"] = PdfTextMarkupAnnot.prototype.GetNumQuads = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetNumQuads_0(self);
};

PdfTextMarkupAnnot.prototype["GetQuad"] = PdfTextMarkupAnnot.prototype.GetQuad = function(index, quad) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (quad && typeof quad === "object") quad = quad.ptr;
 _emscripten_bind_PdfTextMarkupAnnot_GetQuad_2(self, index, quad);
};

PdfTextMarkupAnnot.prototype["AddQuad"] = PdfTextMarkupAnnot.prototype.AddQuad = function(quad) {
 var self = this.ptr;
 if (quad && typeof quad === "object") quad = quad.ptr;
 return !!_emscripten_bind_PdfTextMarkupAnnot_AddQuad_1(self, quad);
};

PdfTextMarkupAnnot.prototype["RemoveQuad"] = PdfTextMarkupAnnot.prototype.RemoveQuad = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdfTextMarkupAnnot_RemoveQuad_1(self, index);
};

PdfTextMarkupAnnot.prototype["GetSubtype"] = PdfTextMarkupAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetSubtype_0(self);
};

PdfTextMarkupAnnot.prototype["GetFlags"] = PdfTextMarkupAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetFlags_0(self);
};

PdfTextMarkupAnnot.prototype["GetAppearance"] = PdfTextMarkupAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfTextMarkupAnnot_GetAppearance_1(self, appearance);
};

PdfTextMarkupAnnot.prototype["GetAppearanceXObject"] = PdfTextMarkupAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfTextMarkupAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfTextMarkupAnnot.prototype["SetAppearanceFromXObject"] = PdfTextMarkupAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfTextMarkupAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfTextMarkupAnnot.prototype["GetBBox"] = PdfTextMarkupAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfTextMarkupAnnot_GetBBox_1(self, bbox);
};

PdfTextMarkupAnnot.prototype["PointInAnnot"] = PdfTextMarkupAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfTextMarkupAnnot_PointInAnnot_1(self, point);
};

PdfTextMarkupAnnot.prototype["RectInAnnot"] = PdfTextMarkupAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfTextMarkupAnnot_RectInAnnot_1(self, rect);
};

PdfTextMarkupAnnot.prototype["GetStructObject"] = PdfTextMarkupAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfTextMarkupAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfTextMarkupAnnot.prototype["GetObject"] = PdfTextMarkupAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfTextMarkupAnnot_GetObject_0(self), PdsDictionary);
};

PdfTextMarkupAnnot.prototype["NotifyWillChange"] = PdfTextMarkupAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfTextMarkupAnnot_NotifyWillChange_1(self, key);
};

PdfTextMarkupAnnot.prototype["NotifyDidChange"] = PdfTextMarkupAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfTextMarkupAnnot_NotifyDidChange_2(self, key, err);
};

PdfTextMarkupAnnot.prototype["GetContents"] = PdfTextMarkupAnnot.prototype.GetContents = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetContents_2(self, buffer, len);
};

PdfTextMarkupAnnot.prototype["SetContents"] = PdfTextMarkupAnnot.prototype.SetContents = function(contents) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contents == "object") {
  contents = ensureInt8(contents);
 }
 return !!_emscripten_bind_PdfTextMarkupAnnot_SetContents_1(self, contents);
};

PdfTextMarkupAnnot.prototype["GetAuthor"] = PdfTextMarkupAnnot.prototype.GetAuthor = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetAuthor_2(self, buffer, len);
};

PdfTextMarkupAnnot.prototype["SetAuthor"] = PdfTextMarkupAnnot.prototype.SetAuthor = function(author) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 return !!_emscripten_bind_PdfTextMarkupAnnot_SetAuthor_1(self, author);
};

PdfTextMarkupAnnot.prototype["GetNumReplies"] = PdfTextMarkupAnnot.prototype.GetNumReplies = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfTextMarkupAnnot_GetNumReplies_0(self);
};

PdfTextMarkupAnnot.prototype["GetReply"] = PdfTextMarkupAnnot.prototype.GetReply = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfTextMarkupAnnot_GetReply_1(self, index), PdfAnnot);
};

PdfTextMarkupAnnot.prototype["AddReply"] = PdfTextMarkupAnnot.prototype.AddReply = function(author, text) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof author == "object") {
  author = ensureInt8(author);
 }
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 return wrapPointer(_emscripten_bind_PdfTextMarkupAnnot_AddReply_2(self, author, text), PdfAnnot);
};

PdfTextMarkupAnnot.prototype["__destroy__"] = PdfTextMarkupAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfTextMarkupAnnot___destroy___0(self);
};

function PdfWidgetAnnot() {
 throw "cannot construct a PdfWidgetAnnot, no constructor in IDL";
}

PdfWidgetAnnot.prototype = Object.create(PdfAnnot.prototype);

PdfWidgetAnnot.prototype.constructor = PdfWidgetAnnot;

PdfWidgetAnnot.prototype.__class__ = PdfWidgetAnnot;

PdfWidgetAnnot.__cache__ = {};

Module["PdfWidgetAnnot"] = PdfWidgetAnnot;

PdfWidgetAnnot.prototype["GetCaption"] = PdfWidgetAnnot.prototype.GetCaption = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfWidgetAnnot_GetCaption_2(self, buffer, len);
};

PdfWidgetAnnot.prototype["GetFontName"] = PdfWidgetAnnot.prototype.GetFontName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfWidgetAnnot_GetFontName_2(self, buffer, len);
};

PdfWidgetAnnot.prototype["GetAction"] = PdfWidgetAnnot.prototype.GetAction = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetAction_0(self), PdfAction);
};

PdfWidgetAnnot.prototype["GetAAction"] = PdfWidgetAnnot.prototype.GetAAction = function(event) {
 var self = this.ptr;
 if (event && typeof event === "object") event = event.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetAAction_1(self, event), PdfAction);
};

PdfWidgetAnnot.prototype["GetFormField"] = PdfWidgetAnnot.prototype.GetFormField = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetFormField_0(self), PdfFormField);
};

PdfWidgetAnnot.prototype["GetSubtype"] = PdfWidgetAnnot.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWidgetAnnot_GetSubtype_0(self);
};

PdfWidgetAnnot.prototype["GetFlags"] = PdfWidgetAnnot.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfWidgetAnnot_GetFlags_0(self);
};

PdfWidgetAnnot.prototype["GetAppearance"] = PdfWidgetAnnot.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfWidgetAnnot_GetAppearance_1(self, appearance);
};

PdfWidgetAnnot.prototype["GetAppearanceXObject"] = PdfWidgetAnnot.prototype.GetAppearanceXObject = function(mode) {
 var self = this.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetAppearanceXObject_1(self, mode), PdsStream);
};

PdfWidgetAnnot.prototype["SetAppearanceFromXObject"] = PdfWidgetAnnot.prototype.SetAppearanceFromXObject = function(xobj, mode) {
 var self = this.ptr;
 if (xobj && typeof xobj === "object") xobj = xobj.ptr;
 if (mode && typeof mode === "object") mode = mode.ptr;
 return !!_emscripten_bind_PdfWidgetAnnot_SetAppearanceFromXObject_2(self, xobj, mode);
};

PdfWidgetAnnot.prototype["GetBBox"] = PdfWidgetAnnot.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfWidgetAnnot_GetBBox_1(self, bbox);
};

PdfWidgetAnnot.prototype["PointInAnnot"] = PdfWidgetAnnot.prototype.PointInAnnot = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return !!_emscripten_bind_PdfWidgetAnnot_PointInAnnot_1(self, point);
};

PdfWidgetAnnot.prototype["RectInAnnot"] = PdfWidgetAnnot.prototype.RectInAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return !!_emscripten_bind_PdfWidgetAnnot_RectInAnnot_1(self, rect);
};

PdfWidgetAnnot.prototype["GetStructObject"] = PdfWidgetAnnot.prototype.GetStructObject = function(struct_parent) {
 var self = this.ptr;
 if (struct_parent && typeof struct_parent === "object") struct_parent = struct_parent.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetStructObject_1(self, struct_parent), PdsObject);
};

PdfWidgetAnnot.prototype["GetObject"] = PdfWidgetAnnot.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfWidgetAnnot_GetObject_0(self), PdsDictionary);
};

PdfWidgetAnnot.prototype["NotifyWillChange"] = PdfWidgetAnnot.prototype.NotifyWillChange = function(key) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 _emscripten_bind_PdfWidgetAnnot_NotifyWillChange_1(self, key);
};

PdfWidgetAnnot.prototype["NotifyDidChange"] = PdfWidgetAnnot.prototype.NotifyDidChange = function(key, err) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (err && typeof err === "object") err = err.ptr;
 _emscripten_bind_PdfWidgetAnnot_NotifyDidChange_2(self, key, err);
};

PdfWidgetAnnot.prototype["__destroy__"] = PdfWidgetAnnot.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfWidgetAnnot___destroy___0(self);
};

function PdfViewDestination() {
 throw "cannot construct a PdfViewDestination, no constructor in IDL";
}

PdfViewDestination.prototype = Object.create(WrapperObject.prototype);

PdfViewDestination.prototype.constructor = PdfViewDestination;

PdfViewDestination.prototype.__class__ = PdfViewDestination;

PdfViewDestination.__cache__ = {};

Module["PdfViewDestination"] = PdfViewDestination;

PdfViewDestination.prototype["GetPageNum"] = PdfViewDestination.prototype.GetPageNum = function(doc) {
 var self = this.ptr;
 if (doc && typeof doc === "object") doc = doc.ptr;
 return _emscripten_bind_PdfViewDestination_GetPageNum_1(self, doc);
};

PdfViewDestination.prototype["GetFitType"] = PdfViewDestination.prototype.GetFitType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfViewDestination_GetFitType_0(self);
};

PdfViewDestination.prototype["GetBBox"] = PdfViewDestination.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdfViewDestination_GetBBox_1(self, bbox);
};

PdfViewDestination.prototype["GetZoom"] = PdfViewDestination.prototype.GetZoom = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfViewDestination_GetZoom_0(self);
};

PdfViewDestination.prototype["GetObject"] = PdfViewDestination.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfViewDestination_GetObject_0(self), PdsArray);
};

PdfViewDestination.prototype["__destroy__"] = PdfViewDestination.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfViewDestination___destroy___0(self);
};

function PdfDigSig() {
 throw "cannot construct a PdfDigSig, no constructor in IDL";
}

PdfDigSig.prototype = Object.create(PdfBaseDigSig.prototype);

PdfDigSig.prototype.constructor = PdfDigSig;

PdfDigSig.prototype.__class__ = PdfDigSig;

PdfDigSig.__cache__ = {};

Module["PdfDigSig"] = PdfDigSig;

PdfDigSig.prototype["SetPfxFile"] = PdfDigSig.prototype.SetPfxFile = function(pfx_file, pfx_password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof pfx_file == "object") {
  pfx_file = ensureInt8(pfx_file);
 }
 if (typeof pfx_password == "object") {
  pfx_password = ensureInt8(pfx_password);
 }
 return !!_emscripten_bind_PdfDigSig_SetPfxFile_2(self, pfx_file, pfx_password);
};

PdfDigSig.prototype["Destroy"] = PdfDigSig.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDigSig_Destroy_0(self);
};

PdfDigSig.prototype["SetReason"] = PdfDigSig.prototype.SetReason = function(reason) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof reason == "object") {
  reason = ensureInt8(reason);
 }
 return !!_emscripten_bind_PdfDigSig_SetReason_1(self, reason);
};

PdfDigSig.prototype["SetLocation"] = PdfDigSig.prototype.SetLocation = function(location) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof location == "object") {
  location = ensureInt8(location);
 }
 return !!_emscripten_bind_PdfDigSig_SetLocation_1(self, location);
};

PdfDigSig.prototype["SetContactInfo"] = PdfDigSig.prototype.SetContactInfo = function(contact) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contact == "object") {
  contact = ensureInt8(contact);
 }
 return !!_emscripten_bind_PdfDigSig_SetContactInfo_1(self, contact);
};

PdfDigSig.prototype["SetName"] = PdfDigSig.prototype.SetName = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return !!_emscripten_bind_PdfDigSig_SetName_1(self, name);
};

PdfDigSig.prototype["SetTimeStampServer"] = PdfDigSig.prototype.SetTimeStampServer = function(url, user_name, password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof url == "object") {
  url = ensureInt8(url);
 }
 if (typeof user_name == "object") {
  user_name = ensureInt8(user_name);
 }
 if (typeof password == "object") {
  password = ensureInt8(password);
 }
 return !!_emscripten_bind_PdfDigSig_SetTimeStampServer_3(self, url, user_name, password);
};

PdfDigSig.prototype["SignDoc"] = PdfDigSig.prototype.SignDoc = function(doc, path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (doc && typeof doc === "object") doc = doc.ptr;
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfDigSig_SignDoc_2(self, doc, path);
};

PdfDigSig.prototype["__destroy__"] = PdfDigSig.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDigSig___destroy___0(self);
};

function PdfCustomDigSig() {
 throw "cannot construct a PdfCustomDigSig, no constructor in IDL";
}

PdfCustomDigSig.prototype = Object.create(PdfBaseDigSig.prototype);

PdfCustomDigSig.prototype.constructor = PdfCustomDigSig;

PdfCustomDigSig.prototype.__class__ = PdfCustomDigSig;

PdfCustomDigSig.__cache__ = {};

Module["PdfCustomDigSig"] = PdfCustomDigSig;

PdfCustomDigSig.prototype["RegisterDigestDataProc"] = PdfCustomDigSig.prototype.RegisterDigestDataProc = function(proc, data) {
 var self = this.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 if (data && typeof data === "object") data = data.ptr;
 return !!_emscripten_bind_PdfCustomDigSig_RegisterDigestDataProc_2(self, proc, data);
};

PdfCustomDigSig.prototype["Destroy"] = PdfCustomDigSig.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PdfCustomDigSig_Destroy_0(self);
};

PdfCustomDigSig.prototype["SetReason"] = PdfCustomDigSig.prototype.SetReason = function(reason) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof reason == "object") {
  reason = ensureInt8(reason);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SetReason_1(self, reason);
};

PdfCustomDigSig.prototype["SetLocation"] = PdfCustomDigSig.prototype.SetLocation = function(location) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof location == "object") {
  location = ensureInt8(location);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SetLocation_1(self, location);
};

PdfCustomDigSig.prototype["SetContactInfo"] = PdfCustomDigSig.prototype.SetContactInfo = function(contact) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof contact == "object") {
  contact = ensureInt8(contact);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SetContactInfo_1(self, contact);
};

PdfCustomDigSig.prototype["SetName"] = PdfCustomDigSig.prototype.SetName = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SetName_1(self, name);
};

PdfCustomDigSig.prototype["SetTimeStampServer"] = PdfCustomDigSig.prototype.SetTimeStampServer = function(url, user_name, password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof url == "object") {
  url = ensureInt8(url);
 }
 if (typeof user_name == "object") {
  user_name = ensureInt8(user_name);
 }
 if (typeof password == "object") {
  password = ensureInt8(password);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SetTimeStampServer_3(self, url, user_name, password);
};

PdfCustomDigSig.prototype["SignDoc"] = PdfCustomDigSig.prototype.SignDoc = function(doc, path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (doc && typeof doc === "object") doc = doc.ptr;
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfCustomDigSig_SignDoc_2(self, doc, path);
};

PdfCustomDigSig.prototype["__destroy__"] = PdfCustomDigSig.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfCustomDigSig___destroy___0(self);
};

function PdfDoc() {
 throw "cannot construct a PdfDoc, no constructor in IDL";
}

PdfDoc.prototype = Object.create(WrapperObject.prototype);

PdfDoc.prototype.constructor = PdfDoc;

PdfDoc.prototype.__class__ = PdfDoc;

PdfDoc.__cache__ = {};

Module["PdfDoc"] = PdfDoc;

PdfDoc.prototype["Save"] = PdfDoc.prototype.Save = function(path, save_flags) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (save_flags && typeof save_flags === "object") save_flags = save_flags.ptr;
 return !!_emscripten_bind_PdfDoc_Save_2(self, path, save_flags);
};

PdfDoc.prototype["SaveToStream"] = PdfDoc.prototype.SaveToStream = function(stream, flags) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdfDoc_SaveToStream_2(self, stream, flags);
};

PdfDoc.prototype["Close"] = PdfDoc.prototype.Close = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfDoc_Close_0(self);
};

PdfDoc.prototype["AddWatermarkFromImage"] = PdfDoc.prototype.AddWatermarkFromImage = function(params, image_obj) {
 var self = this.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (image_obj && typeof image_obj === "object") image_obj = image_obj.ptr;
 return !!_emscripten_bind_PdfDoc_AddWatermarkFromImage_2(self, params, image_obj);
};

PdfDoc.prototype["GetNumPages"] = PdfDoc.prototype.GetNumPages = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDoc_GetNumPages_0(self);
};

PdfDoc.prototype["AcquirePage"] = PdfDoc.prototype.AcquirePage = function(page_num) {
 var self = this.ptr;
 if (page_num && typeof page_num === "object") page_num = page_num.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_AcquirePage_1(self, page_num), PdfPage);
};

PdfDoc.prototype["CreatePage"] = PdfDoc.prototype.CreatePage = function(index, media_box) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (media_box && typeof media_box === "object") media_box = media_box.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreatePage_2(self, index, media_box), PdfPage);
};

PdfDoc.prototype["DeletePages"] = PdfDoc.prototype.DeletePages = function(index_from, index_to, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (index_from && typeof index_from === "object") index_from = index_from.ptr;
 if (index_to && typeof index_to === "object") index_to = index_to.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_DeletePages_4(self, index_from, index_to, cancel_proc, cancel_data);
};

PdfDoc.prototype["InsertPages"] = PdfDoc.prototype.InsertPages = function(index, doc, index_from, index_to, insert_flags, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (doc && typeof doc === "object") doc = doc.ptr;
 if (index_from && typeof index_from === "object") index_from = index_from.ptr;
 if (index_to && typeof index_to === "object") index_to = index_to.ptr;
 if (insert_flags && typeof insert_flags === "object") insert_flags = insert_flags.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_InsertPages_7(self, index, doc, index_from, index_to, insert_flags, cancel_proc, cancel_data);
};

PdfDoc.prototype["MovePage"] = PdfDoc.prototype.MovePage = function(index_to, index_from) {
 var self = this.ptr;
 if (index_to && typeof index_to === "object") index_to = index_to.ptr;
 if (index_from && typeof index_from === "object") index_from = index_from.ptr;
 return !!_emscripten_bind_PdfDoc_MovePage_2(self, index_to, index_from);
};

PdfDoc.prototype["GetNumDocumentJavaScripts"] = PdfDoc.prototype.GetNumDocumentJavaScripts = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDoc_GetNumDocumentJavaScripts_0(self);
};

PdfDoc.prototype["GetDocumentJavaScript"] = PdfDoc.prototype.GetDocumentJavaScript = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfDoc_GetDocumentJavaScript_3(self, index, buffer, len);
};

PdfDoc.prototype["GetDocumentJavaScriptName"] = PdfDoc.prototype.GetDocumentJavaScriptName = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfDoc_GetDocumentJavaScriptName_3(self, index, buffer, len);
};

PdfDoc.prototype["GetNumCalculatedFormFields"] = PdfDoc.prototype.GetNumCalculatedFormFields = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDoc_GetNumCalculatedFormFields_0(self);
};

PdfDoc.prototype["GetCalculatedFormField"] = PdfDoc.prototype.GetCalculatedFormField = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetCalculatedFormField_1(self, index), PdfFormField);
};

PdfDoc.prototype["GetNumFormFields"] = PdfDoc.prototype.GetNumFormFields = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDoc_GetNumFormFields_0(self);
};

PdfDoc.prototype["GetFormField"] = PdfDoc.prototype.GetFormField = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetFormField_1(self, index), PdfFormField);
};

PdfDoc.prototype["GetFormFieldByName"] = PdfDoc.prototype.GetFormFieldByName = function(buffer) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 return wrapPointer(_emscripten_bind_PdfDoc_GetFormFieldByName_1(self, buffer), PdfFormField);
};

PdfDoc.prototype["GetInfo"] = PdfDoc.prototype.GetInfo = function(key, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfDoc_GetInfo_3(self, key, buffer, len);
};

PdfDoc.prototype["SetInfo"] = PdfDoc.prototype.SetInfo = function(key, info) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof key == "object") {
  key = ensureInt8(key);
 }
 if (typeof info == "object") {
  info = ensureInt8(info);
 }
 return !!_emscripten_bind_PdfDoc_SetInfo_2(self, key, info);
};

PdfDoc.prototype["GetBookmarkRoot"] = PdfDoc.prototype.GetBookmarkRoot = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetBookmarkRoot_0(self), PdfBookmark);
};

PdfDoc.prototype["FlattenAnnots"] = PdfDoc.prototype.FlattenAnnots = function(params) {
 var self = this.ptr;
 if (params && typeof params === "object") params = params.ptr;
 return !!_emscripten_bind_PdfDoc_FlattenAnnots_1(self, params);
};

PdfDoc.prototype["ApplyRedaction"] = PdfDoc.prototype.ApplyRedaction = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfDoc_ApplyRedaction_0(self);
};

PdfDoc.prototype["GetNumAlternates"] = PdfDoc.prototype.GetNumAlternates = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfDoc_GetNumAlternates_0(self);
};

PdfDoc.prototype["AcquireAlternate"] = PdfDoc.prototype.AcquireAlternate = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_AcquireAlternate_1(self, index), PdfAlternate);
};

PdfDoc.prototype["CreatePdsObject"] = PdfDoc.prototype.CreatePdsObject = function(type, indirect) {
 var self = this.ptr;
 if (type && typeof type === "object") type = type.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreatePdsObject_2(self, type, indirect), PdsObject);
};

PdfDoc.prototype["AddTags"] = PdfDoc.prototype.AddTags = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_AddTags_2(self, cancel_proc, cancel_data);
};

PdfDoc.prototype["RemoveTags"] = PdfDoc.prototype.RemoveTags = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_RemoveTags_2(self, cancel_proc, cancel_data);
};

PdfDoc.prototype["GetTemplate"] = PdfDoc.prototype.GetTemplate = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetTemplate_0(self), PdfDocTemplate);
};

PdfDoc.prototype["GetMetadata"] = PdfDoc.prototype.GetMetadata = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetMetadata_0(self), PsMetadata);
};

PdfDoc.prototype["GetLang"] = PdfDoc.prototype.GetLang = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfDoc_GetLang_2(self, buffer, len);
};

PdfDoc.prototype["SetLang"] = PdfDoc.prototype.SetLang = function(lang) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof lang == "object") {
  lang = ensureInt8(lang);
 }
 return !!_emscripten_bind_PdfDoc_SetLang_1(self, lang);
};

PdfDoc.prototype["EmbedFonts"] = PdfDoc.prototype.EmbedFonts = function(subset, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (subset && typeof subset === "object") subset = subset.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_EmbedFonts_3(self, subset, cancel_proc, cancel_data);
};

PdfDoc.prototype["MakeAccessible"] = PdfDoc.prototype.MakeAccessible = function(params, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_MakeAccessible_3(self, params, cancel_proc, cancel_data);
};

PdfDoc.prototype["GetTrailerObject"] = PdfDoc.prototype.GetTrailerObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetTrailerObject_0(self), PdsDictionary);
};

PdfDoc.prototype["GetRootObject"] = PdfDoc.prototype.GetRootObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetRootObject_0(self), PdsDictionary);
};

PdfDoc.prototype["GetInfoObject"] = PdfDoc.prototype.GetInfoObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetInfoObject_0(self), PdsDictionary);
};

PdfDoc.prototype["CreateDictObject"] = PdfDoc.prototype.CreateDictObject = function(indirect) {
 var self = this.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateDictObject_1(self, indirect), PdsDictionary);
};

PdfDoc.prototype["CreateArrayObject"] = PdfDoc.prototype.CreateArrayObject = function(indirect) {
 var self = this.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateArrayObject_1(self, indirect), PdsArray);
};

PdfDoc.prototype["CreateNameObject"] = PdfDoc.prototype.CreateNameObject = function(indirect, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 return wrapPointer(_emscripten_bind_PdfDoc_CreateNameObject_2(self, indirect, value), PdsName);
};

PdfDoc.prototype["CreateStringObject"] = PdfDoc.prototype.CreateStringObject = function(indirect, value, hex) {
 var self = this.ptr;
 ensureCache.prepare();
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 if (hex && typeof hex === "object") hex = hex.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateStringObject_3(self, indirect, value, hex), PdsString);
};

PdfDoc.prototype["CreateIntObject"] = PdfDoc.prototype.CreateIntObject = function(indirect, value) {
 var self = this.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 if (value && typeof value === "object") value = value.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateIntObject_2(self, indirect, value), PdsNumber);
};

PdfDoc.prototype["CreateNumberObject"] = PdfDoc.prototype.CreateNumberObject = function(indirect, value) {
 var self = this.ptr;
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 if (value && typeof value === "object") value = value.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateNumberObject_2(self, indirect, value), PdsNumber);
};

PdfDoc.prototype["CreateStreamObject"] = PdfDoc.prototype.CreateStreamObject = function(indirect, dict, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (indirect && typeof indirect === "object") indirect = indirect.ptr;
 if (dict && typeof dict === "object") dict = dict.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateStreamObject_4(self, indirect, dict, buffer, size), PdsStream);
};

PdfDoc.prototype["CreateXObjectFromImage"] = PdfDoc.prototype.CreateXObjectFromImage = function(image_data, format) {
 var self = this.ptr;
 if (image_data && typeof image_data === "object") image_data = image_data.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateXObjectFromImage_2(self, image_data, format), PdsStream);
};

PdfDoc.prototype["GetObjectById"] = PdfDoc.prototype.GetObjectById = function(obj_id) {
 var self = this.ptr;
 if (obj_id && typeof obj_id === "object") obj_id = obj_id.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetObjectById_1(self, obj_id), PdsObject);
};

PdfDoc.prototype["CreateStructTree"] = PdfDoc.prototype.CreateStructTree = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_CreateStructTree_0(self), PdsStructTree);
};

PdfDoc.prototype["GetStructTree"] = PdfDoc.prototype.GetStructTree = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetStructTree_0(self), PdsStructTree);
};

PdfDoc.prototype["RemoveStructTree"] = PdfDoc.prototype.RemoveStructTree = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDoc_RemoveStructTree_0(self);
};

PdfDoc.prototype["RemoveBookmarks"] = PdfDoc.prototype.RemoveBookmarks = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDoc_RemoveBookmarks_0(self);
};

PdfDoc.prototype["CreateBookmarks"] = PdfDoc.prototype.CreateBookmarks = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_CreateBookmarks_2(self, cancel_proc, cancel_data);
};

PdfDoc.prototype["AddFontMissingUnicode"] = PdfDoc.prototype.AddFontMissingUnicode = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDoc_AddFontMissingUnicode_2(self, cancel_proc, cancel_data);
};

PdfDoc.prototype["GetNameTree"] = PdfDoc.prototype.GetNameTree = function(name, create) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 if (create && typeof create === "object") create = create.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetNameTree_2(self, name, create), PdfNameTree);
};

PdfDoc.prototype["RemoveNameTree"] = PdfDoc.prototype.RemoveNameTree = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 _emscripten_bind_PdfDoc_RemoveNameTree_1(self, name);
};

PdfDoc.prototype["GetPageNumFromObject"] = PdfDoc.prototype.GetPageNumFromObject = function(page_dict) {
 var self = this.ptr;
 if (page_dict && typeof page_dict === "object") page_dict = page_dict.ptr;
 return _emscripten_bind_PdfDoc_GetPageNumFromObject_1(self, page_dict);
};

PdfDoc.prototype["GetAnnotFromObject"] = PdfDoc.prototype.GetAnnotFromObject = function(annot_dict) {
 var self = this.ptr;
 if (annot_dict && typeof annot_dict === "object") annot_dict = annot_dict.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetAnnotFromObject_1(self, annot_dict), PdfAnnot);
};

PdfDoc.prototype["GetActionFromObject"] = PdfDoc.prototype.GetActionFromObject = function(action_obj) {
 var self = this.ptr;
 if (action_obj && typeof action_obj === "object") action_obj = action_obj.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetActionFromObject_1(self, action_obj), PdfAction);
};

PdfDoc.prototype["GetViewDestinationFromObject"] = PdfDoc.prototype.GetViewDestinationFromObject = function(dest_obj) {
 var self = this.ptr;
 if (dest_obj && typeof dest_obj === "object") dest_obj = dest_obj.ptr;
 return wrapPointer(_emscripten_bind_PdfDoc_GetViewDestinationFromObject_1(self, dest_obj), PdfViewDestination);
};

PdfDoc.prototype["__destroy__"] = PdfDoc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDoc___destroy___0(self);
};

function PdfDocTemplate() {
 throw "cannot construct a PdfDocTemplate, no constructor in IDL";
}

PdfDocTemplate.prototype = Object.create(WrapperObject.prototype);

PdfDocTemplate.prototype.constructor = PdfDocTemplate;

PdfDocTemplate.prototype.__class__ = PdfDocTemplate;

PdfDocTemplate.__cache__ = {};

Module["PdfDocTemplate"] = PdfDocTemplate;

PdfDocTemplate.prototype["Update"] = PdfDocTemplate.prototype.Update = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDocTemplate_Update_2(self, cancel_proc, cancel_data);
};

PdfDocTemplate.prototype["LoadFromStream"] = PdfDocTemplate.prototype.LoadFromStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PdfDocTemplate_LoadFromStream_2(self, stream, format);
};

PdfDocTemplate.prototype["SaveToStream"] = PdfDocTemplate.prototype.SaveToStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PdfDocTemplate_SaveToStream_2(self, stream, format);
};

PdfDocTemplate.prototype["SetDefaults"] = PdfDocTemplate.prototype.SetDefaults = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfDocTemplate_SetDefaults_0(self);
};

PdfDocTemplate.prototype["GetProperty"] = PdfDocTemplate.prototype.GetProperty = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return _emscripten_bind_PdfDocTemplate_GetProperty_1(self, name);
};

PdfDocTemplate.prototype["SetProperty"] = PdfDocTemplate.prototype.SetProperty = function(name, value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 if (value && typeof value === "object") value = value.ptr;
 return !!_emscripten_bind_PdfDocTemplate_SetProperty_2(self, name, value);
};

PdfDocTemplate.prototype["GetRegex"] = PdfDocTemplate.prototype.GetRegex = function(name, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfDocTemplate_GetRegex_3(self, name, buffer, len);
};

PdfDocTemplate.prototype["SetRegex"] = PdfDocTemplate.prototype.SetRegex = function(name, pattern) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 if (typeof pattern == "object") {
  pattern = ensureInt8(pattern);
 }
 return !!_emscripten_bind_PdfDocTemplate_SetRegex_2(self, name, pattern);
};

PdfDocTemplate.prototype["AddPage"] = PdfDocTemplate.prototype.AddPage = function(page_num, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (page_num && typeof page_num === "object") page_num = page_num.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfDocTemplate_AddPage_3(self, page_num, cancel_proc, cancel_data);
};

PdfDocTemplate.prototype["GetPageTemplate"] = PdfDocTemplate.prototype.GetPageTemplate = function(page_num) {
 var self = this.ptr;
 if (page_num && typeof page_num === "object") page_num = page_num.ptr;
 return wrapPointer(_emscripten_bind_PdfDocTemplate_GetPageTemplate_1(self, page_num), PdfPageTemplate);
};

PdfDocTemplate.prototype["__destroy__"] = PdfDocTemplate.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfDocTemplate___destroy___0(self);
};

function PdfPageTemplate() {
 throw "cannot construct a PdfPageTemplate, no constructor in IDL";
}

PdfPageTemplate.prototype = Object.create(WrapperObject.prototype);

PdfPageTemplate.prototype.constructor = PdfPageTemplate;

PdfPageTemplate.prototype.__class__ = PdfPageTemplate;

PdfPageTemplate.__cache__ = {};

Module["PdfPageTemplate"] = PdfPageTemplate;

PdfPageTemplate.prototype["GetPageNum"] = PdfPageTemplate.prototype.GetPageNum = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageTemplate_GetPageNum_0(self);
};

PdfPageTemplate.prototype["GetLogicalRotate"] = PdfPageTemplate.prototype.GetLogicalRotate = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageTemplate_GetLogicalRotate_0(self);
};

PdfPageTemplate.prototype["GetNumColumns"] = PdfPageTemplate.prototype.GetNumColumns = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageTemplate_GetNumColumns_0(self);
};

PdfPageTemplate.prototype["GetHeaderBBox"] = PdfPageTemplate.prototype.GetHeaderBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdfPageTemplate_GetHeaderBBox_1(self, bbox);
};

PdfPageTemplate.prototype["GetFooterBBox"] = PdfPageTemplate.prototype.GetFooterBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdfPageTemplate_GetFooterBBox_1(self, bbox);
};

PdfPageTemplate.prototype["__destroy__"] = PdfPageTemplate.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPageTemplate___destroy___0(self);
};

function PdfHtmlAlternate() {
 throw "cannot construct a PdfHtmlAlternate, no constructor in IDL";
}

PdfHtmlAlternate.prototype = Object.create(PdfAlternate.prototype);

PdfHtmlAlternate.prototype.constructor = PdfHtmlAlternate;

PdfHtmlAlternate.prototype.__class__ = PdfHtmlAlternate;

PdfHtmlAlternate.__cache__ = {};

Module["PdfHtmlAlternate"] = PdfHtmlAlternate;

PdfHtmlAlternate.prototype["SaveResource"] = PdfHtmlAlternate.prototype.SaveResource = function(resource_name, path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof resource_name == "object") {
  resource_name = ensureInt8(resource_name);
 }
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfHtmlAlternate_SaveResource_2(self, resource_name, path);
};

PdfHtmlAlternate.prototype["GetSubtype"] = PdfHtmlAlternate.prototype.GetSubtype = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfHtmlAlternate_GetSubtype_0(self);
};

PdfHtmlAlternate.prototype["GetName"] = PdfHtmlAlternate.prototype.GetName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfHtmlAlternate_GetName_2(self, buffer, len);
};

PdfHtmlAlternate.prototype["GetDescription"] = PdfHtmlAlternate.prototype.GetDescription = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfHtmlAlternate_GetDescription_2(self, buffer, len);
};

PdfHtmlAlternate.prototype["GetFileName"] = PdfHtmlAlternate.prototype.GetFileName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfHtmlAlternate_GetFileName_2(self, buffer, len);
};

PdfHtmlAlternate.prototype["SaveContent"] = PdfHtmlAlternate.prototype.SaveContent = function(path) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 return !!_emscripten_bind_PdfHtmlAlternate_SaveContent_1(self, path);
};

PdfHtmlAlternate.prototype["Release"] = PdfHtmlAlternate.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdfHtmlAlternate_Release_0(self);
};

PdfHtmlAlternate.prototype["__destroy__"] = PdfHtmlAlternate.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfHtmlAlternate___destroy___0(self);
};

function PdfFont() {
 throw "cannot construct a PdfFont, no constructor in IDL";
}

PdfFont.prototype = Object.create(WrapperObject.prototype);

PdfFont.prototype.constructor = PdfFont;

PdfFont.prototype.__class__ = PdfFont;

PdfFont.__cache__ = {};

Module["PdfFont"] = PdfFont;

PdfFont.prototype["GetFontName"] = PdfFont.prototype.GetFontName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFont_GetFontName_2(self, buffer, len);
};

PdfFont.prototype["GetFaceName"] = PdfFont.prototype.GetFaceName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFont_GetFaceName_2(self, buffer, len);
};

PdfFont.prototype["GetFontState"] = PdfFont.prototype.GetFontState = function(font_state) {
 var self = this.ptr;
 if (font_state && typeof font_state === "object") font_state = font_state.ptr;
 _emscripten_bind_PdfFont_GetFontState_1(self, font_state);
};

PdfFont.prototype["GetSystemFontName"] = PdfFont.prototype.GetSystemFontName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFont_GetSystemFontName_2(self, buffer, len);
};

PdfFont.prototype["GetSystemFontCharset"] = PdfFont.prototype.GetSystemFontCharset = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFont_GetSystemFontCharset_0(self);
};

PdfFont.prototype["GetSystemFontBold"] = PdfFont.prototype.GetSystemFontBold = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfFont_GetSystemFontBold_0(self);
};

PdfFont.prototype["GetSystemFontItalic"] = PdfFont.prototype.GetSystemFontItalic = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfFont_GetSystemFontItalic_0(self);
};

PdfFont.prototype["__destroy__"] = PdfFont.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfFont___destroy___0(self);
};

function PdfFormField() {
 throw "cannot construct a PdfFormField, no constructor in IDL";
}

PdfFormField.prototype = Object.create(WrapperObject.prototype);

PdfFormField.prototype.constructor = PdfFormField;

PdfFormField.prototype.__class__ = PdfFormField;

PdfFormField.__cache__ = {};

Module["PdfFormField"] = PdfFormField;

PdfFormField.prototype["GetType"] = PdfFormField.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFormField_GetType_0(self);
};

PdfFormField.prototype["GetFlags"] = PdfFormField.prototype.GetFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFormField_GetFlags_0(self);
};

PdfFormField.prototype["SetFlags"] = PdfFormField.prototype.SetFlags = function(flags) {
 var self = this.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdfFormField_SetFlags_1(self, flags);
};

PdfFormField.prototype["GetValue"] = PdfFormField.prototype.GetValue = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetValue_2(self, buffer, len);
};

PdfFormField.prototype["SetValue"] = PdfFormField.prototype.SetValue = function(value) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof value == "object") {
  value = ensureInt8(value);
 }
 return !!_emscripten_bind_PdfFormField_SetValue_1(self, value);
};

PdfFormField.prototype["GetDefaultValue"] = PdfFormField.prototype.GetDefaultValue = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetDefaultValue_2(self, buffer, len);
};

PdfFormField.prototype["GetFullName"] = PdfFormField.prototype.GetFullName = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetFullName_2(self, buffer, len);
};

PdfFormField.prototype["GetTooltip"] = PdfFormField.prototype.GetTooltip = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetTooltip_2(self, buffer, len);
};

PdfFormField.prototype["GetNumOptions"] = PdfFormField.prototype.GetNumOptions = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFormField_GetNumOptions_0(self);
};

PdfFormField.prototype["GetOptionValue"] = PdfFormField.prototype.GetOptionValue = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetOptionValue_3(self, index, buffer, len);
};

PdfFormField.prototype["GetOptionCaption"] = PdfFormField.prototype.GetOptionCaption = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetOptionCaption_3(self, index, buffer, len);
};

PdfFormField.prototype["GetAction"] = PdfFormField.prototype.GetAction = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfFormField_GetAction_0(self), PdfAction);
};

PdfFormField.prototype["GetAAction"] = PdfFormField.prototype.GetAAction = function(event) {
 var self = this.ptr;
 if (event && typeof event === "object") event = event.ptr;
 return wrapPointer(_emscripten_bind_PdfFormField_GetAAction_1(self, event), PdfAction);
};

PdfFormField.prototype["GetMaxLength"] = PdfFormField.prototype.GetMaxLength = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFormField_GetMaxLength_0(self);
};

PdfFormField.prototype["GetWidgetExportValue"] = PdfFormField.prototype.GetWidgetExportValue = function(annot, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (annot && typeof annot === "object") annot = annot.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetWidgetExportValue_3(self, annot, buffer, len);
};

PdfFormField.prototype["GetObject"] = PdfFormField.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfFormField_GetObject_0(self), PdsDictionary);
};

PdfFormField.prototype["GetNumExportValues"] = PdfFormField.prototype.GetNumExportValues = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfFormField_GetNumExportValues_0(self);
};

PdfFormField.prototype["GetExportValue"] = PdfFormField.prototype.GetExportValue = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfFormField_GetExportValue_3(self, index, buffer, len);
};

PdfFormField.prototype["__destroy__"] = PdfFormField.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfFormField___destroy___0(self);
};

function PdfPage() {
 throw "cannot construct a PdfPage, no constructor in IDL";
}

PdfPage.prototype = Object.create(WrapperObject.prototype);

PdfPage.prototype.constructor = PdfPage;

PdfPage.prototype.__class__ = PdfPage;

PdfPage.__cache__ = {};

Module["PdfPage"] = PdfPage;

PdfPage.prototype["Release"] = PdfPage.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPage_Release_0(self);
};

PdfPage.prototype["GetCropBox"] = PdfPage.prototype.GetCropBox = function(crop_box) {
 var self = this.ptr;
 if (crop_box && typeof crop_box === "object") crop_box = crop_box.ptr;
 _emscripten_bind_PdfPage_GetCropBox_1(self, crop_box);
};

PdfPage.prototype["GetMediaBox"] = PdfPage.prototype.GetMediaBox = function(media_box) {
 var self = this.ptr;
 if (media_box && typeof media_box === "object") media_box = media_box.ptr;
 _emscripten_bind_PdfPage_GetMediaBox_1(self, media_box);
};

PdfPage.prototype["GetRotate"] = PdfPage.prototype.GetRotate = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPage_GetRotate_0(self);
};

PdfPage.prototype["SetRotate"] = PdfPage.prototype.SetRotate = function(rotate) {
 var self = this.ptr;
 if (rotate && typeof rotate === "object") rotate = rotate.ptr;
 return !!_emscripten_bind_PdfPage_SetRotate_1(self, rotate);
};

PdfPage.prototype["GetLogicalRotate"] = PdfPage.prototype.GetLogicalRotate = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPage_GetLogicalRotate_0(self);
};

PdfPage.prototype["GetDefaultMatrix"] = PdfPage.prototype.GetDefaultMatrix = function(matrix) {
 var self = this.ptr;
 if (matrix && typeof matrix === "object") matrix = matrix.ptr;
 _emscripten_bind_PdfPage_GetDefaultMatrix_1(self, matrix);
};

PdfPage.prototype["GetNumber"] = PdfPage.prototype.GetNumber = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPage_GetNumber_0(self);
};

PdfPage.prototype["CreatePageMap"] = PdfPage.prototype.CreatePageMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_CreatePageMap_0(self), PdePageMap);
};

PdfPage.prototype["AcquirePageMap"] = PdfPage.prototype.AcquirePageMap = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AcquirePageMap_2(self, cancel_proc, cancel_data), PdePageMap);
};

PdfPage.prototype["AcquirePageView"] = PdfPage.prototype.AcquirePageView = function(zoom, rotate) {
 var self = this.ptr;
 if (zoom && typeof zoom === "object") zoom = zoom.ptr;
 if (rotate && typeof rotate === "object") rotate = rotate.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AcquirePageView_2(self, zoom, rotate), PdfPageView);
};

PdfPage.prototype["GetNumAnnots"] = PdfPage.prototype.GetNumAnnots = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPage_GetNumAnnots_0(self);
};

PdfPage.prototype["GetAnnot"] = PdfPage.prototype.GetAnnot = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetAnnot_1(self, index), PdfAnnot);
};

PdfPage.prototype["RemoveAnnot"] = PdfPage.prototype.RemoveAnnot = function(index, flags) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (flags && typeof flags === "object") flags = flags.ptr;
 return !!_emscripten_bind_PdfPage_RemoveAnnot_2(self, index, flags);
};

PdfPage.prototype["AddAnnot"] = PdfPage.prototype.AddAnnot = function(index, annot) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (annot && typeof annot === "object") annot = annot.ptr;
 return !!_emscripten_bind_PdfPage_AddAnnot_2(self, index, annot);
};

PdfPage.prototype["CreateAnnot"] = PdfPage.prototype.CreateAnnot = function(subtype, rect) {
 var self = this.ptr;
 if (subtype && typeof subtype === "object") subtype = subtype.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_CreateAnnot_2(self, subtype, rect), PdfAnnot);
};

PdfPage.prototype["CreateTextAnnot"] = PdfPage.prototype.CreateTextAnnot = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_CreateTextAnnot_1(self, rect), PdfTextAnnot);
};

PdfPage.prototype["CreateTextMarkupAnnot"] = PdfPage.prototype.CreateTextMarkupAnnot = function(subtype, rect) {
 var self = this.ptr;
 if (subtype && typeof subtype === "object") subtype = subtype.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_CreateTextMarkupAnnot_2(self, subtype, rect), PdfTextMarkupAnnot);
};

PdfPage.prototype["AddNewTextAnnot"] = PdfPage.prototype.AddNewTextAnnot = function(index, rect) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AddNewTextAnnot_2(self, index, rect), PdfTextAnnot);
};

PdfPage.prototype["AddNewLinkAnnot"] = PdfPage.prototype.AddNewLinkAnnot = function(index, rect) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AddNewLinkAnnot_2(self, index, rect), PdfLinkAnnot);
};

PdfPage.prototype["AddNewTextMarkupAnnot"] = PdfPage.prototype.AddNewTextMarkupAnnot = function(index, rect, subtype) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 if (subtype && typeof subtype === "object") subtype = subtype.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AddNewTextMarkupAnnot_3(self, index, rect, subtype), PdfTextMarkupAnnot);
};

PdfPage.prototype["AddNewAnnot"] = PdfPage.prototype.AddNewAnnot = function(index, rect, subtype) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 if (subtype && typeof subtype === "object") subtype = subtype.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_AddNewAnnot_3(self, index, rect, subtype), PdfAnnot);
};

PdfPage.prototype["GetNumAnnotsAtPoint"] = PdfPage.prototype.GetNumAnnotsAtPoint = function(point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 return _emscripten_bind_PdfPage_GetNumAnnotsAtPoint_1(self, point);
};

PdfPage.prototype["GetAnnotAtPoint"] = PdfPage.prototype.GetAnnotAtPoint = function(point, index) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetAnnotAtPoint_2(self, point, index), PdfAnnot);
};

PdfPage.prototype["GetNumAnnotsAtRect"] = PdfPage.prototype.GetNumAnnotsAtRect = function(rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 return _emscripten_bind_PdfPage_GetNumAnnotsAtRect_1(self, rect);
};

PdfPage.prototype["GetAnnotAtRect"] = PdfPage.prototype.GetAnnotAtRect = function(rect, index) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetAnnotAtRect_2(self, rect, index), PdfAnnot);
};

PdfPage.prototype["DrawContent"] = PdfPage.prototype.DrawContent = function(params, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfPage_DrawContent_3(self, params, cancel_proc, cancel_data);
};

PdfPage.prototype["GetContent"] = PdfPage.prototype.GetContent = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetContent_0(self), PdsContent);
};

PdfPage.prototype["GetResources"] = PdfPage.prototype.GetResources = function(res_type, create) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof res_type == "object") {
  res_type = ensureInt8(res_type);
 }
 if (create && typeof create === "object") create = create.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetResources_2(self, res_type, create), PdsDictionary);
};

PdfPage.prototype["GetObject"] = PdfPage.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetObject_0(self), PdsDictionary);
};

PdfPage.prototype["FlattenFormXObjects"] = PdfPage.prototype.FlattenFormXObjects = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfPage_FlattenFormXObjects_0(self);
};

PdfPage.prototype["GetContentFlags"] = PdfPage.prototype.GetContentFlags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPage_GetContentFlags_0(self);
};

PdfPage.prototype["SetContent"] = PdfPage.prototype.SetContent = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfPage_SetContent_0(self);
};

PdfPage.prototype["GetDoc"] = PdfPage.prototype.GetDoc = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfPage_GetDoc_0(self), PdfDoc);
};

PdfPage.prototype["__destroy__"] = PdfPage.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPage___destroy___0(self);
};

function PdePageMap() {
 throw "cannot construct a PdePageMap, no constructor in IDL";
}

PdePageMap.prototype = Object.create(WrapperObject.prototype);

PdePageMap.prototype.constructor = PdePageMap;

PdePageMap.prototype.__class__ = PdePageMap;

PdePageMap.__cache__ = {};

Module["PdePageMap"] = PdePageMap;

PdePageMap.prototype["Release"] = PdePageMap.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdePageMap_Release_0(self);
};

PdePageMap.prototype["GetElement"] = PdePageMap.prototype.GetElement = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdePageMap_GetElement_0(self), PdeElement);
};

PdePageMap.prototype["GetWhitespace"] = PdePageMap.prototype.GetWhitespace = function(params, index, bbox) {
 var self = this.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (index && typeof index === "object") index = index.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 return !!_emscripten_bind_PdePageMap_GetWhitespace_3(self, params, index, bbox);
};

PdePageMap.prototype["GetBBox"] = PdePageMap.prototype.GetBBox = function(bbox) {
 var self = this.ptr;
 if (bbox && typeof bbox === "object") bbox = bbox.ptr;
 _emscripten_bind_PdePageMap_GetBBox_1(self, bbox);
};

PdePageMap.prototype["AcquireElements"] = PdePageMap.prototype.AcquireElements = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdePageMap_AcquireElements_2(self, cancel_proc, cancel_data);
};

PdePageMap.prototype["CreateElement"] = PdePageMap.prototype.CreateElement = function(type, parent) {
 var self = this.ptr;
 if (type && typeof type === "object") type = type.ptr;
 if (parent && typeof parent === "object") parent = parent.ptr;
 return wrapPointer(_emscripten_bind_PdePageMap_CreateElement_2(self, type, parent), PdeElement);
};

PdePageMap.prototype["AddTags"] = PdePageMap.prototype.AddTags = function(element, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (element && typeof element === "object") element = element.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdePageMap_AddTags_3(self, element, cancel_proc, cancel_data);
};

PdePageMap.prototype["GetPage"] = PdePageMap.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdePageMap_GetPage_0(self), PdfPage);
};

PdePageMap.prototype["__destroy__"] = PdePageMap.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdePageMap___destroy___0(self);
};

function PdfPageView() {
 throw "cannot construct a PdfPageView, no constructor in IDL";
}

PdfPageView.prototype = Object.create(WrapperObject.prototype);

PdfPageView.prototype.constructor = PdfPageView;

PdfPageView.prototype.__class__ = PdfPageView;

PdfPageView.__cache__ = {};

Module["PdfPageView"] = PdfPageView;

PdfPageView.prototype["Release"] = PdfPageView.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPageView_Release_0(self);
};

PdfPageView.prototype["GetDeviceWidth"] = PdfPageView.prototype.GetDeviceWidth = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageView_GetDeviceWidth_0(self);
};

PdfPageView.prototype["GetDeviceHeight"] = PdfPageView.prototype.GetDeviceHeight = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfPageView_GetDeviceHeight_0(self);
};

PdfPageView.prototype["GetDeviceMatrix"] = PdfPageView.prototype.GetDeviceMatrix = function(matrix) {
 var self = this.ptr;
 if (matrix && typeof matrix === "object") matrix = matrix.ptr;
 _emscripten_bind_PdfPageView_GetDeviceMatrix_1(self, matrix);
};

PdfPageView.prototype["RectToDevice"] = PdfPageView.prototype.RectToDevice = function(rect, dev_rect) {
 var self = this.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 if (dev_rect && typeof dev_rect === "object") dev_rect = dev_rect.ptr;
 _emscripten_bind_PdfPageView_RectToDevice_2(self, rect, dev_rect);
};

PdfPageView.prototype["PointToDevice"] = PdfPageView.prototype.PointToDevice = function(point, dev_point) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 if (dev_point && typeof dev_point === "object") dev_point = dev_point.ptr;
 _emscripten_bind_PdfPageView_PointToDevice_2(self, point, dev_point);
};

PdfPageView.prototype["RectToPage"] = PdfPageView.prototype.RectToPage = function(dev_rect, rect) {
 var self = this.ptr;
 if (dev_rect && typeof dev_rect === "object") dev_rect = dev_rect.ptr;
 if (rect && typeof rect === "object") rect = rect.ptr;
 _emscripten_bind_PdfPageView_RectToPage_2(self, dev_rect, rect);
};

PdfPageView.prototype["PointToPage"] = PdfPageView.prototype.PointToPage = function(dev_point, point) {
 var self = this.ptr;
 if (dev_point && typeof dev_point === "object") dev_point = dev_point.ptr;
 if (point && typeof point === "object") point = point.ptr;
 _emscripten_bind_PdfPageView_PointToPage_2(self, dev_point, point);
};

PdfPageView.prototype["__destroy__"] = PdfPageView.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfPageView___destroy___0(self);
};

function PdfBookmark() {
 throw "cannot construct a PdfBookmark, no constructor in IDL";
}

PdfBookmark.prototype = Object.create(WrapperObject.prototype);

PdfBookmark.prototype.constructor = PdfBookmark;

PdfBookmark.prototype.__class__ = PdfBookmark;

PdfBookmark.__cache__ = {};

Module["PdfBookmark"] = PdfBookmark;

PdfBookmark.prototype["GetTitle"] = PdfBookmark.prototype.GetTitle = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdfBookmark_GetTitle_2(self, buffer, len);
};

PdfBookmark.prototype["GetAppearance"] = PdfBookmark.prototype.GetAppearance = function(appearance) {
 var self = this.ptr;
 if (appearance && typeof appearance === "object") appearance = appearance.ptr;
 _emscripten_bind_PdfBookmark_GetAppearance_1(self, appearance);
};

PdfBookmark.prototype["GetAction"] = PdfBookmark.prototype.GetAction = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfBookmark_GetAction_0(self), PdfAction);
};

PdfBookmark.prototype["GetNumChildren"] = PdfBookmark.prototype.GetNumChildren = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfBookmark_GetNumChildren_0(self);
};

PdfBookmark.prototype["GetChild"] = PdfBookmark.prototype.GetChild = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdfBookmark_GetChild_1(self, index), PdfBookmark);
};

PdfBookmark.prototype["GetParent"] = PdfBookmark.prototype.GetParent = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfBookmark_GetParent_0(self), PdfBookmark);
};

PdfBookmark.prototype["__destroy__"] = PdfBookmark.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfBookmark___destroy___0(self);
};

function PdfNameTree() {
 throw "cannot construct a PdfNameTree, no constructor in IDL";
}

PdfNameTree.prototype = Object.create(WrapperObject.prototype);

PdfNameTree.prototype.constructor = PdfNameTree;

PdfNameTree.prototype.__class__ = PdfNameTree;

PdfNameTree.__cache__ = {};

Module["PdfNameTree"] = PdfNameTree;

PdfNameTree.prototype["GetObject"] = PdfNameTree.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfNameTree_GetObject_0(self), PdsObject);
};

PdfNameTree.prototype["Lookup"] = PdfNameTree.prototype.Lookup = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return wrapPointer(_emscripten_bind_PdfNameTree_Lookup_1(self, name), PdsObject);
};

PdfNameTree.prototype["__destroy__"] = PdfNameTree.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfNameTree___destroy___0(self);
};

function PsRegex() {
 throw "cannot construct a PsRegex, no constructor in IDL";
}

PsRegex.prototype = Object.create(WrapperObject.prototype);

PsRegex.prototype.constructor = PsRegex;

PsRegex.prototype.__class__ = PsRegex;

PsRegex.__cache__ = {};

Module["PsRegex"] = PsRegex;

PsRegex.prototype["Destroy"] = PsRegex.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsRegex_Destroy_0(self);
};

PsRegex.prototype["SetPattern"] = PsRegex.prototype.SetPattern = function(pattern) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof pattern == "object") {
  pattern = ensureInt8(pattern);
 }
 return !!_emscripten_bind_PsRegex_SetPattern_1(self, pattern);
};

PsRegex.prototype["Search"] = PsRegex.prototype.Search = function(text, position) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof text == "object") {
  text = ensureInt8(text);
 }
 if (position && typeof position === "object") position = position.ptr;
 return !!_emscripten_bind_PsRegex_Search_2(self, text, position);
};

PsRegex.prototype["GetText"] = PsRegex.prototype.GetText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PsRegex_GetText_2(self, buffer, len);
};

PsRegex.prototype["GetPosition"] = PsRegex.prototype.GetPosition = function() {
 var self = this.ptr;
 return _emscripten_bind_PsRegex_GetPosition_0(self);
};

PsRegex.prototype["GetLength"] = PsRegex.prototype.GetLength = function() {
 var self = this.ptr;
 return _emscripten_bind_PsRegex_GetLength_0(self);
};

PsRegex.prototype["GetNumMatches"] = PsRegex.prototype.GetNumMatches = function() {
 var self = this.ptr;
 return _emscripten_bind_PsRegex_GetNumMatches_0(self);
};

PsRegex.prototype["GetMatchText"] = PsRegex.prototype.GetMatchText = function(index, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (index && typeof index === "object") index = index.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PsRegex_GetMatchText_3(self, index, buffer, len);
};

PsRegex.prototype["__destroy__"] = PsRegex.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsRegex___destroy___0(self);
};

function PsFileStream() {
 throw "cannot construct a PsFileStream, no constructor in IDL";
}

PsFileStream.prototype = Object.create(PsStream.prototype);

PsFileStream.prototype.constructor = PsFileStream;

PsFileStream.prototype.__class__ = PsFileStream;

PsFileStream.__cache__ = {};

Module["PsFileStream"] = PsFileStream;

PsFileStream.prototype["Destroy"] = PsFileStream.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsFileStream_Destroy_0(self);
};

PsFileStream.prototype["IsEof"] = PsFileStream.prototype.IsEof = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsFileStream_IsEof_0(self);
};

PsFileStream.prototype["GetSize"] = PsFileStream.prototype.GetSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PsFileStream_GetSize_0(self);
};

PsFileStream.prototype["Read"] = PsFileStream.prototype.Read = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsFileStream_Read_3(self, offset, buffer, size);
};

PsFileStream.prototype["Write"] = PsFileStream.prototype.Write = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsFileStream_Write_3(self, offset, buffer, size);
};

PsFileStream.prototype["GetPos"] = PsFileStream.prototype.GetPos = function() {
 var self = this.ptr;
 return _emscripten_bind_PsFileStream_GetPos_0(self);
};

PsFileStream.prototype["Flush"] = PsFileStream.prototype.Flush = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsFileStream_Flush_0(self);
};

PsFileStream.prototype["GetStream"] = PsFileStream.prototype.GetStream = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsFileStream_GetStream_0(self), VoidPtr);
};

PsFileStream.prototype["GetType"] = PsFileStream.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsFileStream_GetType_0(self);
};

PsFileStream.prototype["__destroy__"] = PsFileStream.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsFileStream___destroy___0(self);
};

function PsMemoryStream() {
 throw "cannot construct a PsMemoryStream, no constructor in IDL";
}

PsMemoryStream.prototype = Object.create(PsStream.prototype);

PsMemoryStream.prototype.constructor = PsMemoryStream;

PsMemoryStream.prototype.__class__ = PsMemoryStream;

PsMemoryStream.__cache__ = {};

Module["PsMemoryStream"] = PsMemoryStream;

PsMemoryStream.prototype["Resize"] = PsMemoryStream.prototype.Resize = function(size) {
 var self = this.ptr;
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsMemoryStream_Resize_1(self, size);
};

PsMemoryStream.prototype["Destroy"] = PsMemoryStream.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsMemoryStream_Destroy_0(self);
};

PsMemoryStream.prototype["IsEof"] = PsMemoryStream.prototype.IsEof = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsMemoryStream_IsEof_0(self);
};

PsMemoryStream.prototype["GetSize"] = PsMemoryStream.prototype.GetSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PsMemoryStream_GetSize_0(self);
};

PsMemoryStream.prototype["Read"] = PsMemoryStream.prototype.Read = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsMemoryStream_Read_3(self, offset, buffer, size);
};

PsMemoryStream.prototype["Write"] = PsMemoryStream.prototype.Write = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsMemoryStream_Write_3(self, offset, buffer, size);
};

PsMemoryStream.prototype["GetPos"] = PsMemoryStream.prototype.GetPos = function() {
 var self = this.ptr;
 return _emscripten_bind_PsMemoryStream_GetPos_0(self);
};

PsMemoryStream.prototype["Flush"] = PsMemoryStream.prototype.Flush = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsMemoryStream_Flush_0(self);
};

PsMemoryStream.prototype["GetStream"] = PsMemoryStream.prototype.GetStream = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsMemoryStream_GetStream_0(self), VoidPtr);
};

PsMemoryStream.prototype["GetType"] = PsMemoryStream.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsMemoryStream_GetType_0(self);
};

PsMemoryStream.prototype["__destroy__"] = PsMemoryStream.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsMemoryStream___destroy___0(self);
};

function PsCustomStream() {
 throw "cannot construct a PsCustomStream, no constructor in IDL";
}

PsCustomStream.prototype = Object.create(PsStream.prototype);

PsCustomStream.prototype.constructor = PsCustomStream;

PsCustomStream.prototype.__class__ = PsCustomStream;

PsCustomStream.__cache__ = {};

Module["PsCustomStream"] = PsCustomStream;

PsCustomStream.prototype["SetReadProc"] = PsCustomStream.prototype.SetReadProc = function(proc) {
 var self = this.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 _emscripten_bind_PsCustomStream_SetReadProc_1(self, proc);
};

PsCustomStream.prototype["SetWriteProc"] = PsCustomStream.prototype.SetWriteProc = function(proc) {
 var self = this.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 _emscripten_bind_PsCustomStream_SetWriteProc_1(self, proc);
};

PsCustomStream.prototype["SetDestroyProc"] = PsCustomStream.prototype.SetDestroyProc = function(proc) {
 var self = this.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 _emscripten_bind_PsCustomStream_SetDestroyProc_1(self, proc);
};

PsCustomStream.prototype["SetGetSizeProc"] = PsCustomStream.prototype.SetGetSizeProc = function(proc) {
 var self = this.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 _emscripten_bind_PsCustomStream_SetGetSizeProc_1(self, proc);
};

PsCustomStream.prototype["Destroy"] = PsCustomStream.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsCustomStream_Destroy_0(self);
};

PsCustomStream.prototype["IsEof"] = PsCustomStream.prototype.IsEof = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsCustomStream_IsEof_0(self);
};

PsCustomStream.prototype["GetSize"] = PsCustomStream.prototype.GetSize = function() {
 var self = this.ptr;
 return _emscripten_bind_PsCustomStream_GetSize_0(self);
};

PsCustomStream.prototype["Read"] = PsCustomStream.prototype.Read = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsCustomStream_Read_3(self, offset, buffer, size);
};

PsCustomStream.prototype["Write"] = PsCustomStream.prototype.Write = function(offset, buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (offset && typeof offset === "object") offset = offset.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return !!_emscripten_bind_PsCustomStream_Write_3(self, offset, buffer, size);
};

PsCustomStream.prototype["GetPos"] = PsCustomStream.prototype.GetPos = function() {
 var self = this.ptr;
 return _emscripten_bind_PsCustomStream_GetPos_0(self);
};

PsCustomStream.prototype["Flush"] = PsCustomStream.prototype.Flush = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsCustomStream_Flush_0(self);
};

PsCustomStream.prototype["GetStream"] = PsCustomStream.prototype.GetStream = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsCustomStream_GetStream_0(self), VoidPtr);
};

PsCustomStream.prototype["GetType"] = PsCustomStream.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsCustomStream_GetType_0(self);
};

PsCustomStream.prototype["__destroy__"] = PsCustomStream.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsCustomStream___destroy___0(self);
};

function PdsStructElement() {
 throw "cannot construct a PdsStructElement, no constructor in IDL";
}

PdsStructElement.prototype = Object.create(WrapperObject.prototype);

PdsStructElement.prototype.constructor = PdsStructElement;

PdsStructElement.prototype.__class__ = PdsStructElement;

PdsStructElement.__cache__ = {};

Module["PdsStructElement"] = PdsStructElement;

PdsStructElement.prototype["Release"] = PdsStructElement.prototype.Release = function() {
 var self = this.ptr;
 _emscripten_bind_PdsStructElement_Release_0(self);
};

PdsStructElement.prototype["GetType"] = PdsStructElement.prototype.GetType = function(mapped, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (mapped && typeof mapped === "object") mapped = mapped.ptr;
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetType_3(self, mapped, buffer, len);
};

PdsStructElement.prototype["GetActualText"] = PdsStructElement.prototype.GetActualText = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetActualText_2(self, buffer, len);
};

PdsStructElement.prototype["SetActualText"] = PdsStructElement.prototype.SetActualText = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdsStructElement_SetActualText_1(self, alt);
};

PdsStructElement.prototype["GetAlt"] = PdsStructElement.prototype.GetAlt = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetAlt_2(self, buffer, len);
};

PdsStructElement.prototype["SetAlt"] = PdsStructElement.prototype.SetAlt = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdsStructElement_SetAlt_1(self, alt);
};

PdsStructElement.prototype["GetTitle"] = PdsStructElement.prototype.GetTitle = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetTitle_2(self, buffer, len);
};

PdsStructElement.prototype["SetTitle"] = PdsStructElement.prototype.SetTitle = function(title) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof title == "object") {
  title = ensureInt8(title);
 }
 return !!_emscripten_bind_PdsStructElement_SetTitle_1(self, title);
};

PdsStructElement.prototype["GetAbbreviation"] = PdsStructElement.prototype.GetAbbreviation = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetAbbreviation_2(self, buffer, len);
};

PdsStructElement.prototype["GetPageNumber"] = PdsStructElement.prototype.GetPageNumber = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStructElement_GetPageNumber_0(self);
};

PdsStructElement.prototype["GetAttrObject"] = PdsStructElement.prototype.GetAttrObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_GetAttrObject_1(self, index), PdsObject);
};

PdsStructElement.prototype["AddAttrObj"] = PdsStructElement.prototype.AddAttrObj = function(object) {
 var self = this.ptr;
 if (object && typeof object === "object") object = object.ptr;
 return !!_emscripten_bind_PdsStructElement_AddAttrObj_1(self, object);
};

PdsStructElement.prototype["RemoveAttrObj"] = PdsStructElement.prototype.RemoveAttrObj = function() {
 var self = this.ptr;
 _emscripten_bind_PdsStructElement_RemoveAttrObj_0(self);
};

PdsStructElement.prototype["GetElementObject"] = PdsStructElement.prototype.GetElementObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_GetElementObject_0(self), PdsObject);
};

PdsStructElement.prototype["GetKidObject"] = PdsStructElement.prototype.GetKidObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_GetKidObject_1(self, index), PdsObject);
};

PdsStructElement.prototype["GetKidType"] = PdsStructElement.prototype.GetKidType = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdsStructElement_GetKidType_1(self, index);
};

PdsStructElement.prototype["GetKidPageNumber"] = PdsStructElement.prototype.GetKidPageNumber = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdsStructElement_GetKidPageNumber_1(self, index);
};

PdsStructElement.prototype["GetKidMcid"] = PdsStructElement.prototype.GetKidMcid = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return _emscripten_bind_PdsStructElement_GetKidMcid_1(self, index);
};

PdsStructElement.prototype["GetNumAttrObjects"] = PdsStructElement.prototype.GetNumAttrObjects = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStructElement_GetNumAttrObjects_0(self);
};

PdsStructElement.prototype["GetNumKids"] = PdsStructElement.prototype.GetNumKids = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStructElement_GetNumKids_0(self);
};

PdsStructElement.prototype["GetParentObject"] = PdsStructElement.prototype.GetParentObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_GetParentObject_0(self), PdsObject);
};

PdsStructElement.prototype["GetId"] = PdsStructElement.prototype.GetId = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetId_2(self, buffer, len);
};

PdsStructElement.prototype["SetId"] = PdsStructElement.prototype.SetId = function(id) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof id == "object") {
  id = ensureInt8(id);
 }
 return !!_emscripten_bind_PdsStructElement_SetId_1(self, id);
};

PdsStructElement.prototype["GetLang"] = PdsStructElement.prototype.GetLang = function(buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsStructElement_GetLang_2(self, buffer, len);
};

PdsStructElement.prototype["SetLang"] = PdsStructElement.prototype.SetLang = function(alt) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof alt == "object") {
  alt = ensureInt8(alt);
 }
 return !!_emscripten_bind_PdsStructElement_SetLang_1(self, alt);
};

PdsStructElement.prototype["RemoveKid"] = PdsStructElement.prototype.RemoveKid = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdsStructElement_RemoveKid_1(self, index);
};

PdsStructElement.prototype["CreateStructElement"] = PdsStructElement.prototype.CreateStructElement = function(type, parent, index) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof type == "object") {
  type = ensureInt8(type);
 }
 if (parent && typeof parent === "object") parent = parent.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_CreateStructElement_3(self, type, parent, index), PdsStructElement);
};

PdsStructElement.prototype["SetParent"] = PdsStructElement.prototype.SetParent = function(parent, index) {
 var self = this.ptr;
 if (parent && typeof parent === "object") parent = parent.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdsStructElement_SetParent_2(self, parent, index);
};

PdsStructElement.prototype["AddPageObject"] = PdsStructElement.prototype.AddPageObject = function(object, index) {
 var self = this.ptr;
 if (object && typeof object === "object") object = object.ptr;
 if (index && typeof index === "object") index = index.ptr;
 _emscripten_bind_PdsStructElement_AddPageObject_2(self, object, index);
};

PdsStructElement.prototype["AddAnnot"] = PdsStructElement.prototype.AddAnnot = function(annot, index) {
 var self = this.ptr;
 if (annot && typeof annot === "object") annot = annot.ptr;
 if (index && typeof index === "object") index = index.ptr;
 _emscripten_bind_PdsStructElement_AddAnnot_2(self, annot, index);
};

PdsStructElement.prototype["GetStructTree"] = PdsStructElement.prototype.GetStructTree = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructElement_GetStructTree_0(self), PdsStructTree);
};

PdsStructElement.prototype["SetType"] = PdsStructElement.prototype.SetType = function(type) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof type == "object") {
  type = ensureInt8(type);
 }
 return !!_emscripten_bind_PdsStructElement_SetType_1(self, type);
};

PdsStructElement.prototype["__destroy__"] = PdsStructElement.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsStructElement___destroy___0(self);
};

function PdsClassMap() {
 throw "cannot construct a PdsClassMap, no constructor in IDL";
}

PdsClassMap.prototype = Object.create(WrapperObject.prototype);

PdsClassMap.prototype.constructor = PdsClassMap;

PdsClassMap.prototype.__class__ = PdsClassMap;

PdsClassMap.__cache__ = {};

Module["PdsClassMap"] = PdsClassMap;

PdsClassMap.prototype["GetAttrObject"] = PdsClassMap.prototype.GetAttrObject = function(class_name, index) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof class_name == "object") {
  class_name = ensureInt8(class_name);
 }
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsClassMap_GetAttrObject_2(self, class_name, index), PdsObject);
};

PdsClassMap.prototype["GetNumAttrObjects"] = PdsClassMap.prototype.GetNumAttrObjects = function(class_name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof class_name == "object") {
  class_name = ensureInt8(class_name);
 }
 return _emscripten_bind_PdsClassMap_GetNumAttrObjects_1(self, class_name);
};

PdsClassMap.prototype["__destroy__"] = PdsClassMap.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsClassMap___destroy___0(self);
};

function PdsRoleMap() {
 throw "cannot construct a PdsRoleMap, no constructor in IDL";
}

PdsRoleMap.prototype = Object.create(WrapperObject.prototype);

PdsRoleMap.prototype.constructor = PdsRoleMap;

PdsRoleMap.prototype.__class__ = PdsRoleMap;

PdsRoleMap.__cache__ = {};

Module["PdsRoleMap"] = PdsRoleMap;

PdsRoleMap.prototype["DoesMap"] = PdsRoleMap.prototype.DoesMap = function(src, dst) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof src == "object") {
  src = ensureInt8(src);
 }
 if (typeof dst == "object") {
  dst = ensureInt8(dst);
 }
 return !!_emscripten_bind_PdsRoleMap_DoesMap_2(self, src, dst);
};

PdsRoleMap.prototype["GetDirectMap"] = PdsRoleMap.prototype.GetDirectMap = function(type, buffer, len) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof type == "object") {
  type = ensureInt8(type);
 }
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (len && typeof len === "object") len = len.ptr;
 return _emscripten_bind_PdsRoleMap_GetDirectMap_3(self, type, buffer, len);
};

PdsRoleMap.prototype["__destroy__"] = PdsRoleMap.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsRoleMap___destroy___0(self);
};

function PdsStructTree() {
 throw "cannot construct a PdsStructTree, no constructor in IDL";
}

PdsStructTree.prototype = Object.create(WrapperObject.prototype);

PdsStructTree.prototype.constructor = PdsStructTree;

PdsStructTree.prototype.__class__ = PdsStructTree;

PdsStructTree.__cache__ = {};

Module["PdsStructTree"] = PdsStructTree;

PdsStructTree.prototype["GetObject"] = PdsStructTree.prototype.GetObject = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_GetObject_0(self), PdsDictionary);
};

PdsStructTree.prototype["GetClassMap"] = PdsStructTree.prototype.GetClassMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_GetClassMap_0(self), PdsClassMap);
};

PdsStructTree.prototype["GetKidObject"] = PdsStructTree.prototype.GetKidObject = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_GetKidObject_1(self, index), PdsObject);
};

PdsStructTree.prototype["GetNumKids"] = PdsStructTree.prototype.GetNumKids = function() {
 var self = this.ptr;
 return _emscripten_bind_PdsStructTree_GetNumKids_0(self);
};

PdsStructTree.prototype["GetRoleMap"] = PdsStructTree.prototype.GetRoleMap = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_GetRoleMap_0(self), PdsRoleMap);
};

PdsStructTree.prototype["AcquireStructElement"] = PdsStructTree.prototype.AcquireStructElement = function(object) {
 var self = this.ptr;
 if (object && typeof object === "object") object = object.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_AcquireStructElement_1(self, object), PdsStructElement);
};

PdsStructTree.prototype["RemoveKid"] = PdsStructTree.prototype.RemoveKid = function(index) {
 var self = this.ptr;
 if (index && typeof index === "object") index = index.ptr;
 return !!_emscripten_bind_PdsStructTree_RemoveKid_1(self, index);
};

PdsStructTree.prototype["CreateStructElement"] = PdsStructTree.prototype.CreateStructElement = function(type, index) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof type == "object") {
  type = ensureInt8(type);
 }
 if (index && typeof index === "object") index = index.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_CreateStructElement_2(self, type, index), PdsStructElement);
};

PdsStructTree.prototype["GetDoc"] = PdsStructTree.prototype.GetDoc = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdsStructTree_GetDoc_0(self), PdfDoc);
};

PdsStructTree.prototype["UpdateParentTree"] = PdsStructTree.prototype.UpdateParentTree = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdsStructTree_UpdateParentTree_0(self);
};

PdsStructTree.prototype["__destroy__"] = PdsStructTree.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdsStructTree___destroy___0(self);
};

function PsMetadata() {
 throw "cannot construct a PsMetadata, no constructor in IDL";
}

PsMetadata.prototype = Object.create(WrapperObject.prototype);

PsMetadata.prototype.constructor = PsMetadata;

PsMetadata.prototype.__class__ = PsMetadata;

PsMetadata.__cache__ = {};

Module["PsMetadata"] = PsMetadata;

PsMetadata.prototype["LoadFromStream"] = PsMetadata.prototype.LoadFromStream = function(stream) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 return !!_emscripten_bind_PsMetadata_LoadFromStream_1(self, stream);
};

PsMetadata.prototype["SaveToStream"] = PsMetadata.prototype.SaveToStream = function(stream) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 return !!_emscripten_bind_PsMetadata_SaveToStream_1(self, stream);
};

PsMetadata.prototype["__destroy__"] = PsMetadata.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsMetadata___destroy___0(self);
};

function PsEvent() {
 throw "cannot construct a PsEvent, no constructor in IDL";
}

PsEvent.prototype = Object.create(WrapperObject.prototype);

PsEvent.prototype.constructor = PsEvent;

PsEvent.prototype.__class__ = PsEvent;

PsEvent.__cache__ = {};

Module["PsEvent"] = PsEvent;

PsEvent.prototype["GetType"] = PsEvent.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsEvent_GetType_0(self);
};

PsEvent.prototype["GetDoc"] = PsEvent.prototype.GetDoc = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsEvent_GetDoc_0(self), PdfDoc);
};

PsEvent.prototype["GetPage"] = PsEvent.prototype.GetPage = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsEvent_GetPage_0(self), PdfPage);
};

PsEvent.prototype["GetAnnot"] = PsEvent.prototype.GetAnnot = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PsEvent_GetAnnot_0(self), PdfAnnot);
};

PsEvent.prototype["__destroy__"] = PsEvent.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsEvent___destroy___0(self);
};

function PsAccountAuthorization() {
 throw "cannot construct a PsAccountAuthorization, no constructor in IDL";
}

PsAccountAuthorization.prototype = Object.create(PsAuthorization.prototype);

PsAccountAuthorization.prototype.constructor = PsAccountAuthorization;

PsAccountAuthorization.prototype.__class__ = PsAccountAuthorization;

PsAccountAuthorization.__cache__ = {};

Module["PsAccountAuthorization"] = PsAccountAuthorization;

PsAccountAuthorization.prototype["Authorize"] = PsAccountAuthorization.prototype.Authorize = function(email, serial_number) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof email == "object") {
  email = ensureInt8(email);
 }
 if (typeof serial_number == "object") {
  serial_number = ensureInt8(serial_number);
 }
 return !!_emscripten_bind_PsAccountAuthorization_Authorize_2(self, email, serial_number);
};

PsAccountAuthorization.prototype["SaveToStream"] = PsAccountAuthorization.prototype.SaveToStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PsAccountAuthorization_SaveToStream_2(self, stream, format);
};

PsAccountAuthorization.prototype["IsAuthorized"] = PsAccountAuthorization.prototype.IsAuthorized = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsAccountAuthorization_IsAuthorized_0(self);
};

PsAccountAuthorization.prototype["IsAuthorizedPlatform"] = PsAccountAuthorization.prototype.IsAuthorizedPlatform = function(platform) {
 var self = this.ptr;
 if (platform && typeof platform === "object") platform = platform.ptr;
 return !!_emscripten_bind_PsAccountAuthorization_IsAuthorizedPlatform_1(self, platform);
};

PsAccountAuthorization.prototype["IsAuthorizedOption"] = PsAccountAuthorization.prototype.IsAuthorizedOption = function(option) {
 var self = this.ptr;
 if (option && typeof option === "object") option = option.ptr;
 return !!_emscripten_bind_PsAccountAuthorization_IsAuthorizedOption_1(self, option);
};

PsAccountAuthorization.prototype["GetType"] = PsAccountAuthorization.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsAccountAuthorization_GetType_0(self);
};

PsAccountAuthorization.prototype["__destroy__"] = PsAccountAuthorization.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsAccountAuthorization___destroy___0(self);
};

function PsStandardAuthorization() {
 throw "cannot construct a PsStandardAuthorization, no constructor in IDL";
}

PsStandardAuthorization.prototype = Object.create(PsAuthorization.prototype);

PsStandardAuthorization.prototype.constructor = PsStandardAuthorization;

PsStandardAuthorization.prototype.__class__ = PsStandardAuthorization;

PsStandardAuthorization.__cache__ = {};

Module["PsStandardAuthorization"] = PsStandardAuthorization;

PsStandardAuthorization.prototype["Activate"] = PsStandardAuthorization.prototype.Activate = function(serial_number) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof serial_number == "object") {
  serial_number = ensureInt8(serial_number);
 }
 return !!_emscripten_bind_PsStandardAuthorization_Activate_1(self, serial_number);
};

PsStandardAuthorization.prototype["Deactivate"] = PsStandardAuthorization.prototype.Deactivate = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_Deactivate_0(self);
};

PsStandardAuthorization.prototype["Update"] = PsStandardAuthorization.prototype.Update = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_Update_0(self);
};

PsStandardAuthorization.prototype["Reset"] = PsStandardAuthorization.prototype.Reset = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_Reset_0(self);
};

PsStandardAuthorization.prototype["SaveToStream"] = PsStandardAuthorization.prototype.SaveToStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_SaveToStream_2(self, stream, format);
};

PsStandardAuthorization.prototype["IsAuthorized"] = PsStandardAuthorization.prototype.IsAuthorized = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_IsAuthorized_0(self);
};

PsStandardAuthorization.prototype["IsAuthorizedPlatform"] = PsStandardAuthorization.prototype.IsAuthorizedPlatform = function(platform) {
 var self = this.ptr;
 if (platform && typeof platform === "object") platform = platform.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_IsAuthorizedPlatform_1(self, platform);
};

PsStandardAuthorization.prototype["IsAuthorizedOption"] = PsStandardAuthorization.prototype.IsAuthorizedOption = function(option) {
 var self = this.ptr;
 if (option && typeof option === "object") option = option.ptr;
 return !!_emscripten_bind_PsStandardAuthorization_IsAuthorizedOption_1(self, option);
};

PsStandardAuthorization.prototype["GetType"] = PsStandardAuthorization.prototype.GetType = function() {
 var self = this.ptr;
 return _emscripten_bind_PsStandardAuthorization_GetType_0(self);
};

PsStandardAuthorization.prototype["__destroy__"] = PsStandardAuthorization.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsStandardAuthorization___destroy___0(self);
};

function PsCommand() {
 throw "cannot construct a PsCommand, no constructor in IDL";
}

PsCommand.prototype = Object.create(WrapperObject.prototype);

PsCommand.prototype.constructor = PsCommand;

PsCommand.prototype.__class__ = PsCommand;

PsCommand.__cache__ = {};

Module["PsCommand"] = PsCommand;

PsCommand.prototype["Destroy"] = PsCommand.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsCommand_Destroy_0(self);
};

PsCommand.prototype["Execute"] = PsCommand.prototype.Execute = function(cancel_proc, cancel_data) {
 var self = this.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return _emscripten_bind_PsCommand_Execute_2(self, cancel_proc, cancel_data);
};

PsCommand.prototype["LoadFromStream"] = PsCommand.prototype.LoadFromStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PsCommand_LoadFromStream_2(self, stream, format);
};

PsCommand.prototype["SaveToStream"] = PsCommand.prototype.SaveToStream = function(stream, format) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return !!_emscripten_bind_PsCommand_SaveToStream_2(self, stream, format);
};

PsCommand.prototype["__destroy__"] = PsCommand.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsCommand___destroy___0(self);
};

function PsImage() {
 throw "cannot construct a PsImage, no constructor in IDL";
}

PsImage.prototype = Object.create(WrapperObject.prototype);

PsImage.prototype.constructor = PsImage;

PsImage.prototype.__class__ = PsImage;

PsImage.__cache__ = {};

Module["PsImage"] = PsImage;

PsImage.prototype["Destroy"] = PsImage.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PsImage_Destroy_0(self);
};

PsImage.prototype["Save"] = PsImage.prototype.Save = function(path, params) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (params && typeof params === "object") params = params.ptr;
 return !!_emscripten_bind_PsImage_Save_2(self, path, params);
};

PsImage.prototype["SaveRect"] = PsImage.prototype.SaveRect = function(path, params, dev_rect) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (params && typeof params === "object") params = params.ptr;
 if (dev_rect && typeof dev_rect === "object") dev_rect = dev_rect.ptr;
 return !!_emscripten_bind_PsImage_SaveRect_3(self, path, params, dev_rect);
};

PsImage.prototype["SaveToStream"] = PsImage.prototype.SaveToStream = function(stream, params) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (params && typeof params === "object") params = params.ptr;
 return !!_emscripten_bind_PsImage_SaveToStream_2(self, stream, params);
};

PsImage.prototype["SaveRectToStream"] = PsImage.prototype.SaveRectToStream = function(stream, params, dev_rect) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (dev_rect && typeof dev_rect === "object") dev_rect = dev_rect.ptr;
 return !!_emscripten_bind_PsImage_SaveRectToStream_3(self, stream, params, dev_rect);
};

PsImage.prototype["GetPointColor"] = PsImage.prototype.GetPointColor = function(point, color) {
 var self = this.ptr;
 if (point && typeof point === "object") point = point.ptr;
 if (color && typeof color === "object") color = color.ptr;
 _emscripten_bind_PsImage_GetPointColor_2(self, point, color);
};

PsImage.prototype["SaveDataToStream"] = PsImage.prototype.SaveDataToStream = function(stream) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 return !!_emscripten_bind_PsImage_SaveDataToStream_1(self, stream);
};

PsImage.prototype["__destroy__"] = PsImage.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PsImage___destroy___0(self);
};

function Pdfix() {
 throw "cannot construct a Pdfix, no constructor in IDL";
}

Pdfix.prototype = Object.create(WrapperObject.prototype);

Pdfix.prototype.constructor = Pdfix;

Pdfix.prototype.__class__ = Pdfix;

Pdfix.__cache__ = {};

Module["Pdfix"] = Pdfix;

Pdfix.prototype["Destroy"] = Pdfix.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_Pdfix_Destroy_0(self);
};

Pdfix.prototype["GetAuthorization"] = Pdfix.prototype.GetAuthorization = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_GetAuthorization_0(self), PsAuthorization);
};

Pdfix.prototype["GetStandardAuthorization"] = Pdfix.prototype.GetStandardAuthorization = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_GetStandardAuthorization_0(self), PsStandardAuthorization);
};

Pdfix.prototype["GetAccountAuthorization"] = Pdfix.prototype.GetAccountAuthorization = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_GetAccountAuthorization_0(self), PsAccountAuthorization);
};

Pdfix.prototype["GetErrorType"] = Pdfix.prototype.GetErrorType = function() {
 var self = this.ptr;
 return _emscripten_bind_Pdfix_GetErrorType_0(self);
};

Pdfix.prototype["GetError"] = Pdfix.prototype.GetError = function() {
 var self = this.ptr;
 return UTF8ToString(_emscripten_bind_Pdfix_GetError_0(self));
};

Pdfix.prototype["SetError"] = Pdfix.prototype.SetError = function(type, error) {
 var self = this.ptr;
 ensureCache.prepare();
 if (type && typeof type === "object") type = type.ptr;
 if (error && typeof error === "object") error = error.ptr; else error = ensureString(error);
 _emscripten_bind_Pdfix_SetError_2(self, type, error);
};

Pdfix.prototype["GetVersionMajor"] = Pdfix.prototype.GetVersionMajor = function() {
 var self = this.ptr;
 return _emscripten_bind_Pdfix_GetVersionMajor_0(self);
};

Pdfix.prototype["GetVersionMinor"] = Pdfix.prototype.GetVersionMinor = function() {
 var self = this.ptr;
 return _emscripten_bind_Pdfix_GetVersionMinor_0(self);
};

Pdfix.prototype["GetVersionPatch"] = Pdfix.prototype.GetVersionPatch = function() {
 var self = this.ptr;
 return _emscripten_bind_Pdfix_GetVersionPatch_0(self);
};

Pdfix.prototype["CreateDoc"] = Pdfix.prototype.CreateDoc = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateDoc_0(self), PdfDoc);
};

Pdfix.prototype["OpenDoc"] = Pdfix.prototype.OpenDoc = function(path, password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (typeof password == "object") {
  password = ensureInt8(password);
 }
 return wrapPointer(_emscripten_bind_Pdfix_OpenDoc_2(self, path, password), PdfDoc);
};

Pdfix.prototype["OpenDocFromStream"] = Pdfix.prototype.OpenDocFromStream = function(stream, password) {
 var self = this.ptr;
 ensureCache.prepare();
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (typeof password == "object") {
  password = ensureInt8(password);
 }
 return wrapPointer(_emscripten_bind_Pdfix_OpenDocFromStream_2(self, stream, password), PdfDoc);
};

Pdfix.prototype["CreateDigSig"] = Pdfix.prototype.CreateDigSig = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateDigSig_0(self), PdfDigSig);
};

Pdfix.prototype["CreateCustomDigSig"] = Pdfix.prototype.CreateCustomDigSig = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateCustomDigSig_0(self), PdfCustomDigSig);
};

Pdfix.prototype["CreateRegex"] = Pdfix.prototype.CreateRegex = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateRegex_0(self), PsRegex);
};

Pdfix.prototype["CreateFileStream"] = Pdfix.prototype.CreateFileStream = function(path, mode) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (mode && typeof mode === "object") mode = mode.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateFileStream_2(self, path, mode), PsFileStream);
};

Pdfix.prototype["CreateMemStream"] = Pdfix.prototype.CreateMemStream = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateMemStream_0(self), PsMemoryStream);
};

Pdfix.prototype["CreateCustomStream"] = Pdfix.prototype.CreateCustomStream = function(read_proc, client_data) {
 var self = this.ptr;
 if (read_proc && typeof read_proc === "object") read_proc = read_proc.ptr;
 if (client_data && typeof client_data === "object") client_data = client_data.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateCustomStream_2(self, read_proc, client_data), PsCustomStream);
};

Pdfix.prototype["RegisterEvent"] = Pdfix.prototype.RegisterEvent = function(type, proc, data) {
 var self = this.ptr;
 if (type && typeof type === "object") type = type.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 if (data && typeof data === "object") data = data.ptr;
 return !!_emscripten_bind_Pdfix_RegisterEvent_3(self, type, proc, data);
};

Pdfix.prototype["UnregisterEvent"] = Pdfix.prototype.UnregisterEvent = function(type, proc, data) {
 var self = this.ptr;
 if (type && typeof type === "object") type = type.ptr;
 if (proc && typeof proc === "object") proc = proc.ptr;
 if (data && typeof data === "object") data = data.ptr;
 return !!_emscripten_bind_Pdfix_UnregisterEvent_3(self, type, proc, data);
};

Pdfix.prototype["CreateImage"] = Pdfix.prototype.CreateImage = function(width, height, format) {
 var self = this.ptr;
 if (width && typeof width === "object") width = width.ptr;
 if (height && typeof height === "object") height = height.ptr;
 if (format && typeof format === "object") format = format.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_CreateImage_3(self, width, height, format), PsImage);
};

Pdfix.prototype["RegisterPlugin"] = Pdfix.prototype.RegisterPlugin = function(plugin, name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (plugin && typeof plugin === "object") plugin = plugin.ptr;
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return !!_emscripten_bind_Pdfix_RegisterPlugin_2(self, plugin, name);
};

Pdfix.prototype["GetPluginByName"] = Pdfix.prototype.GetPluginByName = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return wrapPointer(_emscripten_bind_Pdfix_GetPluginByName_1(self, name), PdfixPlugin);
};

Pdfix.prototype["GetEvent"] = Pdfix.prototype.GetEvent = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_Pdfix_GetEvent_0(self), PsEvent);
};

Pdfix.prototype["CreateCommand"] = Pdfix.prototype.CreateCommand = function(name) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof name == "object") {
  name = ensureInt8(name);
 }
 return wrapPointer(_emscripten_bind_Pdfix_CreateCommand_1(self, name), PsCommand);
};

Pdfix.prototype["__destroy__"] = Pdfix.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_Pdfix___destroy___0(self);
};

function Util() {
 throw "cannot construct a Util, no constructor in IDL";
}

Util.prototype = Object.create(WrapperObject.prototype);

Util.prototype.constructor = Util;

Util.prototype.__class__ = Util;

Util.__cache__ = {};

Module["Util"] = Util;

Util.prototype["base64_enc"] = Util.prototype.base64_enc = function(buffer, size) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof buffer == "object") {
  buffer = ensureInt8(buffer);
 }
 if (size && typeof size === "object") size = size.ptr;
 return UTF8ToString(_emscripten_bind_Util_base64_enc_2(self, buffer, size));
};

Util.prototype["__destroy__"] = Util.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_Util___destroy___0(self);
};

function PdfHtmlParams() {
 this.ptr = _emscripten_bind_PdfHtmlParams_PdfHtmlParams_0();
 getCache(PdfHtmlParams)[this.ptr] = this;
}

PdfHtmlParams.prototype = Object.create(WrapperObject.prototype);

PdfHtmlParams.prototype.constructor = PdfHtmlParams;

PdfHtmlParams.prototype.__class__ = PdfHtmlParams;

PdfHtmlParams.__cache__ = {};

Module["PdfHtmlParams"] = PdfHtmlParams;

PdfHtmlParams.prototype["get_flags"] = PdfHtmlParams.prototype.get_flags = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfHtmlParams_get_flags_0(self);
};

PdfHtmlParams.prototype["set_flags"] = PdfHtmlParams.prototype.set_flags = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfHtmlParams_set_flags_1(self, arg0);
};

Object.defineProperty(PdfHtmlParams.prototype, "flags", {
 get: PdfHtmlParams.prototype.get_flags,
 set: PdfHtmlParams.prototype.set_flags
});

PdfHtmlParams.prototype["get_width"] = PdfHtmlParams.prototype.get_width = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfHtmlParams_get_width_0(self);
};

PdfHtmlParams.prototype["set_width"] = PdfHtmlParams.prototype.set_width = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfHtmlParams_set_width_1(self, arg0);
};

Object.defineProperty(PdfHtmlParams.prototype, "width", {
 get: PdfHtmlParams.prototype.get_width,
 set: PdfHtmlParams.prototype.set_width
});

PdfHtmlParams.prototype["get_type"] = PdfHtmlParams.prototype.get_type = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfHtmlParams_get_type_0(self);
};

PdfHtmlParams.prototype["set_type"] = PdfHtmlParams.prototype.set_type = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfHtmlParams_set_type_1(self, arg0);
};

Object.defineProperty(PdfHtmlParams.prototype, "type", {
 get: PdfHtmlParams.prototype.get_type,
 set: PdfHtmlParams.prototype.set_type
});

PdfHtmlParams.prototype["get_image_params"] = PdfHtmlParams.prototype.get_image_params = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfHtmlParams_get_image_params_0(self), PdfImageParams);
};

PdfHtmlParams.prototype["set_image_params"] = PdfHtmlParams.prototype.set_image_params = function(arg0) {
 var self = this.ptr;
 if (arg0 && typeof arg0 === "object") arg0 = arg0.ptr;
 _emscripten_bind_PdfHtmlParams_set_image_params_1(self, arg0);
};

Object.defineProperty(PdfHtmlParams.prototype, "image_params", {
 get: PdfHtmlParams.prototype.get_image_params,
 set: PdfHtmlParams.prototype.set_image_params
});

PdfHtmlParams.prototype["__destroy__"] = PdfHtmlParams.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfHtmlParams___destroy___0(self);
};

function PdfToHtml() {
 throw "cannot construct a PdfToHtml, no constructor in IDL";
}

PdfToHtml.prototype = Object.create(PdfixPlugin.prototype);

PdfToHtml.prototype.constructor = PdfToHtml;

PdfToHtml.prototype.__class__ = PdfToHtml;

PdfToHtml.__cache__ = {};

Module["PdfToHtml"] = PdfToHtml;

PdfToHtml.prototype["OpenHtmlDoc"] = PdfToHtml.prototype.OpenHtmlDoc = function(doc) {
 var self = this.ptr;
 if (doc && typeof doc === "object") doc = doc.ptr;
 return wrapPointer(_emscripten_bind_PdfToHtml_OpenHtmlDoc_1(self, doc), PdfHtmlDoc);
};

PdfToHtml.prototype["SaveCSS"] = PdfToHtml.prototype.SaveCSS = function(stream) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 return !!_emscripten_bind_PdfToHtml_SaveCSS_1(self, stream);
};

PdfToHtml.prototype["SaveJavaScript"] = PdfToHtml.prototype.SaveJavaScript = function(stream) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 return !!_emscripten_bind_PdfToHtml_SaveJavaScript_1(self, stream);
};

PdfToHtml.prototype["Destroy"] = PdfToHtml.prototype.Destroy = function() {
 var self = this.ptr;
 _emscripten_bind_PdfToHtml_Destroy_0(self);
};

PdfToHtml.prototype["Initialize"] = PdfToHtml.prototype.Initialize = function(pdfix) {
 var self = this.ptr;
 if (pdfix && typeof pdfix === "object") pdfix = pdfix.ptr;
 return !!_emscripten_bind_PdfToHtml_Initialize_1(self, pdfix);
};

PdfToHtml.prototype["GetVersionMajor"] = PdfToHtml.prototype.GetVersionMajor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetVersionMajor_0(self);
};

PdfToHtml.prototype["GetVersionMinor"] = PdfToHtml.prototype.GetVersionMinor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetVersionMinor_0(self);
};

PdfToHtml.prototype["GetVersionPatch"] = PdfToHtml.prototype.GetVersionPatch = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetVersionPatch_0(self);
};

PdfToHtml.prototype["GetPdfixVersionMajor"] = PdfToHtml.prototype.GetPdfixVersionMajor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetPdfixVersionMajor_0(self);
};

PdfToHtml.prototype["GetPdfixVersionMinor"] = PdfToHtml.prototype.GetPdfixVersionMinor = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetPdfixVersionMinor_0(self);
};

PdfToHtml.prototype["GetPdfixVersionPatch"] = PdfToHtml.prototype.GetPdfixVersionPatch = function() {
 var self = this.ptr;
 return _emscripten_bind_PdfToHtml_GetPdfixVersionPatch_0(self);
};

PdfToHtml.prototype["GetPdfix"] = PdfToHtml.prototype.GetPdfix = function() {
 var self = this.ptr;
 return wrapPointer(_emscripten_bind_PdfToHtml_GetPdfix_0(self), Pdfix);
};

PdfToHtml.prototype["__destroy__"] = PdfToHtml.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfToHtml___destroy___0(self);
};

function PdfHtmlDoc() {
 throw "cannot construct a PdfHtmlDoc, no constructor in IDL";
}

PdfHtmlDoc.prototype = Object.create(WrapperObject.prototype);

PdfHtmlDoc.prototype.constructor = PdfHtmlDoc;

PdfHtmlDoc.prototype.__class__ = PdfHtmlDoc;

PdfHtmlDoc.__cache__ = {};

Module["PdfHtmlDoc"] = PdfHtmlDoc;

PdfHtmlDoc.prototype["Close"] = PdfHtmlDoc.prototype.Close = function() {
 var self = this.ptr;
 return !!_emscripten_bind_PdfHtmlDoc_Close_0(self);
};

PdfHtmlDoc.prototype["Save"] = PdfHtmlDoc.prototype.Save = function(path, params, cancel_proc, cancel_data) {
 var self = this.ptr;
 ensureCache.prepare();
 if (typeof path == "object") {
  path = ensureInt8(path);
 }
 if (params && typeof params === "object") params = params.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfHtmlDoc_Save_4(self, path, params, cancel_proc, cancel_data);
};

PdfHtmlDoc.prototype["SaveDocHtml"] = PdfHtmlDoc.prototype.SaveDocHtml = function(stream, params, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfHtmlDoc_SaveDocHtml_4(self, stream, params, cancel_proc, cancel_data);
};

PdfHtmlDoc.prototype["SavePageHtml"] = PdfHtmlDoc.prototype.SavePageHtml = function(stream, params, page_num, cancel_proc, cancel_data) {
 var self = this.ptr;
 if (stream && typeof stream === "object") stream = stream.ptr;
 if (params && typeof params === "object") params = params.ptr;
 if (page_num && typeof page_num === "object") page_num = page_num.ptr;
 if (cancel_proc && typeof cancel_proc === "object") cancel_proc = cancel_proc.ptr;
 if (cancel_data && typeof cancel_data === "object") cancel_data = cancel_data.ptr;
 return !!_emscripten_bind_PdfHtmlDoc_SavePageHtml_5(self, stream, params, page_num, cancel_proc, cancel_data);
};

PdfHtmlDoc.prototype["__destroy__"] = PdfHtmlDoc.prototype.__destroy__ = function() {
 var self = this.ptr;
 _emscripten_bind_PdfHtmlDoc___destroy___0(self);
};

(function() {
 function setupEnums() {
  Module["kAuthPlatformWin"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformWin();
  Module["kAuthPlatformMac"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformMac();
  Module["kAuthPlatformLinux"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformLinux();
  Module["kAuthPlatformAndroid"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformAndroid();
  Module["kAuthPlatformiOS"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformiOS();
  Module["kAuthPlatformServer"] = _emscripten_enum_PdfAuthPlatform_kAuthPlatformServer();
  Module["kAuthOptionBasic"] = _emscripten_enum_PdfAuthOption_kAuthOptionBasic();
  Module["kAuthOptionProfessional"] = _emscripten_enum_PdfAuthOption_kAuthOptionProfessional();
  Module["kAuthOptionEnterprise"] = _emscripten_enum_PdfAuthOption_kAuthOptionEnterprise();
  Module["kAuthOptionDeveloper"] = _emscripten_enum_PdfAuthOption_kAuthOptionDeveloper();
  Module["kAuthOptionTrial"] = _emscripten_enum_PdfAuthOption_kAuthOptionTrial();
  Module["kAuthOptionLite"] = _emscripten_enum_PdfAuthOption_kAuthOptionLite();
  Module["kEventUnknown"] = _emscripten_enum_PdfEventType_kEventUnknown();
  Module["kEventDocWillSave"] = _emscripten_enum_PdfEventType_kEventDocWillSave();
  Module["kEventDocWillClose"] = _emscripten_enum_PdfEventType_kEventDocWillClose();
  Module["kEventDocDidOpen"] = _emscripten_enum_PdfEventType_kEventDocDidOpen();
  Module["kEventDocDidSave"] = _emscripten_enum_PdfEventType_kEventDocDidSave();
  Module["kEventDocWillChangePages"] = _emscripten_enum_PdfEventType_kEventDocWillChangePages();
  Module["kEventDocDidChangePages"] = _emscripten_enum_PdfEventType_kEventDocDidChangePages();
  Module["kEventDocWillDeletePages"] = _emscripten_enum_PdfEventType_kEventDocWillDeletePages();
  Module["kEventDocDidDeletePages"] = _emscripten_enum_PdfEventType_kEventDocDidDeletePages();
  Module["kEventDocWillInsertPages"] = _emscripten_enum_PdfEventType_kEventDocWillInsertPages();
  Module["kEventDocDidInsertPages"] = _emscripten_enum_PdfEventType_kEventDocDidInsertPages();
  Module["kEventDocWillMovePages"] = _emscripten_enum_PdfEventType_kEventDocWillMovePages();
  Module["kEventDocDidMovePages"] = _emscripten_enum_PdfEventType_kEventDocDidMovePages();
  Module["kEventDocWillReplacePages"] = _emscripten_enum_PdfEventType_kEventDocWillReplacePages();
  Module["kEventDocDidReplacePages"] = _emscripten_enum_PdfEventType_kEventDocDidReplacePages();
  Module["kEventAnnotWillChange"] = _emscripten_enum_PdfEventType_kEventAnnotWillChange();
  Module["kEventAnnotDidChange"] = _emscripten_enum_PdfEventType_kEventAnnotDidChange();
  Module["kEventPageWillAddAnnot"] = _emscripten_enum_PdfEventType_kEventPageWillAddAnnot();
  Module["kEventPageWillRemoveAnnot"] = _emscripten_enum_PdfEventType_kEventPageWillRemoveAnnot();
  Module["kEventPageDidAddAnnot"] = _emscripten_enum_PdfEventType_kEventPageDidAddAnnot();
  Module["kEventPageDidRemoveAnnot"] = _emscripten_enum_PdfEventType_kEventPageDidRemoveAnnot();
  Module["kEventPageContentsDidChange"] = _emscripten_enum_PdfEventType_kEventPageContentsDidChange();
  Module["kDigSigBlank"] = _emscripten_enum_PdfDigSigValidState_kDigSigBlank();
  Module["kDigSigUnknown"] = _emscripten_enum_PdfDigSigValidState_kDigSigUnknown();
  Module["kDigSigInvalid"] = _emscripten_enum_PdfDigSigValidState_kDigSigInvalid();
  Module["kDigSigValid"] = _emscripten_enum_PdfDigSigValidState_kDigSigValid();
  Module["kDigSigDoubleChecked"] = _emscripten_enum_PdfDigSigValidState_kDigSigDoubleChecked();
  Module["kDigSigValidStateEnumSize"] = _emscripten_enum_PdfDigSigValidState_kDigSigValidStateEnumSize();
  Module["kAlignmentNone"] = _emscripten_enum_PdfAlignment_kAlignmentNone();
  Module["kAlignmentLeft"] = _emscripten_enum_PdfAlignment_kAlignmentLeft();
  Module["kAlignmentRight"] = _emscripten_enum_PdfAlignment_kAlignmentRight();
  Module["kAlignmentJustify"] = _emscripten_enum_PdfAlignment_kAlignmentJustify();
  Module["kAlignmentTop"] = _emscripten_enum_PdfAlignment_kAlignmentTop();
  Module["kAlignmentBottom"] = _emscripten_enum_PdfAlignment_kAlignmentBottom();
  Module["kAlignmentCenter"] = _emscripten_enum_PdfAlignment_kAlignmentCenter();
  Module["kRotate0"] = _emscripten_enum_PdfRotate_kRotate0();
  Module["kRotate90"] = _emscripten_enum_PdfRotate_kRotate90();
  Module["kRotate180"] = _emscripten_enum_PdfRotate_kRotate180();
  Module["kRotate270"] = _emscripten_enum_PdfRotate_kRotate270();
  Module["kPdsUnknown"] = _emscripten_enum_PdfObjectType_kPdsUnknown();
  Module["kPdsBoolean"] = _emscripten_enum_PdfObjectType_kPdsBoolean();
  Module["kPdsNumber"] = _emscripten_enum_PdfObjectType_kPdsNumber();
  Module["kPdsString"] = _emscripten_enum_PdfObjectType_kPdsString();
  Module["kPdsName"] = _emscripten_enum_PdfObjectType_kPdsName();
  Module["kPdsArray"] = _emscripten_enum_PdfObjectType_kPdsArray();
  Module["kPdsDictionary"] = _emscripten_enum_PdfObjectType_kPdsDictionary();
  Module["kPdsStream"] = _emscripten_enum_PdfObjectType_kPdsStream();
  Module["kPdsNull"] = _emscripten_enum_PdfObjectType_kPdsNull();
  Module["kPdsReference"] = _emscripten_enum_PdfObjectType_kPdsReference();
  Module["kPdsPageUnknown"] = _emscripten_enum_PdfPageObjectType_kPdsPageUnknown();
  Module["kPdsPageText"] = _emscripten_enum_PdfPageObjectType_kPdsPageText();
  Module["kPdsPagePath"] = _emscripten_enum_PdfPageObjectType_kPdsPagePath();
  Module["kPdsPageImage"] = _emscripten_enum_PdfPageObjectType_kPdsPageImage();
  Module["kPdsPageShading"] = _emscripten_enum_PdfPageObjectType_kPdsPageShading();
  Module["kPdsPageForm"] = _emscripten_enum_PdfPageObjectType_kPdsPageForm();
  Module["kPdeUnknown"] = _emscripten_enum_PdfElementType_kPdeUnknown();
  Module["kPdeText"] = _emscripten_enum_PdfElementType_kPdeText();
  Module["kPdeTextLine"] = _emscripten_enum_PdfElementType_kPdeTextLine();
  Module["kPdeWord"] = _emscripten_enum_PdfElementType_kPdeWord();
  Module["kPdeTextRun"] = _emscripten_enum_PdfElementType_kPdeTextRun();
  Module["kPdeImage"] = _emscripten_enum_PdfElementType_kPdeImage();
  Module["kPdeContainer"] = _emscripten_enum_PdfElementType_kPdeContainer();
  Module["kPdeList"] = _emscripten_enum_PdfElementType_kPdeList();
  Module["kPdeLine"] = _emscripten_enum_PdfElementType_kPdeLine();
  Module["kPdeRect"] = _emscripten_enum_PdfElementType_kPdeRect();
  Module["kPdeTable"] = _emscripten_enum_PdfElementType_kPdeTable();
  Module["kPdeCell"] = _emscripten_enum_PdfElementType_kPdeCell();
  Module["kPdeToc"] = _emscripten_enum_PdfElementType_kPdeToc();
  Module["kPdeFormField"] = _emscripten_enum_PdfElementType_kPdeFormField();
  Module["kPdeHeader"] = _emscripten_enum_PdfElementType_kPdeHeader();
  Module["kPdeFooter"] = _emscripten_enum_PdfElementType_kPdeFooter();
  Module["kPdeAnnot"] = _emscripten_enum_PdfElementType_kPdeAnnot();
  Module["kPdeContainerUnknown"] = _emscripten_enum_PdfContainerType_kPdeContainerUnknown();
  Module["kPdeContainerPage"] = _emscripten_enum_PdfContainerType_kPdeContainerPage();
  Module["kPdeContainerArt"] = _emscripten_enum_PdfContainerType_kPdeContainerArt();
  Module["kPdeContainerCol"] = _emscripten_enum_PdfContainerType_kPdeContainerCol();
  Module["kPdeContainerRow"] = _emscripten_enum_PdfContainerType_kPdeContainerRow();
  Module["kPdeContainerSplitter"] = _emscripten_enum_PdfContainerType_kPdeContainerSplitter();
  Module["kTagUnknown"] = _emscripten_enum_PdfTagType_kTagUnknown();
  Module["kTagSect"] = _emscripten_enum_PdfTagType_kTagSect();
  Module["kTagArt"] = _emscripten_enum_PdfTagType_kTagArt();
  Module["kPdfLineCapButt"] = _emscripten_enum_PdfLineCap_kPdfLineCapButt();
  Module["kPdfLineCapRound"] = _emscripten_enum_PdfLineCap_kPdfLineCapRound();
  Module["kPdfLineCapSquare"] = _emscripten_enum_PdfLineCap_kPdfLineCapSquare();
  Module["kPdfLineJoinMiter"] = _emscripten_enum_PdfLineJoin_kPdfLineJoinMiter();
  Module["kPdfLineJoinRound"] = _emscripten_enum_PdfLineJoin_kPdfLineJoinRound();
  Module["kPdfLineJoinBevel"] = _emscripten_enum_PdfLineJoin_kPdfLineJoinBevel();
  Module["kFillTypeNone"] = _emscripten_enum_PdfFillType_kFillTypeNone();
  Module["kFillTypeSolid"] = _emscripten_enum_PdfFillType_kFillTypeSolid();
  Module["kFillTypePattern"] = _emscripten_enum_PdfFillType_kFillTypePattern();
  Module["kTextAlignmentNone"] = _emscripten_enum_PdfTextAlignment_kTextAlignmentNone();
  Module["kTextAlignmentLeft"] = _emscripten_enum_PdfTextAlignment_kTextAlignmentLeft();
  Module["kTextAlignmentRight"] = _emscripten_enum_PdfTextAlignment_kTextAlignmentRight();
  Module["kTextAlignmentCenter"] = _emscripten_enum_PdfTextAlignment_kTextAlignmentCenter();
  Module["kTextAlignmentJustify"] = _emscripten_enum_PdfTextAlignment_kTextAlignmentJustify();
  Module["kAnnotUnknown"] = _emscripten_enum_PdfAnnotSubtype_kAnnotUnknown();
  Module["kAnnotText"] = _emscripten_enum_PdfAnnotSubtype_kAnnotText();
  Module["kAnnotLink"] = _emscripten_enum_PdfAnnotSubtype_kAnnotLink();
  Module["kAnnotFreeText"] = _emscripten_enum_PdfAnnotSubtype_kAnnotFreeText();
  Module["kAnnotLine"] = _emscripten_enum_PdfAnnotSubtype_kAnnotLine();
  Module["kAnnotSquare"] = _emscripten_enum_PdfAnnotSubtype_kAnnotSquare();
  Module["kAnnotCircle"] = _emscripten_enum_PdfAnnotSubtype_kAnnotCircle();
  Module["kAnnotPolygon"] = _emscripten_enum_PdfAnnotSubtype_kAnnotPolygon();
  Module["kAnnotPolyLine"] = _emscripten_enum_PdfAnnotSubtype_kAnnotPolyLine();
  Module["kAnnotHighlight"] = _emscripten_enum_PdfAnnotSubtype_kAnnotHighlight();
  Module["kAnnotUnderline"] = _emscripten_enum_PdfAnnotSubtype_kAnnotUnderline();
  Module["kAnnotSquiggly"] = _emscripten_enum_PdfAnnotSubtype_kAnnotSquiggly();
  Module["kAnnotStrikeOut"] = _emscripten_enum_PdfAnnotSubtype_kAnnotStrikeOut();
  Module["kAnnotStamp"] = _emscripten_enum_PdfAnnotSubtype_kAnnotStamp();
  Module["kAnnotCaret"] = _emscripten_enum_PdfAnnotSubtype_kAnnotCaret();
  Module["kAnnotInk"] = _emscripten_enum_PdfAnnotSubtype_kAnnotInk();
  Module["kAnnotPopup"] = _emscripten_enum_PdfAnnotSubtype_kAnnotPopup();
  Module["kAnnotFileAttachment"] = _emscripten_enum_PdfAnnotSubtype_kAnnotFileAttachment();
  Module["kAnnotSound"] = _emscripten_enum_PdfAnnotSubtype_kAnnotSound();
  Module["kAnnotMovie"] = _emscripten_enum_PdfAnnotSubtype_kAnnotMovie();
  Module["kAnnotWidget"] = _emscripten_enum_PdfAnnotSubtype_kAnnotWidget();
  Module["kAnnotScreen"] = _emscripten_enum_PdfAnnotSubtype_kAnnotScreen();
  Module["kAnnotPrinterMark"] = _emscripten_enum_PdfAnnotSubtype_kAnnotPrinterMark();
  Module["kAnnotTrapNet"] = _emscripten_enum_PdfAnnotSubtype_kAnnotTrapNet();
  Module["kAnnotWatermark"] = _emscripten_enum_PdfAnnotSubtype_kAnnotWatermark();
  Module["kAnnot3D"] = _emscripten_enum_PdfAnnotSubtype_kAnnot3D();
  Module["kAnnotRedact"] = _emscripten_enum_PdfAnnotSubtype_kAnnotRedact();
  Module["kBorderSolid"] = _emscripten_enum_PdfBorderStyle_kBorderSolid();
  Module["kBorderDashed"] = _emscripten_enum_PdfBorderStyle_kBorderDashed();
  Module["kBorderBeveled"] = _emscripten_enum_PdfBorderStyle_kBorderBeveled();
  Module["kBorderInset"] = _emscripten_enum_PdfBorderStyle_kBorderInset();
  Module["kBorderUnderline"] = _emscripten_enum_PdfBorderStyle_kBorderUnderline();
  Module["kFieldUnknown"] = _emscripten_enum_PdfFieldType_kFieldUnknown();
  Module["kFieldButton"] = _emscripten_enum_PdfFieldType_kFieldButton();
  Module["kFieldRadio"] = _emscripten_enum_PdfFieldType_kFieldRadio();
  Module["kFieldCheck"] = _emscripten_enum_PdfFieldType_kFieldCheck();
  Module["kFieldText"] = _emscripten_enum_PdfFieldType_kFieldText();
  Module["kFieldCombo"] = _emscripten_enum_PdfFieldType_kFieldCombo();
  Module["kFieldList"] = _emscripten_enum_PdfFieldType_kFieldList();
  Module["kFieldSignature"] = _emscripten_enum_PdfFieldType_kFieldSignature();
  Module["kActionEventAnnotEnter"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotEnter();
  Module["kActionEventAnnotExit"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotExit();
  Module["kActionEventAnnotMouseDown"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotMouseDown();
  Module["kActionEventAnnotMouseUp"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotMouseUp();
  Module["kActionEventAnnotFocus"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotFocus();
  Module["kActionEventAnnotBlur"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotBlur();
  Module["kActionEventAnnotPageOpen"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotPageOpen();
  Module["kActionEventAnnotPageClose"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotPageClose();
  Module["kActionEventAnnotPageVisible"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotPageVisible();
  Module["kActionEventAnnotPageInvisible"] = _emscripten_enum_PdfActionEventType_kActionEventAnnotPageInvisible();
  Module["kActionEventPageOpen"] = _emscripten_enum_PdfActionEventType_kActionEventPageOpen();
  Module["kActionEventPageClose"] = _emscripten_enum_PdfActionEventType_kActionEventPageClose();
  Module["kActionEventFieldKeystroke"] = _emscripten_enum_PdfActionEventType_kActionEventFieldKeystroke();
  Module["kActionEventFieldFormat"] = _emscripten_enum_PdfActionEventType_kActionEventFieldFormat();
  Module["kActionEventFieldValidate"] = _emscripten_enum_PdfActionEventType_kActionEventFieldValidate();
  Module["kActionEventFieldCalculate"] = _emscripten_enum_PdfActionEventType_kActionEventFieldCalculate();
  Module["kActionEventDocWillClose"] = _emscripten_enum_PdfActionEventType_kActionEventDocWillClose();
  Module["kActionEventDocWillSave"] = _emscripten_enum_PdfActionEventType_kActionEventDocWillSave();
  Module["kActionEventDocDidSave"] = _emscripten_enum_PdfActionEventType_kActionEventDocDidSave();
  Module["kActionEventDocWillPrint"] = _emscripten_enum_PdfActionEventType_kActionEventDocWillPrint();
  Module["kActionEventDocDidPrint"] = _emscripten_enum_PdfActionEventType_kActionEventDocDidPrint();
  Module["kActionUnknown"] = _emscripten_enum_PdfActionType_kActionUnknown();
  Module["kActionGoTo"] = _emscripten_enum_PdfActionType_kActionGoTo();
  Module["kActionGoToR"] = _emscripten_enum_PdfActionType_kActionGoToR();
  Module["kActionGoToE"] = _emscripten_enum_PdfActionType_kActionGoToE();
  Module["kActionLaunch"] = _emscripten_enum_PdfActionType_kActionLaunch();
  Module["kActionThread"] = _emscripten_enum_PdfActionType_kActionThread();
  Module["kActionURI"] = _emscripten_enum_PdfActionType_kActionURI();
  Module["kActionSound"] = _emscripten_enum_PdfActionType_kActionSound();
  Module["kActionMovie"] = _emscripten_enum_PdfActionType_kActionMovie();
  Module["kActionHide"] = _emscripten_enum_PdfActionType_kActionHide();
  Module["kActionNamed"] = _emscripten_enum_PdfActionType_kActionNamed();
  Module["kActionSubmitForm"] = _emscripten_enum_PdfActionType_kActionSubmitForm();
  Module["kActionResetForm"] = _emscripten_enum_PdfActionType_kActionResetForm();
  Module["kActionImportData"] = _emscripten_enum_PdfActionType_kActionImportData();
  Module["kActionJavaScript"] = _emscripten_enum_PdfActionType_kActionJavaScript();
  Module["kActionSetOCGState"] = _emscripten_enum_PdfActionType_kActionSetOCGState();
  Module["kActionRendition"] = _emscripten_enum_PdfActionType_kActionRendition();
  Module["kActionTrans"] = _emscripten_enum_PdfActionType_kActionTrans();
  Module["kActionGoTo3DView"] = _emscripten_enum_PdfActionType_kActionGoTo3DView();
  Module["kImageFormatPng"] = _emscripten_enum_PdfImageFormat_kImageFormatPng();
  Module["kImageFormatJpg"] = _emscripten_enum_PdfImageFormat_kImageFormatJpg();
  Module["kImageFormatBmp"] = _emscripten_enum_PdfImageFormat_kImageFormatBmp();
  Module["kImageFormatEmf"] = _emscripten_enum_PdfImageFormat_kImageFormatEmf();
  Module["kFontAnsiCharset"] = _emscripten_enum_PdfFontCharset_kFontAnsiCharset();
  Module["kFontDefaultCharset"] = _emscripten_enum_PdfFontCharset_kFontDefaultCharset();
  Module["kFontSymbolCharset"] = _emscripten_enum_PdfFontCharset_kFontSymbolCharset();
  Module["kFontUnknownCharset"] = _emscripten_enum_PdfFontCharset_kFontUnknownCharset();
  Module["kFontMacintoshCharset"] = _emscripten_enum_PdfFontCharset_kFontMacintoshCharset();
  Module["kFontShiftJISCharset"] = _emscripten_enum_PdfFontCharset_kFontShiftJISCharset();
  Module["kFontHangeulCharset"] = _emscripten_enum_PdfFontCharset_kFontHangeulCharset();
  Module["kFontKoreanCharset"] = _emscripten_enum_PdfFontCharset_kFontKoreanCharset();
  Module["kFontGB2312Charset"] = _emscripten_enum_PdfFontCharset_kFontGB2312Charset();
  Module["kFontCHineseBig5Charset"] = _emscripten_enum_PdfFontCharset_kFontCHineseBig5Charset();
  Module["kFontGreekCharset"] = _emscripten_enum_PdfFontCharset_kFontGreekCharset();
  Module["kFontTurkishCharset"] = _emscripten_enum_PdfFontCharset_kFontTurkishCharset();
  Module["kFontVietnameseCharset"] = _emscripten_enum_PdfFontCharset_kFontVietnameseCharset();
  Module["kFontHebrewCharset"] = _emscripten_enum_PdfFontCharset_kFontHebrewCharset();
  Module["kFontArabicCharset"] = _emscripten_enum_PdfFontCharset_kFontArabicCharset();
  Module["kFontArabicTCharset"] = _emscripten_enum_PdfFontCharset_kFontArabicTCharset();
  Module["kFontArabicUCharset"] = _emscripten_enum_PdfFontCharset_kFontArabicUCharset();
  Module["kFontHebrewUCharset"] = _emscripten_enum_PdfFontCharset_kFontHebrewUCharset();
  Module["kFontBalticCharset"] = _emscripten_enum_PdfFontCharset_kFontBalticCharset();
  Module["kFontRussianCharset"] = _emscripten_enum_PdfFontCharset_kFontRussianCharset();
  Module["kFontThaiCharset"] = _emscripten_enum_PdfFontCharset_kFontThaiCharset();
  Module["kFontEastEuropeCharset"] = _emscripten_enum_PdfFontCharset_kFontEastEuropeCharset();
  Module["kAllPages"] = _emscripten_enum_PdfPageRangeType_kAllPages();
  Module["kEvenPagesOnly"] = _emscripten_enum_PdfPageRangeType_kEvenPagesOnly();
  Module["kOddPagesOnly"] = _emscripten_enum_PdfPageRangeType_kOddPagesOnly();
  Module["kFontUnknownType"] = _emscripten_enum_PdfFontType_kFontUnknownType();
  Module["kFontType1"] = _emscripten_enum_PdfFontType_kFontType1();
  Module["kFontTrueType"] = _emscripten_enum_PdfFontType_kFontTrueType();
  Module["kFontType3"] = _emscripten_enum_PdfFontType_kFontType3();
  Module["kFontCIDFont"] = _emscripten_enum_PdfFontType_kFontCIDFont();
  Module["kFontFormatTtf"] = _emscripten_enum_PdfFontFormat_kFontFormatTtf();
  Module["kFontFormatWoff"] = _emscripten_enum_PdfFontFormat_kFontFormatWoff();
  Module["kPdfZoomXYZ"] = _emscripten_enum_PdfDestZoomType_kPdfZoomXYZ();
  Module["kPdfZoomFitPage"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitPage();
  Module["kPdfZoomFitHorz"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitHorz();
  Module["kPdfZoomFitVert"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitVert();
  Module["kPdfZoomFitRect"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitRect();
  Module["kPdfZoomFitBbox"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitBbox();
  Module["kPdfZoomFitBHorz"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitBHorz();
  Module["kPdfZoomFitBVert"] = _emscripten_enum_PdfDestZoomType_kPdfZoomFitBVert();
  Module["kDigSigOpenSSL"] = _emscripten_enum_PdfDigSigType_kDigSigOpenSSL();
  Module["kDigSigCert"] = _emscripten_enum_PdfDigSigType_kDigSigCert();
  Module["kDigSigCustom"] = _emscripten_enum_PdfDigSigType_kDigSigCustom();
  Module["kImageFigure"] = _emscripten_enum_PdfImageType_kImageFigure();
  Module["kImageImage"] = _emscripten_enum_PdfImageType_kImageImage();
  Module["kImagePath"] = _emscripten_enum_PdfImageType_kImagePath();
  Module["kImageRect"] = _emscripten_enum_PdfImageType_kImageRect();
  Module["kImageShading"] = _emscripten_enum_PdfImageType_kImageShading();
  Module["kImageForm"] = _emscripten_enum_PdfImageType_kImageForm();
  Module["kListNone"] = _emscripten_enum_PdfListType_kListNone();
  Module["kListUnordered"] = _emscripten_enum_PdfListType_kListUnordered();
  Module["kListOrdered"] = _emscripten_enum_PdfListType_kListOrdered();
  Module["kListDecimal"] = _emscripten_enum_PdfListType_kListDecimal();
  Module["kListRomanUpper"] = _emscripten_enum_PdfListType_kListRomanUpper();
  Module["kListRomanLower"] = _emscripten_enum_PdfListType_kListRomanLower();
  Module["kListLetterUpper"] = _emscripten_enum_PdfListType_kListLetterUpper();
  Module["kListLetterLower"] = _emscripten_enum_PdfListType_kListLetterLower();
  Module["kTextNormal"] = _emscripten_enum_PdfTextStyle_kTextNormal();
  Module["kTextH1"] = _emscripten_enum_PdfTextStyle_kTextH1();
  Module["kTextH2"] = _emscripten_enum_PdfTextStyle_kTextH2();
  Module["kTextH3"] = _emscripten_enum_PdfTextStyle_kTextH3();
  Module["kTextH4"] = _emscripten_enum_PdfTextStyle_kTextH4();
  Module["kTextH5"] = _emscripten_enum_PdfTextStyle_kTextH5();
  Module["kTextH6"] = _emscripten_enum_PdfTextStyle_kTextH6();
  Module["kTextH7"] = _emscripten_enum_PdfTextStyle_kTextH7();
  Module["kTextH8"] = _emscripten_enum_PdfTextStyle_kTextH8();
  Module["kTextNote"] = _emscripten_enum_PdfTextStyle_kTextNote();
  Module["kTextTitle"] = _emscripten_enum_PdfTextStyle_kTextTitle();
  Module["kPsWrite"] = _emscripten_enum_PsFileMode_kPsWrite();
  Module["kPsReadOnly"] = _emscripten_enum_PsFileMode_kPsReadOnly();
  Module["kPsTruncate"] = _emscripten_enum_PsFileMode_kPsTruncate();
  Module["kAlternatePdf"] = _emscripten_enum_PdfAlternateType_kAlternatePdf();
  Module["kAlternateHtml"] = _emscripten_enum_PdfAlternateType_kAlternateHtml();
  Module["kCSSMediaTypeAll"] = _emscripten_enum_PdfMediaType_kCSSMediaTypeAll();
  Module["kCSSMediaTypePrint"] = _emscripten_enum_PdfMediaType_kCSSMediaTypePrint();
  Module["kCSSMediaTypeScreen"] = _emscripten_enum_PdfMediaType_kCSSMediaTypeScreen();
  Module["kCSSMediaTypeSpeech"] = _emscripten_enum_PdfMediaType_kCSSMediaTypeSpeech();
  Module["kImageDIBFormatArgb"] = _emscripten_enum_PsImageDIBFormat_kImageDIBFormatArgb();
  Module["kDataFormatJson"] = _emscripten_enum_PsDataFormat_kDataFormatJson();
  Module["kDataFormatXml"] = _emscripten_enum_PsDataFormat_kDataFormatXml();
  Module["kDataFormatTxt"] = _emscripten_enum_PsDataFormat_kDataFormatTxt();
  Module["kFileStream"] = _emscripten_enum_PdfStreamType_kFileStream();
  Module["kMemoryStream"] = _emscripten_enum_PdfStreamType_kMemoryStream();
  Module["kProcStream"] = _emscripten_enum_PdfStreamType_kProcStream();
  Module["kPdsStructKidInvalid"] = _emscripten_enum_PdfStructElementType_kPdsStructKidInvalid();
  Module["kPdsStructKidElement"] = _emscripten_enum_PdfStructElementType_kPdsStructKidElement();
  Module["kPdsStructKidPageContent"] = _emscripten_enum_PdfStructElementType_kPdsStructKidPageContent();
  Module["kPdsStructKidStreamContent"] = _emscripten_enum_PdfStructElementType_kPdsStructKidStreamContent();
  Module["kPdsStructKidObject"] = _emscripten_enum_PdfStructElementType_kPdsStructKidObject();
  Module["kAuthorizationStandard"] = _emscripten_enum_PdfAuthorizationType_kAuthorizationStandard();
  Module["kAuthorizationAccount"] = _emscripten_enum_PdfAuthorizationType_kAuthorizationAccount();
  Module["kDestFitUnknown"] = _emscripten_enum_PdfDestFitType_kDestFitUnknown();
  Module["kDestFitXYZ"] = _emscripten_enum_PdfDestFitType_kDestFitXYZ();
  Module["kDestFit"] = _emscripten_enum_PdfDestFitType_kDestFit();
  Module["kDestFitH"] = _emscripten_enum_PdfDestFitType_kDestFitH();
  Module["kDestFitV"] = _emscripten_enum_PdfDestFitType_kDestFitV();
  Module["kDestFitR"] = _emscripten_enum_PdfDestFitType_kDestFitR();
  Module["kDestFitB"] = _emscripten_enum_PdfDestFitType_kDestFitB();
  Module["kDestFitBH"] = _emscripten_enum_PdfDestFitType_kDestFitBH();
  Module["kDestFitBV"] = _emscripten_enum_PdfDestFitType_kDestFitBV();
  Module["kLabelNo"] = _emscripten_enum_PdfLabelType_kLabelNo();
  Module["kLabelNone"] = _emscripten_enum_PdfLabelType_kLabelNone();
  Module["kLabel"] = _emscripten_enum_PdfLabelType_kLabel();
  Module["kLabelLevel1"] = _emscripten_enum_PdfLabelType_kLabelLevel1();
  Module["kLabelLevel2"] = _emscripten_enum_PdfLabelType_kLabelLevel2();
  Module["kLabelLevel3"] = _emscripten_enum_PdfLabelType_kLabelLevel3();
  Module["kLabelLevel4"] = _emscripten_enum_PdfLabelType_kLabelLevel4();
  Module["kAVCommandReady"] = _emscripten_enum_PsCommandStatus_kAVCommandReady();
  Module["kAVCommandWorking"] = _emscripten_enum_PsCommandStatus_kAVCommandWorking();
  Module["kAVCommandDone"] = _emscripten_enum_PsCommandStatus_kAVCommandDone();
  Module["kAVCommandCanceled"] = _emscripten_enum_PsCommandStatus_kAVCommandCanceled();
  Module["kAVCommandInError"] = _emscripten_enum_PsCommandStatus_kAVCommandInError();
  Module["kAppearanceNormal"] = _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceNormal();
  Module["kAppearanceRollover"] = _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceRollover();
  Module["kAppearanceDown"] = _emscripten_enum_PdfAnnotAppearanceMode_kAppearanceDown();
  Module["kPathLineTo"] = _emscripten_enum_PdsPathPointType_kPathLineTo();
  Module["kPathBezierTo"] = _emscripten_enum_PdsPathPointType_kPathBezierTo();
  Module["kPathMoveTo"] = _emscripten_enum_PdsPathPointType_kPathMoveTo();
  Module["kBlendModeNormal"] = _emscripten_enum_PdfBlendMode_kBlendModeNormal();
  Module["kBlendModeMultiply"] = _emscripten_enum_PdfBlendMode_kBlendModeMultiply();
  Module["kBlendModeScreen"] = _emscripten_enum_PdfBlendMode_kBlendModeScreen();
  Module["kBlendModeOverlay"] = _emscripten_enum_PdfBlendMode_kBlendModeOverlay();
  Module["kBlendModeDarken"] = _emscripten_enum_PdfBlendMode_kBlendModeDarken();
  Module["kBlendModeLighten"] = _emscripten_enum_PdfBlendMode_kBlendModeLighten();
  Module["kBlendModeColorDodge"] = _emscripten_enum_PdfBlendMode_kBlendModeColorDodge();
  Module["kBlendModeColorBurn"] = _emscripten_enum_PdfBlendMode_kBlendModeColorBurn();
  Module["kBlendModeHardLight"] = _emscripten_enum_PdfBlendMode_kBlendModeHardLight();
  Module["kBlendModeSoftLight"] = _emscripten_enum_PdfBlendMode_kBlendModeSoftLight();
  Module["kBlendModeDifference"] = _emscripten_enum_PdfBlendMode_kBlendModeDifference();
  Module["kBlendModeExclusion"] = _emscripten_enum_PdfBlendMode_kBlendModeExclusion();
  Module["kBlendModeHue"] = _emscripten_enum_PdfBlendMode_kBlendModeHue();
  Module["kBlendModeSaturation"] = _emscripten_enum_PdfBlendMode_kBlendModeSaturation();
  Module["kBlendModeColor"] = _emscripten_enum_PdfBlendMode_kBlendModeColor();
  Module["kBlendModeLuminosity"] = _emscripten_enum_PdfBlendMode_kBlendModeLuminosity();
  Module["kFillRuleNone"] = _emscripten_enum_PdfFillRule_kFillRuleNone();
  Module["kFillRuleEvenOdd"] = _emscripten_enum_PdfFillRule_kFillRuleEvenOdd();
  Module["kFillRuleWinding"] = _emscripten_enum_PdfFillRule_kFillRuleWinding();
  Module["kSaveIncremental"] = _emscripten_enum_PdfixEnum_kSaveIncremental();
  Module["kSaveFull"] = _emscripten_enum_PdfixEnum_kSaveFull();
  Module["kSaveUncompressed"] = _emscripten_enum_PdfixEnum_kSaveUncompressed();
  Module["kSaveCompressedStructureOnly"] = _emscripten_enum_PdfixEnum_kSaveCompressedStructureOnly();
  Module["kAnnotFlagNone"] = _emscripten_enum_PdfixEnum_kAnnotFlagNone();
  Module["kAnnotFlagInvisible"] = _emscripten_enum_PdfixEnum_kAnnotFlagInvisible();
  Module["kAnnotFlagHidden"] = _emscripten_enum_PdfixEnum_kAnnotFlagHidden();
  Module["kAnnotFlagPrint"] = _emscripten_enum_PdfixEnum_kAnnotFlagPrint();
  Module["kAnnotFlagNoZoom"] = _emscripten_enum_PdfixEnum_kAnnotFlagNoZoom();
  Module["kAnnotFlagNoRotate"] = _emscripten_enum_PdfixEnum_kAnnotFlagNoRotate();
  Module["kAnnotFlagNoView"] = _emscripten_enum_PdfixEnum_kAnnotFlagNoView();
  Module["kAnnotFlagReadOnly"] = _emscripten_enum_PdfixEnum_kAnnotFlagReadOnly();
  Module["kAnnotFlagLocked"] = _emscripten_enum_PdfixEnum_kAnnotFlagLocked();
  Module["kAnnotFlagToggleNoView"] = _emscripten_enum_PdfixEnum_kAnnotFlagToggleNoView();
  Module["kAnnotFlagLockedContents"] = _emscripten_enum_PdfixEnum_kAnnotFlagLockedContents();
  Module["kRemoveAnnotSingle"] = _emscripten_enum_PdfixEnum_kRemoveAnnotSingle();
  Module["kRemoveAnnotPopup"] = _emscripten_enum_PdfixEnum_kRemoveAnnotPopup();
  Module["kRemoveAnnotReply"] = _emscripten_enum_PdfixEnum_kRemoveAnnotReply();
  Module["kTextFlagNone"] = _emscripten_enum_PdfixEnum_kTextFlagNone();
  Module["kTextFlagUnderline"] = _emscripten_enum_PdfixEnum_kTextFlagUnderline();
  Module["kTextFlagStrikeout"] = _emscripten_enum_PdfixEnum_kTextFlagStrikeout();
  Module["kTextFlagHighlight"] = _emscripten_enum_PdfixEnum_kTextFlagHighlight();
  Module["kTextFlagSubscript"] = _emscripten_enum_PdfixEnum_kTextFlagSubscript();
  Module["kTextFlagSuperscript"] = _emscripten_enum_PdfixEnum_kTextFlagSuperscript();
  Module["kTextFlagNoUnicode"] = _emscripten_enum_PdfixEnum_kTextFlagNoUnicode();
  Module["kTextFlagPatternFill"] = _emscripten_enum_PdfixEnum_kTextFlagPatternFill();
  Module["kTextFlagPatternStroke"] = _emscripten_enum_PdfixEnum_kTextFlagPatternStroke();
  Module["kTextFlagWhiteSpace"] = _emscripten_enum_PdfixEnum_kTextFlagWhiteSpace();
  Module["kTextFlagUnicode"] = _emscripten_enum_PdfixEnum_kTextFlagUnicode();
  Module["kFieldFlagNone"] = _emscripten_enum_PdfixEnum_kFieldFlagNone();
  Module["kFieldFlagReadOnly"] = _emscripten_enum_PdfixEnum_kFieldFlagReadOnly();
  Module["kFieldFlagRequired"] = _emscripten_enum_PdfixEnum_kFieldFlagRequired();
  Module["kFieldFlagNoExport"] = _emscripten_enum_PdfixEnum_kFieldFlagNoExport();
  Module["kFieldFlagMultiline"] = _emscripten_enum_PdfixEnum_kFieldFlagMultiline();
  Module["kFieldFlagPassword"] = _emscripten_enum_PdfixEnum_kFieldFlagPassword();
  Module["kFieldFlagNoToggleToOff"] = _emscripten_enum_PdfixEnum_kFieldFlagNoToggleToOff();
  Module["kFieldFlagRadio"] = _emscripten_enum_PdfixEnum_kFieldFlagRadio();
  Module["kFieldFlagPushButton"] = _emscripten_enum_PdfixEnum_kFieldFlagPushButton();
  Module["kFieldFlagCombo"] = _emscripten_enum_PdfixEnum_kFieldFlagCombo();
  Module["kFieldFlagEdit"] = _emscripten_enum_PdfixEnum_kFieldFlagEdit();
  Module["kFieldFlagSort"] = _emscripten_enum_PdfixEnum_kFieldFlagSort();
  Module["kFieldFlagMultiSelect"] = _emscripten_enum_PdfixEnum_kFieldFlagMultiSelect();
  Module["kFieldFlagDoNotSpellCheck"] = _emscripten_enum_PdfixEnum_kFieldFlagDoNotSpellCheck();
  Module["kFieldFlagDCommitOnSelChange"] = _emscripten_enum_PdfixEnum_kFieldFlagDCommitOnSelChange();
  Module["kFieldFlagFileSelect"] = _emscripten_enum_PdfixEnum_kFieldFlagFileSelect();
  Module["kFieldFlagDoNotScroll"] = _emscripten_enum_PdfixEnum_kFieldFlagDoNotScroll();
  Module["kFieldFlagComb"] = _emscripten_enum_PdfixEnum_kFieldFlagComb();
  Module["kFieldFlagRichText"] = _emscripten_enum_PdfixEnum_kFieldFlagRichText();
  Module["kFieldFlagRadiosInUnison"] = _emscripten_enum_PdfixEnum_kFieldFlagRadiosInUnison();
  Module["kRenderAnnot"] = _emscripten_enum_PdfixEnum_kRenderAnnot();
  Module["kRenderLCDText"] = _emscripten_enum_PdfixEnum_kRenderLCDText();
  Module["kRenderNoNativeText"] = _emscripten_enum_PdfixEnum_kRenderNoNativeText();
  Module["kRenderGrayscale"] = _emscripten_enum_PdfixEnum_kRenderGrayscale();
  Module["kRenderLimitedCache"] = _emscripten_enum_PdfixEnum_kRenderLimitedCache();
  Module["kRenderForceHalftone"] = _emscripten_enum_PdfixEnum_kRenderForceHalftone();
  Module["kRenderPrinting"] = _emscripten_enum_PdfixEnum_kRenderPrinting();
  Module["kRenderNoText"] = _emscripten_enum_PdfixEnum_kRenderNoText();
  Module["kRenderNoBackground"] = _emscripten_enum_PdfixEnum_kRenderNoBackground();
  Module["kFontFixedPitch"] = _emscripten_enum_PdfixEnum_kFontFixedPitch();
  Module["kFontSerif"] = _emscripten_enum_PdfixEnum_kFontSerif();
  Module["kFontSymbolic"] = _emscripten_enum_PdfixEnum_kFontSymbolic();
  Module["kFontScript"] = _emscripten_enum_PdfixEnum_kFontScript();
  Module["kFontNotSymbolic"] = _emscripten_enum_PdfixEnum_kFontNotSymbolic();
  Module["kFontItalic"] = _emscripten_enum_PdfixEnum_kFontItalic();
  Module["kFontAllCap"] = _emscripten_enum_PdfixEnum_kFontAllCap();
  Module["kFontSmallCap"] = _emscripten_enum_PdfixEnum_kFontSmallCap();
  Module["kFontForceBold"] = _emscripten_enum_PdfixEnum_kFontForceBold();
  Module["kContentImage"] = _emscripten_enum_PdfixEnum_kContentImage();
  Module["kContentText"] = _emscripten_enum_PdfixEnum_kContentText();
  Module["kContentPath"] = _emscripten_enum_PdfixEnum_kContentPath();
  Module["kContentForm"] = _emscripten_enum_PdfixEnum_kContentForm();
  Module["kContentShading"] = _emscripten_enum_PdfixEnum_kContentShading();
  Module["kContentTextTransparent"] = _emscripten_enum_PdfixEnum_kContentTextTransparent();
  Module["kContentTextFill"] = _emscripten_enum_PdfixEnum_kContentTextFill();
  Module["kContentTextStroke"] = _emscripten_enum_PdfixEnum_kContentTextStroke();
  Module["kTableUnknown"] = _emscripten_enum_PdfixEnum_kTableUnknown();
  Module["kTableGraphic"] = _emscripten_enum_PdfixEnum_kTableGraphic();
  Module["kTableIsolated"] = _emscripten_enum_PdfixEnum_kTableIsolated();
  Module["kTableIsolatedCol"] = _emscripten_enum_PdfixEnum_kTableIsolatedCol();
  Module["kTableIsolatedRow"] = _emscripten_enum_PdfixEnum_kTableIsolatedRow();
  Module["kTableForm"] = _emscripten_enum_PdfixEnum_kTableForm();
  Module["kTableElement"] = _emscripten_enum_PdfixEnum_kTableElement();
  Module["kWordFlagHyphen"] = _emscripten_enum_PdfixEnum_kWordFlagHyphen();
  Module["kWordFlagBullet"] = _emscripten_enum_PdfixEnum_kWordFlagBullet();
  Module["kWordFlagColon"] = _emscripten_enum_PdfixEnum_kWordFlagColon();
  Module["kWordFlagNumber"] = _emscripten_enum_PdfixEnum_kWordFlagNumber();
  Module["kWordFlagSubscript"] = _emscripten_enum_PdfixEnum_kWordFlagSubscript();
  Module["kWordFlagSupercript"] = _emscripten_enum_PdfixEnum_kWordFlagSupercript();
  Module["kWordFlagTerminal"] = _emscripten_enum_PdfixEnum_kWordFlagTerminal();
  Module["kWordFlagFirstCap"] = _emscripten_enum_PdfixEnum_kWordFlagFirstCap();
  Module["kWordFlagImage"] = _emscripten_enum_PdfixEnum_kWordFlagImage();
  Module["kWordFlagNumberingDecimal"] = _emscripten_enum_PdfixEnum_kWordFlagNumberingDecimal();
  Module["kWordFlagNumberingRoman"] = _emscripten_enum_PdfixEnum_kWordFlagNumberingRoman();
  Module["kWordFlagNumberingLetter"] = _emscripten_enum_PdfixEnum_kWordFlagNumberingLetter();
  Module["kWordFlagPageNumber"] = _emscripten_enum_PdfixEnum_kWordFlagPageNumber();
  Module["kWordFlagFilling"] = _emscripten_enum_PdfixEnum_kWordFlagFilling();
  Module["kWordFlagAllCaps"] = _emscripten_enum_PdfixEnum_kWordFlagAllCaps();
  Module["kWordFlagComma"] = _emscripten_enum_PdfixEnum_kWordFlagComma();
  Module["kWordFlagNoUnicode"] = _emscripten_enum_PdfixEnum_kWordFlagNoUnicode();
  Module["kWordFlagLetter"] = _emscripten_enum_PdfixEnum_kWordFlagLetter();
  Module["kTextLineFlagHyphen"] = _emscripten_enum_PdfixEnum_kTextLineFlagHyphen();
  Module["kTextLineFlagNewLine"] = _emscripten_enum_PdfixEnum_kTextLineFlagNewLine();
  Module["kTextLineFlagIndent"] = _emscripten_enum_PdfixEnum_kTextLineFlagIndent();
  Module["kTextLineFlagTerminal"] = _emscripten_enum_PdfixEnum_kTextLineFlagTerminal();
  Module["kTextLineFlagDropCap"] = _emscripten_enum_PdfixEnum_kTextLineFlagDropCap();
  Module["kTextLineFlagFilling"] = _emscripten_enum_PdfixEnum_kTextLineFlagFilling();
  Module["kTextLineFlagAllCaps"] = _emscripten_enum_PdfixEnum_kTextLineFlagAllCaps();
  Module["kTextFlagTableCaption"] = _emscripten_enum_PdfixEnum_kTextFlagTableCaption();
  Module["kTextFlagImageCaption"] = _emscripten_enum_PdfixEnum_kTextFlagImageCaption();
  Module["kTextFlagChartCaption"] = _emscripten_enum_PdfixEnum_kTextFlagChartCaption();
  Module["kTextFlagNoteCaption"] = _emscripten_enum_PdfixEnum_kTextFlagNoteCaption();
  Module["kTextFlagFilling"] = _emscripten_enum_PdfixEnum_kTextFlagFilling();
  Module["kTextFlagAllCaps"] = _emscripten_enum_PdfixEnum_kTextFlagAllCaps();
  Module["kElemNoJoin"] = _emscripten_enum_PdfixEnum_kElemNoJoin();
  Module["kElemNoSplit"] = _emscripten_enum_PdfixEnum_kElemNoSplit();
  Module["kElemArtifact"] = _emscripten_enum_PdfixEnum_kElemArtifact();
  Module["kElemHeader"] = _emscripten_enum_PdfixEnum_kElemHeader();
  Module["kElemFooter"] = _emscripten_enum_PdfixEnum_kElemFooter();
  Module["kElemSplitter"] = _emscripten_enum_PdfixEnum_kElemSplitter();
  Module["kElemNoTable"] = _emscripten_enum_PdfixEnum_kElemNoTable();
  Module["kElemTable"] = _emscripten_enum_PdfixEnum_kElemTable();
  Module["kElemWordSplitter"] = _emscripten_enum_PdfixEnum_kElemWordSplitter();
  Module["kPageInsertNone"] = _emscripten_enum_PdfixEnum_kPageInsertNone();
  Module["kPageInsertBookmarks"] = _emscripten_enum_PdfixEnum_kPageInsertBookmarks();
  Module["kPageInsertAll"] = _emscripten_enum_PdfixEnum_kPageInsertAll();
  Module["kContentToPage"] = _emscripten_enum_PdfixEnum_kContentToPage();
  Module["kContentToForm"] = _emscripten_enum_PdfixEnum_kContentToForm();
  Module["kContentToCharproc"] = _emscripten_enum_PdfixEnum_kContentToCharproc();
  Module["kPdfHtmlFixed"] = _emscripten_enum_PdfHtmlType_kPdfHtmlFixed();
  Module["kPdfHtmlResponsive"] = _emscripten_enum_PdfHtmlType_kPdfHtmlResponsive();
  Module["kHtmlNone"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNone();
  Module["kHtmlExportJavaScripts"] = _emscripten_enum_PdfToHtmlEnum_kHtmlExportJavaScripts();
  Module["kHtmlExportFonts"] = _emscripten_enum_PdfToHtmlEnum_kHtmlExportFonts();
  Module["kHtmlRetainFontSize"] = _emscripten_enum_PdfToHtmlEnum_kHtmlRetainFontSize();
  Module["kHtmlRetainTextColor"] = _emscripten_enum_PdfToHtmlEnum_kHtmlRetainTextColor();
  Module["kHtml41Support"] = _emscripten_enum_PdfToHtmlEnum_kHtml41Support();
  Module["kHtmlNoExternalCSS"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalCSS();
  Module["kHtmlNoExternalJS"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalJS();
  Module["kHtmlNoExternalIMG"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalIMG();
  Module["kHtmlNoExternalFONT"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNoExternalFONT();
  Module["kHtmlGrayBackground"] = _emscripten_enum_PdfToHtmlEnum_kHtmlGrayBackground();
  Module["kHtmlNoPageRender"] = _emscripten_enum_PdfToHtmlEnum_kHtmlNoPageRender();
 }
 if (runtimeInitialized) setupEnums(); else addOnPreMain(setupEnums);
})();

PdsString.prototype["GetTextCStr"] = PdsString.prototype.GetText;

PdsString.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsName.prototype["GetTextCStr"] = PdsName.prototype.GetText;

PdsName.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsArray.prototype["PutNameCStr"] = PdsArray.prototype.PutName;

PdsArray.prototype["PutName"] = function(index, value) {
 const value_s = jsStringToCString(value);
 const _ret = this.PutNameCStr(index, value_s);
 Module._free(value_s);
 return _ret;
};

PdsArray.prototype["GetTextCStr"] = PdsArray.prototype.GetText;

PdsArray.prototype["GetText"] = function(index) {
 const _len = this.GetTextCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdsDictionary.prototype["KnownCStr"] = PdsDictionary.prototype.Known;

PdsDictionary.prototype["Known"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.KnownCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetKeyCStr"] = PdsDictionary.prototype.GetKey;

PdsDictionary.prototype["GetKey"] = function(index) {
 const _len = this.GetKeyCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetKeyCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdsDictionary.prototype["GetCStr"] = PdsDictionary.prototype.Get;

PdsDictionary.prototype["Get"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutCStr"] = PdsDictionary.prototype.Put;

PdsDictionary.prototype["Put"] = function(key, value) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutCStr(key_s, value);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutBoolCStr"] = PdsDictionary.prototype.PutBool;

PdsDictionary.prototype["PutBool"] = function(key, value) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutBoolCStr(key_s, value);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutNameCStr"] = PdsDictionary.prototype.PutName;

PdsDictionary.prototype["PutName"] = function(key, value) {
 const key_s = jsStringToCString(key);
 const value_s = jsStringToCString(value);
 const _ret = this.PutNameCStr(key_s, value_s);
 Module._free(key_s);
 Module._free(value_s);
 return _ret;
};

PdsDictionary.prototype["PutStringCStr"] = PdsDictionary.prototype.PutString;

PdsDictionary.prototype["PutString"] = function(key, value) {
 const key_s = jsStringToCString(key);
 const value_s = jsStringToCString(value);
 const _ret = this.PutStringCStr(key_s, value_s);
 Module._free(key_s);
 Module._free(value_s);
 return _ret;
};

PdsDictionary.prototype["PutNumberCStr"] = PdsDictionary.prototype.PutNumber;

PdsDictionary.prototype["PutNumber"] = function(key, value) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutNumberCStr(key_s, value);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutRectCStr"] = PdsDictionary.prototype.PutRect;

PdsDictionary.prototype["PutRect"] = function(key, rect) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutRectCStr(key_s, rect);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutMatrixCStr"] = PdsDictionary.prototype.PutMatrix;

PdsDictionary.prototype["PutMatrix"] = function(key, matrix) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutMatrixCStr(key_s, matrix);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutDictCStr"] = PdsDictionary.prototype.PutDict;

PdsDictionary.prototype["PutDict"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutDictCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["PutArrayCStr"] = PdsDictionary.prototype.PutArray;

PdsDictionary.prototype["PutArray"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.PutArrayCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetDictionaryCStr"] = PdsDictionary.prototype.GetDictionary;

PdsDictionary.prototype["GetDictionary"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetDictionaryCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetArrayCStr"] = PdsDictionary.prototype.GetArray;

PdsDictionary.prototype["GetArray"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetArrayCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetStreamCStr"] = PdsDictionary.prototype.GetStream;

PdsDictionary.prototype["GetStream"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetStreamCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetStringCStr"] = PdsDictionary.prototype.GetString;

PdsDictionary.prototype["GetString"] = function(key, buffer, len) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetStringCStr(key_s, _ptr, _len);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetTextCStr"] = PdsDictionary.prototype.GetText;

PdsDictionary.prototype["GetText"] = function(key) {
 const key_s = jsStringToCString(key);
 const _len = this.GetTextCStr(key_s, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(key_s, _ptr, _len);
 Module._free(key_s);
 return fromCString(_ptr, _len);
};

PdsDictionary.prototype["GetNumberCStr"] = PdsDictionary.prototype.GetNumber;

PdsDictionary.prototype["GetNumber"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetNumberCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetIntegerCStr"] = PdsDictionary.prototype.GetInteger;

PdsDictionary.prototype["GetInteger"] = function(key, default_value) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetIntegerCStr(key_s, default_value);
 Module._free(key_s);
 return _ret;
};

PdsDictionary.prototype["GetBooleanCStr"] = PdsDictionary.prototype.GetBoolean;

PdsDictionary.prototype["GetBoolean"] = function(key, default_value) {
 const key_s = jsStringToCString(key);
 const _ret = this.GetBooleanCStr(key_s, default_value);
 Module._free(key_s);
 return _ret;
};

PdsText.prototype["GetTextCStr"] = PdsText.prototype.GetText;

PdsText.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsContentMark.prototype["GetTagNameCStr"] = PdsContentMark.prototype.GetTagName;

PdsContentMark.prototype["GetTagName"] = function(index) {
 const _len = this.GetTagNameCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTagNameCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdeElement.prototype["SetAltCStr"] = PdeElement.prototype.SetAlt;

PdeElement.prototype["SetAlt"] = function(alt) {
 const alt_s = jsStringToCString(alt);
 const _ret = this.SetAltCStr(alt_s);
 Module._free(alt_s);
 return _ret;
};

PdeElement.prototype["SetActualTextCStr"] = PdeElement.prototype.SetActualText;

PdeElement.prototype["SetActualText"] = function(text) {
 const text_s = jsStringToCString(text);
 const _ret = this.SetActualTextCStr(text_s);
 Module._free(text_s);
 return _ret;
};

PdeWord.prototype["GetTextCStr"] = PdeWord.prototype.GetText;

PdeWord.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdeWord.prototype["GetCharTextCStr"] = PdeWord.prototype.GetCharText;

PdeWord.prototype["GetCharText"] = function(index) {
 const _len = this.GetCharTextCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetCharTextCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdeTextLine.prototype["GetTextCStr"] = PdeTextLine.prototype.GetText;

PdeTextLine.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdeText.prototype["GetTextCStr"] = PdeText.prototype.GetText;

PdeText.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAction.prototype["GetJavaScriptCStr"] = PdfAction.prototype.GetJavaScript;

PdfAction.prototype["GetJavaScript"] = function() {
 const _len = this.GetJavaScriptCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetJavaScriptCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAction.prototype["GetDestFileCStr"] = PdfAction.prototype.GetDestFile;

PdfAction.prototype["GetDestFile"] = function() {
 const _len = this.GetDestFileCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDestFileCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAnnot.prototype["NotifyWillChangeCStr"] = PdfAnnot.prototype.NotifyWillChange;

PdfAnnot.prototype["NotifyWillChange"] = function(key) {
 const key_s = jsStringToCString(key);
 const _ret = this.NotifyWillChangeCStr(key_s);
 Module._free(key_s);
 return _ret;
};

PdfAnnot.prototype["NotifyDidChangeCStr"] = PdfAnnot.prototype.NotifyDidChange;

PdfAnnot.prototype["NotifyDidChange"] = function(key, err) {
 const key_s = jsStringToCString(key);
 const _ret = this.NotifyDidChangeCStr(key_s, err);
 Module._free(key_s);
 return _ret;
};

PdfMarkupAnnot.prototype["GetContentsCStr"] = PdfMarkupAnnot.prototype.GetContents;

PdfMarkupAnnot.prototype["GetContents"] = function() {
 const _len = this.GetContentsCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetContentsCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfMarkupAnnot.prototype["SetContentsCStr"] = PdfMarkupAnnot.prototype.SetContents;

PdfMarkupAnnot.prototype["SetContents"] = function(contents) {
 const contents_s = jsStringToCString(contents);
 const _ret = this.SetContentsCStr(contents_s);
 Module._free(contents_s);
 return _ret;
};

PdfMarkupAnnot.prototype["GetAuthorCStr"] = PdfMarkupAnnot.prototype.GetAuthor;

PdfMarkupAnnot.prototype["GetAuthor"] = function() {
 const _len = this.GetAuthorCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetAuthorCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfMarkupAnnot.prototype["SetAuthorCStr"] = PdfMarkupAnnot.prototype.SetAuthor;

PdfMarkupAnnot.prototype["SetAuthor"] = function(author) {
 const author_s = jsStringToCString(author);
 const _ret = this.SetAuthorCStr(author_s);
 Module._free(author_s);
 return _ret;
};

PdfMarkupAnnot.prototype["AddReplyCStr"] = PdfMarkupAnnot.prototype.AddReply;

PdfMarkupAnnot.prototype["AddReply"] = function(author, text) {
 const author_s = jsStringToCString(author);
 const text_s = jsStringToCString(text);
 const _ret = this.AddReplyCStr(author_s, text_s);
 Module._free(author_s);
 Module._free(text_s);
 return _ret;
};

PdfWidgetAnnot.prototype["GetCaptionCStr"] = PdfWidgetAnnot.prototype.GetCaption;

PdfWidgetAnnot.prototype["GetCaption"] = function() {
 const _len = this.GetCaptionCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetCaptionCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfWidgetAnnot.prototype["GetFontNameCStr"] = PdfWidgetAnnot.prototype.GetFontName;

PdfWidgetAnnot.prototype["GetFontName"] = function() {
 const _len = this.GetFontNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetFontNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfBaseDigSig.prototype["SetReasonCStr"] = PdfBaseDigSig.prototype.SetReason;

PdfBaseDigSig.prototype["SetReason"] = function(reason) {
 const reason_s = jsStringToCString(reason);
 const _ret = this.SetReasonCStr(reason_s);
 Module._free(reason_s);
 return _ret;
};

PdfBaseDigSig.prototype["SetLocationCStr"] = PdfBaseDigSig.prototype.SetLocation;

PdfBaseDigSig.prototype["SetLocation"] = function(location) {
 const location_s = jsStringToCString(location);
 const _ret = this.SetLocationCStr(location_s);
 Module._free(location_s);
 return _ret;
};

PdfBaseDigSig.prototype["SetContactInfoCStr"] = PdfBaseDigSig.prototype.SetContactInfo;

PdfBaseDigSig.prototype["SetContactInfo"] = function(contact) {
 const contact_s = jsStringToCString(contact);
 const _ret = this.SetContactInfoCStr(contact_s);
 Module._free(contact_s);
 return _ret;
};

PdfBaseDigSig.prototype["SetNameCStr"] = PdfBaseDigSig.prototype.SetName;

PdfBaseDigSig.prototype["SetName"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.SetNameCStr(name_s);
 Module._free(name_s);
 return _ret;
};

PdfBaseDigSig.prototype["SetTimeStampServerCStr"] = PdfBaseDigSig.prototype.SetTimeStampServer;

PdfBaseDigSig.prototype["SetTimeStampServer"] = function(url, user_name, password) {
 const url_s = jsStringToCString(url);
 const user_name_s = jsStringToCString(user_name);
 const password_s = jsStringToCString(password);
 const _ret = this.SetTimeStampServerCStr(url_s, user_name_s, password_s);
 Module._free(url_s);
 Module._free(user_name_s);
 Module._free(password_s);
 return _ret;
};

PdfBaseDigSig.prototype["SignDocCStr"] = PdfBaseDigSig.prototype.SignDoc;

PdfBaseDigSig.prototype["SignDoc"] = function(doc, path) {
 const path_s = jsStringToCString(path);
 const _ret = this.SignDocCStr(doc, path_s);
 Module._free(path_s);
 return _ret;
};

PdfDigSig.prototype["SetPfxFileCStr"] = PdfDigSig.prototype.SetPfxFile;

PdfDigSig.prototype["SetPfxFile"] = function(pfx_file, pfx_password) {
 const pfx_file_s = jsStringToCString(pfx_file);
 const pfx_password_s = jsStringToCString(pfx_password);
 const _ret = this.SetPfxFileCStr(pfx_file_s, pfx_password_s);
 Module._free(pfx_file_s);
 Module._free(pfx_password_s);
 return _ret;
};

PdfDoc.prototype["SaveCStr"] = PdfDoc.prototype.Save;

PdfDoc.prototype["Save"] = function(path, save_flags) {
 const path_s = jsStringToCString(path);
 const _ret = this.SaveCStr(path_s, save_flags);
 Module._free(path_s);
 return _ret;
};

PdfDoc.prototype["GetDocumentJavaScriptCStr"] = PdfDoc.prototype.GetDocumentJavaScript;

PdfDoc.prototype["GetDocumentJavaScript"] = function(index) {
 const _len = this.GetDocumentJavaScriptCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDocumentJavaScriptCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfDoc.prototype["GetDocumentJavaScriptNameCStr"] = PdfDoc.prototype.GetDocumentJavaScriptName;

PdfDoc.prototype["GetDocumentJavaScriptName"] = function(index) {
 const _len = this.GetDocumentJavaScriptNameCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDocumentJavaScriptNameCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfDoc.prototype["GetFormFieldByNameCStr"] = PdfDoc.prototype.GetFormFieldByName;

PdfDoc.prototype["GetFormFieldByName"] = function(buffer) {
 const buffer_s = jsStringToCString(buffer);
 const _ret = this.GetFormFieldByNameCStr(buffer_s);
 Module._free(buffer_s);
 return _ret;
};

PdfDoc.prototype["GetInfoCStr"] = PdfDoc.prototype.GetInfo;

PdfDoc.prototype["GetInfo"] = function(key) {
 const key_s = jsStringToCString(key);
 const _len = this.GetInfoCStr(key_s, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetInfoCStr(key_s, _ptr, _len);
 Module._free(key_s);
 return fromCString(_ptr, _len);
};

PdfDoc.prototype["SetInfoCStr"] = PdfDoc.prototype.SetInfo;

PdfDoc.prototype["SetInfo"] = function(key, info) {
 const key_s = jsStringToCString(key);
 const info_s = jsStringToCString(info);
 const _ret = this.SetInfoCStr(key_s, info_s);
 Module._free(key_s);
 Module._free(info_s);
 return _ret;
};

PdfDoc.prototype["GetLangCStr"] = PdfDoc.prototype.GetLang;

PdfDoc.prototype["GetLang"] = function() {
 const _len = this.GetLangCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetLangCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfDoc.prototype["SetLangCStr"] = PdfDoc.prototype.SetLang;

PdfDoc.prototype["SetLang"] = function(lang) {
 const lang_s = jsStringToCString(lang);
 const _ret = this.SetLangCStr(lang_s);
 Module._free(lang_s);
 return _ret;
};

PdfDoc.prototype["CreateNameObjectCStr"] = PdfDoc.prototype.CreateNameObject;

PdfDoc.prototype["CreateNameObject"] = function(indirect, value) {
 const value_s = jsStringToCString(value);
 const _ret = this.CreateNameObjectCStr(indirect, value_s);
 Module._free(value_s);
 return _ret;
};

PdfDoc.prototype["CreateStringObjectCStr"] = PdfDoc.prototype.CreateStringObject;

PdfDoc.prototype["CreateStringObject"] = function(indirect, value, hex) {
 const value_s = jsStringToCString(value);
 const _ret = this.CreateStringObjectCStr(indirect, value_s, hex);
 Module._free(value_s);
 return _ret;
};

PdfDoc.prototype["GetNameTreeCStr"] = PdfDoc.prototype.GetNameTree;

PdfDoc.prototype["GetNameTree"] = function(name, create) {
 const name_s = jsStringToCString(name);
 const _ret = this.GetNameTreeCStr(name_s, create);
 Module._free(name_s);
 return _ret;
};

PdfDoc.prototype["RemoveNameTreeCStr"] = PdfDoc.prototype.RemoveNameTree;

PdfDoc.prototype["RemoveNameTree"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.RemoveNameTreeCStr(name_s);
 Module._free(name_s);
 return _ret;
};

PdfDocTemplate.prototype["GetPropertyCStr"] = PdfDocTemplate.prototype.GetProperty;

PdfDocTemplate.prototype["GetProperty"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.GetPropertyCStr(name_s);
 Module._free(name_s);
 return _ret;
};

PdfDocTemplate.prototype["SetPropertyCStr"] = PdfDocTemplate.prototype.SetProperty;

PdfDocTemplate.prototype["SetProperty"] = function(name, value) {
 const name_s = jsStringToCString(name);
 const _ret = this.SetPropertyCStr(name_s, value);
 Module._free(name_s);
 return _ret;
};

PdfDocTemplate.prototype["GetRegexCStr"] = PdfDocTemplate.prototype.GetRegex;

PdfDocTemplate.prototype["GetRegex"] = function(name) {
 const name_s = jsStringToCString(name);
 const _len = this.GetRegexCStr(name_s, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetRegexCStr(name_s, _ptr, _len);
 Module._free(name_s);
 return fromCString(_ptr, _len);
};

PdfDocTemplate.prototype["SetRegexCStr"] = PdfDocTemplate.prototype.SetRegex;

PdfDocTemplate.prototype["SetRegex"] = function(name, pattern) {
 const name_s = jsStringToCString(name);
 const pattern_s = jsStringToCString(pattern);
 const _ret = this.SetRegexCStr(name_s, pattern_s);
 Module._free(name_s);
 Module._free(pattern_s);
 return _ret;
};

PdfAlternate.prototype["GetNameCStr"] = PdfAlternate.prototype.GetName;

PdfAlternate.prototype["GetName"] = function() {
 const _len = this.GetNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAlternate.prototype["GetDescriptionCStr"] = PdfAlternate.prototype.GetDescription;

PdfAlternate.prototype["GetDescription"] = function() {
 const _len = this.GetDescriptionCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDescriptionCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAlternate.prototype["GetFileNameCStr"] = PdfAlternate.prototype.GetFileName;

PdfAlternate.prototype["GetFileName"] = function() {
 const _len = this.GetFileNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetFileNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfAlternate.prototype["SaveContentCStr"] = PdfAlternate.prototype.SaveContent;

PdfAlternate.prototype["SaveContent"] = function(path) {
 const path_s = jsStringToCString(path);
 const _ret = this.SaveContentCStr(path_s);
 Module._free(path_s);
 return _ret;
};

PdfHtmlAlternate.prototype["SaveResourceCStr"] = PdfHtmlAlternate.prototype.SaveResource;

PdfHtmlAlternate.prototype["SaveResource"] = function(resource_name, path) {
 const resource_name_s = jsStringToCString(resource_name);
 const path_s = jsStringToCString(path);
 const _ret = this.SaveResourceCStr(resource_name_s, path_s);
 Module._free(resource_name_s);
 Module._free(path_s);
 return _ret;
};

PdfFont.prototype["GetFontNameCStr"] = PdfFont.prototype.GetFontName;

PdfFont.prototype["GetFontName"] = function() {
 const _len = this.GetFontNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetFontNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFont.prototype["GetFaceNameCStr"] = PdfFont.prototype.GetFaceName;

PdfFont.prototype["GetFaceName"] = function() {
 const _len = this.GetFaceNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetFaceNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFont.prototype["GetSystemFontNameCStr"] = PdfFont.prototype.GetSystemFontName;

PdfFont.prototype["GetSystemFontName"] = function() {
 const _len = this.GetSystemFontNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetSystemFontNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetValueCStr"] = PdfFormField.prototype.GetValue;

PdfFormField.prototype["GetValue"] = function() {
 const _len = this.GetValueCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetValueCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["SetValueCStr"] = PdfFormField.prototype.SetValue;

PdfFormField.prototype["SetValue"] = function(value) {
 const value_s = jsStringToCString(value);
 const _ret = this.SetValueCStr(value_s);
 Module._free(value_s);
 return _ret;
};

PdfFormField.prototype["GetDefaultValueCStr"] = PdfFormField.prototype.GetDefaultValue;

PdfFormField.prototype["GetDefaultValue"] = function() {
 const _len = this.GetDefaultValueCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDefaultValueCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetFullNameCStr"] = PdfFormField.prototype.GetFullName;

PdfFormField.prototype["GetFullName"] = function() {
 const _len = this.GetFullNameCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetFullNameCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetTooltipCStr"] = PdfFormField.prototype.GetTooltip;

PdfFormField.prototype["GetTooltip"] = function() {
 const _len = this.GetTooltipCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTooltipCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetOptionValueCStr"] = PdfFormField.prototype.GetOptionValue;

PdfFormField.prototype["GetOptionValue"] = function(index) {
 const _len = this.GetOptionValueCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetOptionValueCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetOptionCaptionCStr"] = PdfFormField.prototype.GetOptionCaption;

PdfFormField.prototype["GetOptionCaption"] = function(index) {
 const _len = this.GetOptionCaptionCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetOptionCaptionCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetWidgetExportValueCStr"] = PdfFormField.prototype.GetWidgetExportValue;

PdfFormField.prototype["GetWidgetExportValue"] = function(annot) {
 const _len = this.GetWidgetExportValueCStr(annot, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetWidgetExportValueCStr(annot, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfFormField.prototype["GetExportValueCStr"] = PdfFormField.prototype.GetExportValue;

PdfFormField.prototype["GetExportValue"] = function(index) {
 const _len = this.GetExportValueCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetExportValueCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdfPage.prototype["GetResourcesCStr"] = PdfPage.prototype.GetResources;

PdfPage.prototype["GetResources"] = function(res_type, create) {
 const res_type_s = jsStringToCString(res_type);
 const _ret = this.GetResourcesCStr(res_type_s, create);
 Module._free(res_type_s);
 return _ret;
};

PdfBookmark.prototype["GetTitleCStr"] = PdfBookmark.prototype.GetTitle;

PdfBookmark.prototype["GetTitle"] = function() {
 const _len = this.GetTitleCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTitleCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdfNameTree.prototype["LookupCStr"] = PdfNameTree.prototype.Lookup;

PdfNameTree.prototype["Lookup"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.LookupCStr(name_s);
 Module._free(name_s);
 return _ret;
};

PsRegex.prototype["SetPatternCStr"] = PsRegex.prototype.SetPattern;

PsRegex.prototype["SetPattern"] = function(pattern) {
 const pattern_s = jsStringToCString(pattern);
 const _ret = this.SetPatternCStr(pattern_s);
 Module._free(pattern_s);
 return _ret;
};

PsRegex.prototype["SearchCStr"] = PsRegex.prototype.Search;

PsRegex.prototype["Search"] = function(text, position) {
 const text_s = jsStringToCString(text);
 const _ret = this.SearchCStr(text_s, position);
 Module._free(text_s);
 return _ret;
};

PsRegex.prototype["GetTextCStr"] = PsRegex.prototype.GetText;

PsRegex.prototype["GetText"] = function() {
 const _len = this.GetTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PsRegex.prototype["GetMatchTextCStr"] = PsRegex.prototype.GetMatchText;

PsRegex.prototype["GetMatchText"] = function(index) {
 const _len = this.GetMatchTextCStr(index, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetMatchTextCStr(index, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["GetTypeCStr"] = PdsStructElement.prototype.GetType;

PdsStructElement.prototype["GetType"] = function(mapped) {
 const _len = this.GetTypeCStr(mapped, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTypeCStr(mapped, _ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["GetActualTextCStr"] = PdsStructElement.prototype.GetActualText;

PdsStructElement.prototype["GetActualText"] = function() {
 const _len = this.GetActualTextCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetActualTextCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["SetActualTextCStr"] = PdsStructElement.prototype.SetActualText;

PdsStructElement.prototype["SetActualText"] = function(alt) {
 const alt_s = jsStringToCString(alt);
 const _ret = this.SetActualTextCStr(alt_s);
 Module._free(alt_s);
 return _ret;
};

PdsStructElement.prototype["GetAltCStr"] = PdsStructElement.prototype.GetAlt;

PdsStructElement.prototype["GetAlt"] = function() {
 const _len = this.GetAltCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetAltCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["SetAltCStr"] = PdsStructElement.prototype.SetAlt;

PdsStructElement.prototype["SetAlt"] = function(alt) {
 const alt_s = jsStringToCString(alt);
 const _ret = this.SetAltCStr(alt_s);
 Module._free(alt_s);
 return _ret;
};

PdsStructElement.prototype["GetTitleCStr"] = PdsStructElement.prototype.GetTitle;

PdsStructElement.prototype["GetTitle"] = function() {
 const _len = this.GetTitleCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetTitleCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["SetTitleCStr"] = PdsStructElement.prototype.SetTitle;

PdsStructElement.prototype["SetTitle"] = function(title) {
 const title_s = jsStringToCString(title);
 const _ret = this.SetTitleCStr(title_s);
 Module._free(title_s);
 return _ret;
};

PdsStructElement.prototype["GetAbbreviationCStr"] = PdsStructElement.prototype.GetAbbreviation;

PdsStructElement.prototype["GetAbbreviation"] = function() {
 const _len = this.GetAbbreviationCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetAbbreviationCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["GetIdCStr"] = PdsStructElement.prototype.GetId;

PdsStructElement.prototype["GetId"] = function() {
 const _len = this.GetIdCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetIdCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["SetIdCStr"] = PdsStructElement.prototype.SetId;

PdsStructElement.prototype["SetId"] = function(id) {
 const id_s = jsStringToCString(id);
 const _ret = this.SetIdCStr(id_s);
 Module._free(id_s);
 return _ret;
};

PdsStructElement.prototype["GetLangCStr"] = PdsStructElement.prototype.GetLang;

PdsStructElement.prototype["GetLang"] = function() {
 const _len = this.GetLangCStr(0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetLangCStr(_ptr, _len);
 return fromCString(_ptr, _len);
};

PdsStructElement.prototype["SetLangCStr"] = PdsStructElement.prototype.SetLang;

PdsStructElement.prototype["SetLang"] = function(alt) {
 const alt_s = jsStringToCString(alt);
 const _ret = this.SetLangCStr(alt_s);
 Module._free(alt_s);
 return _ret;
};

PdsStructElement.prototype["CreateStructElementCStr"] = PdsStructElement.prototype.CreateStructElement;

PdsStructElement.prototype["CreateStructElement"] = function(type, parent, index) {
 const type_s = jsStringToCString(type);
 const _ret = this.CreateStructElementCStr(type_s, parent, index);
 Module._free(type_s);
 return _ret;
};

PdsStructElement.prototype["SetTypeCStr"] = PdsStructElement.prototype.SetType;

PdsStructElement.prototype["SetType"] = function(type) {
 const type_s = jsStringToCString(type);
 const _ret = this.SetTypeCStr(type_s);
 Module._free(type_s);
 return _ret;
};

PdsClassMap.prototype["GetAttrObjectCStr"] = PdsClassMap.prototype.GetAttrObject;

PdsClassMap.prototype["GetAttrObject"] = function(class_name, index) {
 const class_name_s = jsStringToCString(class_name);
 const _ret = this.GetAttrObjectCStr(class_name_s, index);
 Module._free(class_name_s);
 return _ret;
};

PdsClassMap.prototype["GetNumAttrObjectsCStr"] = PdsClassMap.prototype.GetNumAttrObjects;

PdsClassMap.prototype["GetNumAttrObjects"] = function(class_name) {
 const class_name_s = jsStringToCString(class_name);
 const _ret = this.GetNumAttrObjectsCStr(class_name_s);
 Module._free(class_name_s);
 return _ret;
};

PdsRoleMap.prototype["DoesMapCStr"] = PdsRoleMap.prototype.DoesMap;

PdsRoleMap.prototype["DoesMap"] = function(src, dst) {
 const src_s = jsStringToCString(src);
 const dst_s = jsStringToCString(dst);
 const _ret = this.DoesMapCStr(src_s, dst_s);
 Module._free(src_s);
 Module._free(dst_s);
 return _ret;
};

PdsRoleMap.prototype["GetDirectMapCStr"] = PdsRoleMap.prototype.GetDirectMap;

PdsRoleMap.prototype["GetDirectMap"] = function(type) {
 const type_s = jsStringToCString(type);
 const _len = this.GetDirectMapCStr(type_s, 0, 0);
 if (_len == 0) return "";
 const _ptr = allocForWideString(_len);
 const _ret = this.GetDirectMapCStr(type_s, _ptr, _len);
 Module._free(type_s);
 return fromCString(_ptr, _len);
};

PdsStructTree.prototype["CreateStructElementCStr"] = PdsStructTree.prototype.CreateStructElement;

PdsStructTree.prototype["CreateStructElement"] = function(type, index) {
 const type_s = jsStringToCString(type);
 const _ret = this.CreateStructElementCStr(type_s, index);
 Module._free(type_s);
 return _ret;
};

PsAccountAuthorization.prototype["AuthorizeCStr"] = PsAccountAuthorization.prototype.Authorize;

PsAccountAuthorization.prototype["Authorize"] = function(email, serial_number) {
 const email_s = jsStringToCString(email);
 const serial_number_s = jsStringToCString(serial_number);
 const _ret = this.AuthorizeCStr(email_s, serial_number_s);
 Module._free(email_s);
 Module._free(serial_number_s);
 return _ret;
};

PsStandardAuthorization.prototype["ActivateCStr"] = PsStandardAuthorization.prototype.Activate;

PsStandardAuthorization.prototype["Activate"] = function(serial_number) {
 const serial_number_s = jsStringToCString(serial_number);
 const _ret = this.ActivateCStr(serial_number_s);
 Module._free(serial_number_s);
 return _ret;
};

PsImage.prototype["SaveCStr"] = PsImage.prototype.Save;

PsImage.prototype["Save"] = function(path, params) {
 const path_s = jsStringToCString(path);
 const _ret = this.SaveCStr(path_s, params);
 Module._free(path_s);
 return _ret;
};

PsImage.prototype["SaveRectCStr"] = PsImage.prototype.SaveRect;

PsImage.prototype["SaveRect"] = function(path, params, dev_rect) {
 const path_s = jsStringToCString(path);
 const _ret = this.SaveRectCStr(path_s, params, dev_rect);
 Module._free(path_s);
 return _ret;
};

Pdfix.prototype["OpenDocCStr"] = Pdfix.prototype.OpenDoc;

Pdfix.prototype["OpenDoc"] = function(path, password) {
 const path_s = jsStringToCString(path);
 const password_s = jsStringToCString(password);
 const _ret = this.OpenDocCStr(path_s, password_s);
 Module._free(path_s);
 Module._free(password_s);
 return _ret;
};

Pdfix.prototype["OpenDocFromStreamCStr"] = Pdfix.prototype.OpenDocFromStream;

Pdfix.prototype["OpenDocFromStream"] = function(stream, password) {
 const password_s = jsStringToCString(password);
 const _ret = this.OpenDocFromStreamCStr(stream, password_s);
 Module._free(password_s);
 return _ret;
};

Pdfix.prototype["CreateFileStreamCStr"] = Pdfix.prototype.CreateFileStream;

Pdfix.prototype["CreateFileStream"] = function(path, mode) {
 const path_s = jsStringToCString(path);
 const _ret = this.CreateFileStreamCStr(path_s, mode);
 Module._free(path_s);
 return _ret;
};

Pdfix.prototype["RegisterPluginCStr"] = Pdfix.prototype.RegisterPlugin;

Pdfix.prototype["RegisterPlugin"] = function(plugin, name) {
 const name_s = jsStringToCString(name);
 const _ret = this.RegisterPluginCStr(plugin, name_s);
 Module._free(name_s);
 return _ret;
};

Pdfix.prototype["GetPluginByNameCStr"] = Pdfix.prototype.GetPluginByName;

Pdfix.prototype["GetPluginByName"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.GetPluginByNameCStr(name_s);
 Module._free(name_s);
 return _ret;
};

Pdfix.prototype["CreateCommandCStr"] = Pdfix.prototype.CreateCommand;

Pdfix.prototype["CreateCommand"] = function(name) {
 const name_s = jsStringToCString(name);
 const _ret = this.CreateCommandCStr(name_s);
 Module._free(name_s);
 return _ret;
};

PdfHtmlDoc.prototype["SaveCStr"] = PdfHtmlDoc.prototype.Save;

PdfHtmlDoc.prototype["Save"] = function(path, params, cancel_proc, cancel_data) {
 const path_s = jsStringToCString(path);
 const _ret = this.SaveCStr(path_s, params, cancel_proc, cancel_data);
 Module._free(path_s);
 return _ret;
};

function fromWideChar(ptr, length) {
 let string = "";
 for (let i = 0; i < length; i++) {
  string += String.fromCharCode(Module.getValue(ptr + 4 * i, "i32"));
 }
 Module._free(ptr);
 return string;
}

function fromUTF8(ptr, length) {
 let string = Module.UTF8ToString(ptr, length);
 Module._free(ptr);
 return string;
}

function fromCString(ptr, length) {
 return fromWideChar(ptr, length);
}

function allocForWideString(length) {
 return Module._malloc(length * 4);
}

function allocForUTF8String(length) {
 return Module._malloc(length);
}

function allocForCString(length) {
 return allocForWideString(length);
}

function jsStringToCString(string) {
 const length = Module.lengthBytesUTF32(string) + 4;
 var ptr = Module._malloc(length);
 const written = Module.stringToUTF32(string, ptr, length);
 return ptr;
}

PsStream.prototype["ReadToArrayBuffer"] = function(offset, buffer, size) {
 const ptr = Module._malloc(size);
 var arrayView = new Uint8Array(Module.HEAP8.buffer, ptr, size);
 this.Read(offset, ptr, size);
 const retArray = new Uint8Array(buffer);
 retArray.set(arrayView, offset);
 Module._free(ptr);
};

PsStream.prototype["WriteFromArrayBuffer"] = function(offset, buffer, size) {
 var ptr = Module._malloc(buffer.byteLength);
 var arrayView = new Uint8Array(Module.HEAPU8.buffer, ptr, buffer.byteLength);
 arrayView.set(new Uint8Array(buffer));
 this.Write(offset, ptr, size);
 Module._free(ptr);
};


  return PDFIX_WASM.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
      module.exports = PDFIX_WASM;
    else if (typeof define === 'function' && define['amd'])
      define([], function() { return PDFIX_WASM; });
    else if (typeof exports === 'object')
      exports["PDFIX_WASM"] = PDFIX_WASM;
    